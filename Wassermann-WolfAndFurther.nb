(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    481607,       9439]
NotebookOptionsPosition[    464377,       9202]
NotebookOutlinePosition[    465022,       9223]
CellTagsIndexPosition[    464979,       9220]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Numerical solution of Wassermann - Wolf equations with Mathematica\
\>", "Title",
 CellChangeTimes->{{3.801264499180184*^9, 3.801264529239534*^9}, 
   3.801264986569459*^9, {3.803257614432056*^9, 
   3.803257617349814*^9}},ExpressionUUID->"100b157e-2121-4a71-9512-\
4e6a3aebd8e3"],

Cell["\<\
Takatoshi Yamada@Ayase Co.,Ltd.
e - mail : takatoshi.yamada@ayasecorporation.com
web cite : https : // www.ayasecorporation.com
\
\>", "Author",
 CellChangeTimes->{{3.817423860485422*^9, 3.8174238828510113`*^9}, {
  3.817432293219269*^9, 3.817432293844391*^9}, {3.8539653759409113`*^9, 
  3.853965381700459*^9}},ExpressionUUID->"23ebdb47-8f8b-4a16-885e-\
cfeb9a1da06d"],

Cell[CellGroupData[{

Cell["Contents", "Chapter",
 CellChangeTimes->{{3.8012559642405787`*^9, 3.801255971505711*^9}, {
  3.825989096388894*^9, 
  3.8259890977544928`*^9}},ExpressionUUID->"fdc07bea-1d93-406a-a43e-\
50f3ee1849df"],

Cell["\<\
\t1.\tDeriving Wassermann-Wolf equations from Snell\[CloseCurlyQuote]s law
\t2.\texplicit equations for infinite conjugate singlet
\t3.\texplicit equations for infinite conjugate singlet with a cover glass 
\t4.\texplicit equations for finite conjugate singlet without cover glasses
\t5.\texplicit equations for finite conjugate singlet with cover glass in the \
image space
\t6.\texplicit equations for finite conjugate singlet with cover glass in the \
object space
\t7.\texplicit equations for finite conjugate singlet with cover glass in \
both spaces
\t8.\texplicit equations for afocal singlet
\t9.\texplicit equations for one-dimensional gaussian-to-tophat converter
\t10.\texplicit equations for pseudo-Bessel beam generator\
\>", "Text",
 CellChangeTimes->{{3.825989113995595*^9, 3.825989153850026*^9}, {
  3.825989187568891*^9, 3.825989192412738*^9}, {3.825989258633582*^9, 
  3.825989262567766*^9}, {3.825989335230618*^9, 
  3.8259893748831863`*^9}},ExpressionUUID->"53269677-5849-43a7-ab24-\
e014784f5935"]
}, Open  ]],

Cell[CellGroupData[{

Cell["notations", "Chapter",
 CellChangeTimes->{{3.8012559642405787`*^9, 
  3.801255971505711*^9}},ExpressionUUID->"1abd5251-7232-40ab-8344-\
773d55a1a804"],

Cell["\<\
in WW (Wassermann-Wolf 1949), symbols concerning the second surface are \
specified by adding dash \"'\" but in Mathematica \"'\" symbol is used for \
derivative of Lagrange' s notation.
Therefore, subscript is used for assigning surfaces, e.g., \
\>", "Text",
 CellChangeTimes->{{3.8012559786521463`*^9, 3.801256079790494*^9}, {
  3.801256191868935*^9, 3.801256274652034*^9}, {3.801256617088955*^9, 
  3.801256634575081*^9}, {3.8026481933739634`*^9, 
  3.802648195072198*^9}},ExpressionUUID->"1f2736e8-5923-456f-9f87-\
82199185a64f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], ",", 
    RowBox[{
     SubscriptBox["\[Omega]", "s"], "[", "t", "]"}], ",", 
    RowBox[{
     SubscriptBox["\[Omega]", "2"], "[", "t", "]"}]}], "}"}], ";"}]], "Input",\

 CellChangeTimes->{{3.801254695275238*^9, 3.801254702723093*^9}, {
   3.801256331673078*^9, 3.801256393451297*^9}, {3.801257005574644*^9, 
   3.801257005773879*^9}, 3.804219393004457*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"f2f63c81-b461-486b-b3e1-9bd21733916a"],

Cell["mean", "Text",
 CellChangeTimes->{{3.8012570153322363`*^9, 
  3.8012570200848923`*^9}},ExpressionUUID->"e00b74c5-dda6-448c-8c99-\
e9702cc8e977"],

Cell[BoxData[
 RowBox[{"\[Omega]", ",", 
  SuperscriptBox["\[Omega]", "*"], ",", 
  RowBox[{"\[Omega]", "'"}]}]], "Text",
 CellChangeTimes->{{3.8012570294739017`*^9, 3.801257084609939*^9}, 
   3.8012593893415318`*^9},ExpressionUUID->"a76c8c44-8574-4de2-a129-\
4531b10cf819"],

Cell["in WW.", "Text",
 CellChangeTimes->{{3.801257087966139*^9, 
  3.801257092731635*^9}},ExpressionUUID->"fe7660ab-3374-49ad-beb4-\
cfb855dcfa94"],

Cell["\<\
And all Mathematica symbols defined by the author are started by small case \
characters because we can easily distinguish them from system symbols.\
\>", "Text",
 CellChangeTimes->{{3.801257483354566*^9, 3.801257526112631*^9}, {
  3.8012575563019867`*^9, 3.8012575870228977`*^9}, {3.801257640664218*^9, 
  3.8012576775043917`*^9}, {3.801264175448812*^9, 
  3.801264358305357*^9}},ExpressionUUID->"0a832971-77dc-4f56-bb6a-\
d8e4922a0f3c"],

Cell["\<\
In Mathematica, dependent variables are better to be expressed explicitly \
with independent variable,e.g.,\
\>", "Text",
 CellChangeTimes->{{3.801257483354566*^9, 3.801257526112631*^9}, {
  3.8012575563019867`*^9, 3.8012575870228977`*^9}, {3.801257640664218*^9, 
  3.8012576775043917`*^9}, {3.801264175448812*^9, 3.801264346740685*^9}, {
  3.8012643912684307`*^9, 
  3.801264404598289*^9}},ExpressionUUID->"33c2c2a1-bfcd-4ca4-bed9-\
25337d9623db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]", "[", "t", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.801257483354566*^9, 3.801257526112631*^9}, {
   3.8012575563019867`*^9, 3.8012575870228977`*^9}, {3.801257640664218*^9, 
   3.8012576775043917`*^9}, {3.801264175448812*^9, 3.801264346740685*^9}, {
   3.8012643912684307`*^9, 3.801264406276596*^9}, 3.804219395951193*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"27a6f8fd-7bbd-40df-9afe-73794735c52e"],

Cell["not", "Text",
 CellChangeTimes->{{3.801257483354566*^9, 3.801257526112631*^9}, {
  3.8012575563019867`*^9, 3.8012575870228977`*^9}, {3.801257640664218*^9, 
  3.8012576775043917`*^9}, {3.801264175448812*^9, 3.801264346740685*^9}, {
  3.8012643912684307`*^9, 
  3.8012644016734943`*^9}},ExpressionUUID->"b6f9a14e-429a-4448-b01d-\
ad77e4bea4ef"],

Cell[BoxData[
 RowBox[{"\[Omega]", ";"}]], "Input",
 CellChangeTimes->{{3.801257483354566*^9, 3.801257526112631*^9}, {
   3.8012575563019867`*^9, 3.8012575870228977`*^9}, {3.801257640664218*^9, 
   3.8012576775043917`*^9}, {3.801264175448812*^9, 3.801264346740685*^9}, {
   3.8012643912684307`*^9, 3.8012644115744677`*^9}, 3.804219398639965*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"17a7b5e6-f8f0-46ca-8abc-7fada890d719"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deriving Wassermann - Wolf equation", "Chapter",
 CellChangeTimes->{{3.801254465908772*^9, 3.8012544751886873`*^9}, {
  3.801254559042756*^9, 
  3.8012545631971197`*^9}},ExpressionUUID->"cba5e9bd-930c-49bd-96f9-\
bf10d391fc73"],

Cell[CellGroupData[{

Cell["preliminarily, Snell\[CloseCurlyQuote]s law in parametric surface \
expression", "Subsection",
 CellChangeTimes->{{3.801254582549469*^9, 3.801254613523655*^9}, {
   3.8012565756823673`*^9, 3.801256637210421*^9}, 3.801256692719613*^9, {
   3.803249361295454*^9, 3.803249403431693*^9}, {3.803249463322434*^9, 
   3.803249501714611*^9}, {3.803249579036972*^9, 3.8032495997097473`*^9}, {
   3.8032496839701023`*^9, 3.803249735583762*^9}, {3.803249975497036*^9, 
   3.803250012793969*^9}, 
   3.8032570959280148`*^9},ExpressionUUID->"39e83f7b-ad79-49ea-8583-\
c8f7ad216744"],

Cell[BoxData[
 GraphicsBox[InsetBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
fd0mOCREfkbbtm0zf0gAAADzEMeK48eO/c8cCveZQwEwDY1G09qyebnKLts1
trt27S7xWwsXLJDep1/fWSbYTJvm4elpYFAF8YHQs1tXZX33IjjY+G4rzvv3
H+STm+LfIYMGltjs0qXL8jMy1XyCAAAAldbDR4/kCYJHjxwZ8fGj2omA6qBL
h/bz583Tv/2pU6eHDh5U4rcyMzPl4f0PHDhY7Lt9e/fyf/bM8KD/w87OTlnc
OTufML7PCnXl6lVlYGlyhK/NmztXatCqaZPExCQzhwQAADA/rVYrXwMmlnXr
1n3+/FntUEDVtnnzlibf1dHofX1jckpKh7ZtSptDXDwuv0OVc96dOn26d8+e
xqe9fdtLWStNnjjR+D4r2pzZs+XAC+bPL7FNVlaWVccOUpvpNjZmTggAAKCi
lJQUcYwkHQg1+77epUuX1U4EVGGPHj8Wb6V798px2fPKFSv79+1b2nddXM7J
5czqVatfvX594sRJk1xzmJSUJM/FIJaWPzaO+fTJyD4rmijcunRoL2d+FhBQ
YrOgF8FyG7G7zBwSAABAdS9fverds6c8ukIlvwEHqLQ0Go1FnVo66rWvxccn
9Oj6r7Dw8NIaLFmy5MvtZv8zaYJY7j94YHxU5XTqYnF39zC+z4rm5+8vBx41
YkRpzU6dOi03Ex9u5kwIAABQeVy+cqVZw/rSQdGc2bOTU1LUTgRUPdLo/T4+
D/VfpbCwUMdkdpGRUZaNGjg7n7h1+/bdu/fKNf9Cac6dc1UWd9Is4ZXfnj2O
cubTZ86U1mzalClVZSxQAACACpWbm6scb+HgwUPMoQCUS+i7d+K907tnTxPO
Pz7dxsbV9bypehMFY+O6teW3eZcO7bOyskzVeYUaM2qUHFs8ixLbpKal/dqq
pdRm6dKl8uOXLl0ubb54AACA6k0cOI0dPVo6QGr7zxYPHvionQioSpYtW2b8
WJQ5OTnyuSenY8dKG0ukvETVKc+QIi1V5Q0e8fGjnHnShAmlNfN/9kxuJs9V
8fr1myr0TAEAACqCj89D5RwKHyMj1U4EVA3h4RHSGyfohYG3skojZ3az6pKW
lib+e/Sok6gZTZLt4MFDyuJux44dJunWDG7cvCnHPu7sXFqzw4ePyM2kmV9S
UlKqxNQPAAAAFa2oqOjQocPywZKdnV1ubq7aoYAqYPfuPeItY9WxQ3pGhgGr
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
zGfOmCGOt+PiS56BIiEhwbJRA7n97FmlDnRz5uxZ+Ta95cuXS/OhG6moqEj0
8+FD2FM/Pw9PT6djxzZt2iwyiFJU+SxKXFo1bTJ08KCFCxbs2LHj5MlT4rmL
g8yPkZFZWVmUfupycTknfkCrVpYx7igqocjIKPkt1rT+tzGfPuloPHfOHOkP
RzraiB6Ub9vQ0LJn4gAAAJJpU6aI3563busa8lEV0gxKA62t1Q5SPYmK5vSZ
M6J8Vh5EtWlhuX79elFZ5+SUMT3Wli1blCvqPjeXkZG5etVqqWXjurVFVVVx
lVRhYWFqamrou3ePH/u6ubkfPnzEzs5uuo3NH71+b1Kvru7Sr+0/W4wcPnzx
4sX2Dg5i59y+7RUYFBQVHV3m3oBJHHd2Fj8F8fNSOwjK7ejR/9yKO26Mrrlm
CgoKxJtRNDt2/LiOZtJgO/IbMzVN18QlAABAac7s2eIXqLu7h9pBinsRHCyC
9ej6L86qmIqofZ4HBu7atbubVRdlXdO3d6+DBw+9fPVKz10dFh6uXF3PA/L3
7z8MHjig0f8MmOD7RNd0ihVBHFgmJye/DQ31efjo0uUr4imvW7du2pQpPbt1
FVWn7tKvQ9s2Y0aNWr58udh7Li7nvO54i9fnp9hYhn0woQMHDopdvWPHDrWD
oNym29jIb5Zt27bpaBkVHS01e/3mjY5m4r2m5918AACgGOmmCdfzRk1UVBGk
u/VbWzavPPNiV1EZGZleXndWrlj50w8NlTWLzdSpFy9eio2NK2+HyhttmjWs
Hx9fjimMb9y82aaFpbTulEmTDNh6RdBoNAmJia9fv7n/4IHYJ/v27bNdYzt5
4kRRh0ozNZe2WNSu1aVD+wnjxq1etXrv3r3ifXTv3v2Ql6/i4uN53ZaXg8Mu
sUvFzlc7CMonKyurc/vf5DeF7mnvHj56VObFmcnJycoPq1OnT5s6MgAA1Zmd
nZ34BXrc2VntIMXJ91+I8kTtLFVSVHS0i8u5iePHF7v7zNbWVtQg2dnZhnUb
HBKi7PDQocPl7SE/P3/Xrt1yD0eOHDUsiXnkaTRxcXEhIS/v3r3n6nre0dFx
1cpVoqBTHtCWXPrVqSXKQ1Ekih2+/8ABUTY+eOAjSkhRSIo9oPbTqow2b/5y
0a+Tk5PaQVA+ER8/Kl/5usfLlS7tXr9+vY42J0+eUv4FqbS7gAEAQImkv5nv
3btX7SDFpaWlSVfNJSYmqZ2lyigsLAx6ESxqkJ7duiqPuHr16LF//35Rmhk/
cYDNtGlyt51+a5eVlWVYP6JokroaOniQkZHUkpubG/Pp04vg4Dve3qKUFkXr
8uXLR48c2f6X1rpLvybf1RE/oGlTpqxbt+7gwUOXr1x5+OjRm7dvk5OTa/J8
7itXrBQ759w5V7WDoHzev/+gfHnrmPkuT6MRn0W6z/Hl5OQoh/DduXNnxaQG
AKDaOnLkqPgdun37drWDFCdKFWny64iICLWzVHaiyBIlxprVa1r+2Fh5oDV5
4kRX1/MxMTGm2pA0qKm8iM6N7ND/2bOw8HCTZKtUxDFqVHR0YFDQrdu3T585
Y29vv3jRohHDhsnXppa2NK3/7R+9fp8xfbqdnd3Ro05ubu6+vk/evX+fmppa
7edznzljhtgD165fVzsIyudjZOR/nb97WOpsO9KsprrP8e3fv1/5F6TMTK7f
AACgfM5fuCB+jYrSQO0gJejR9V8i2/PAQLWDVFKicBM/vimTJikPrlo0thA/
Ta873iY/LtJqtUMGDZQ31Ld3r5p8sskwYh+KYlwcDz8LCBDHuidOnNy+ffuC
+fPFjm3VtInu0s+yUYP+ffvOnjVr8+YtTseOeXh6PvXz+xAWlp6eXj3mc580
YYJ4mg8e+KgdBOWTm5srz3QpFmfnEyU2KywstP6jj3RDa2n13ePHvsrXvI4J
8gAAQGnEUaL4NTpv7ly1g5Rg3JgxItsdb2+1g1QiokAICXm5f/9+aYxxeRG1
8J49jkFBLyruLM+Vq1eVW7x+/UZFbEWUKvsPHDh61Knan64qRvxk0zMywsLD
/fz8Pa9dO3b8+JYtW+bOmTPQ2lo51WCJiyjqBw8cMH/evK1bt4qja/Gj8X/2
LCIiQtT4xcZEjY2Ns7W1jYyKUutp6jB08CDxXAKDgtQOgnITLyr51ThsyJAS
26xauUp8197eXvx7+PCRrxu8CA5uWv9buR/O5AIAYJj7Dx40KmvGIrUsXbqU
+3EkOTk5/z97d/5XY/r/AfzPMDQfZjCaaAzjY98akt3YJdklhEiSLSRJUdZW
EUWlkpRWS0WlpJT2TYv2fVE51ffxvcw9n9s1p9PpVKdznVOv5+P+gbqu+37f
p/vc53qf+76v96vw8LNnz/4xToUe2G/dvNnd3UMGw/UvX77QD8Vorl/fTxsq
LS3japTPnzPnbWxsP21FsXwr6ldTk5WVHR0T8/SpP0l+zS+Y79u7d/mSxWN/
Gi4+9ZukOm7DunWGR45cuXKF9OXqochhjbmvX79yD42mpoqbNh/kU3ZOzuih
32eatbG5Sv+2tq5uv54e+bm3t09NTQ3XJiU1lW/Q3t5Oz6lCFnK6E79FctJ7
7Otra2vr4/NYiregAwAADADvExJG/T3/ButARLC2sSGxXb16jXUgzJSUlJAR
ka6ODj3yIemPsbFxSGgoGTXJLBKu9vT3R2zETpHXR2Fhz/k0dveuXZg9TwyS
+lVWVWVkZr6Jinri5+fo6GRqaqq7ezd5R3dbz33apIlamppGRkZkNP7g4UPy
sicmfiBDZZLLy35HamtruadH8/Pl8doidIuuSE6WpYsWXjC7YH7BXFtLi/uJ
rZ0d1/LggQPcT/bo6pKTPDmbTfl9PN+RtBdfNoUc84f09YUO5qNHj7a0tspk
RwEAAORddk4O+XD87ZeRclip2fPRt2cDTUxMWAciaympqfb2DiuWLqEHMPPn
zCHj8Pj3CbJ/6q26unqS6jg+Ep2dO/t7i62trVx2z18OwOCtp8hxUl5ekZqW
RpJxH5/Hdnb2586d4xLnbuu5z54+bfOmTSeOn7h+/YaHh+eLly+TkpPJqLv/
zhJcPRSSk5J0tZ82Af3tfUKC0My93LJp40Z6GqX6+nqh76y4hRxykjx9qbl+
PWm8Y9s2Kyur/Xp6/MG8d8+e/tw5AAAAhUFGgNyHY3VNDetYhIWFPR/19ySQ
rAORhS9fvpBx+Pnz5+mvsrlvs13d3PI+fWIYGxnk0yElJn6QzXZJQsGPAyf8
OoZkGbLZ7gC2ZtVK8mK+i49va2v7mJLyKjz8kZfXrVu3Tp86vX3rVrVZM+m7
7Dov5LfzZs8mLUl70ov0JWsg6yktLWvtWwKelp5O1k9WLodfNEGPpKSmkgPD
0dGJnLjCIyK6StgzMjN9fB47ODjeu3f/1avwkhJx1+x4tra25CCkJ1XOyMjk
5yYKCgqWyi4AAAAotJbW1vFjRpNPRjl8hIErpU3GnAN4nsaysjLfJ0/09u3j
ppXjFuXhSkePHiVjlerqatYBfruwovyfYXxsx42PyziAt7GxZNhPNj1r6pRe
l9sDoqqqinter7Cwyzd7S0sLSavJW49k0x4eniS1P3H8xOZNm8iLL/6S32il
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
AyiE6pqaY8eOkfestY0N61j6xMnpNn/+6VHNO0tLSwnPXZcuXeKbkZervLyC
v9OVTtmuXLnS2Ngo1Leurn7W1Cl0S20trbKyMr5BfX09yfL430bHxPTiRQAA
AACQFt3du/mRycrlyzs6OlhHBACSqqqq+vr1K+so+oROjnZs2yZhr9TUNDrn
EnPLJT15C0ni9u3dO+X38V3dYBkeESHU/ejRo3QDvX37RJ4kbW1tRXYHAAAA
kCWh2sR+fk9ZRwQAg8sRAwP+FKSzc6eEvUhL+tyVmZXVVUtdHZ3v+d2wIWIe
o+OSRGdnZ34CYaHJOTdv2iQQCERupbm5OSsru4e7DgAAACBlevv28UOXpYsW
djV0AQBFQTIdjfnzrK2tW+SvhoJIFy9a8GehDevWSdIlLOw5nXaZm1/squXz
Fy8653E7tm17FR5eUFhYWVWVkZl58+ZNLukj/83OyRn1v2lePuXnr1uzmu+l
/J9hhYVF0ttvAAAAAClL/JBEj3l8fB6zjggA+iry9T/T4U6bNJHkQazD6V7A
s2f0iSg5+aP49s3NzSSB5duPHzO6rLxcZEuBQLBi6RJ65WN/Gh4Z+bpzy7T0
dBIG+QdJMLu6uuficq/vOwsAAADQfw4fOsQPXRbM+1MOKyYDQC9ER8eozZo5
iq+hkCN3NRRoFRUVE34dQ89e0tbWJqa9weHDdNp118Wlq5YPHj6kW05SHZeX
lydmzR0dHbdu3RKaKpNbtm/d2usdBAAAAJCB5I8p9OjF0/MR64gAQGpIqkIS
H/5ZszNnztTX17MOqkvOzs706Wjzpk2VVVWdm9XW1dHzQZFFY/68rm5Dra6p
ocvqjVEamp6RIUkwpOO5c+eE8ruVy5fLYalBAAAAAJ6hoSE/dJk3e3ZXdaMA
QHFVV1cbGRlxb3OVET96eHiyjqhLO7dvp/Mp5eFKF8wuvI2NLSoq+lxcHBsX
Z21j89svI4XSrtDQsK5WePnyZbpljyaPEpqck18OHzpUXl4hjd0FAAAAkKbU
tH+NXtwePGAdEQD0l5TU1JXLl3Nv9oXq6vHvE1hHJEJbWxt9x7gki96+fV2t
TegUt0dXt0fBbNuypauNjh465ObNm/hCDAAAAOTKcePj/HBl1tQpkhcUBgAF
9fSpP/+Y2349PbpCt/wIDgmZM2O6yMRq8njVv5Yto38iph7B7l276JYZmZmS
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
6FD5a/PatZ76ZxSBzqm+ozyvCCCWbZT5rqTTcFbduHlTeeLv+fMXlm3KI9/5
nzkjN+jY7uvc3Fz9NdtMeWfZokWLrLZ5//lOeRPiL/N/UW8svjy8C/t1akth
36V1q7+PofXqRrzSGLJcM98pf08ofnBraX5eBoBqa/PmLdKeUzlYQHZ2tpzm
Hjz8+1HVymF9Bvbvr7N/6ZaKvfv22b/0cnP//oMurq7Sknbu2FH80+iKAMBu
MjMzlaOY3QkJKdXsykvmrD7yQpnvLl2+rL9nk8kkPcZfms6cPWvZpjzynQgy
cgN396X6C9YvKyvr2bPngYFBfn7++/btP3jokPxbopjmzplrda7yznfiWC9C
dGBQkJ+///79IksdUl6fqWcIoVWrV8vtly5dtt3HR/6nCLCas2vmu/j4BOeG
DeQ2TvUdxQZgw5ICQPUhP/J6vJub8u/h4eHS3zt16KD8+6+//irvZv3PnNHs
PyEhwaGSXJxp6eixY/Lt9ioPcwOAyuVJaKi8J3esWUPsqEs1++rVa95FgBkz
LBso811pw6PyC/+uXbstG5RHvuvx3Xdyg5OnTpWqYHUhd++tWeMxbMiQhnU/
UJ6aNJvec767d/++h8fa4UOHKh8pYznpyXc5OTmdO3a0nPeH77/XU4me8e8s
h5sf0K/flatXS7XIAFBNHDh4SP5BzOz4Ll8RYfbc4+Dbd+Qd7E8//aT5FiIi
iZa9e/awc+nvizhySbclduv6jdG1AIB9BAYGyXvyLq6u+m++kygvLBw8cKBl
A2W+K+kZmyVRjq22fPlyywZ2z3eZmZny9SpiEtmnVAWX5PyFC107d1JJT4bk
u4CAS2ZPvyljvhOCg2+bzdjyv03Uh8OQ6cl3wr59+y3La9282d59+/Ly8nQu
OwBUeaFPn8o7SZHmzF6Vn7UScOmS8u+JSUnyXJ07dtR8F5EBHbQen1Xxhb98
KRbc6CoAwD6UT8AYMmhQaWdX3q3Wp1dPywb/yHfBt0vV+apVq+R5rV44Yfd8
FxMTozy5VtII7/qlpqaKtWoWRhp8WKt3zx5zZs9xX+K+ZcvWY76+EydMeJ/5
Lj09XRmmpKl+7Zq9enSfPXu2qGrz5i2iKuUoFTrz3RvFDfvSpP9x2TrznXAr
OFgEOsuU59ywgdXreAGgGpJ3qmKHafagyMLCwm+7dHZ4O2hRZmam8iVlvmvf
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
HdWNXLxXQexzjaV7eVdz6Yr35Od9xLan3pW+jXxNXrDG2NbFB/TzPjr2dWtM
EffVuyqIflq8wqXN4O32MLBXj+LzdzvWZh75491G7repKC1evav8Bxd1beRB
R9X7eVNgyrm8V/uAfmy1KTRQvafCxMjitaS+rxOvnvAqTIpS78r07Lp4R+2N
/NIeUb96V2IN6NrI719Q6WS7j09zp0btGtS+tOonjY3c16Mg5pnG0kXc072R
a+zJi49TyqWTPqlnN9TnAqo58WUypmHt6P/3/1hO+Q/VrqbI3LfE6lyWU5zr
f9QPwYnjXHR2lTy/r0o/4jtDzCfWl8VyEnt7la7EDkRnP2LtqX9XSVkwQGdX
ST+4qvQj1mFc+/o6u8o8qDaSrMg1OvsRk3pySd8wXWc/CYObqS3dmzfxfb/Q
2VXa2u9V+jGF3Y7+//QuXd5tP5Wuso6u1NmP2MiL8rJVukp0072Rz+mp0o/Y
2GKb1NHZlTh0qnQl/hfQ2Y/430rkU5WuUn4dqHczGP6lSj8icsZ921hnV5n7
3VV6Et9kdPYjJvVfadI3zdTZT3zPz9SW7s2bhBGtdHaV5jFJpZ+CVw/0L534
dqTSlfiqprOf2DYOIgWodJU0/RudXSXP7qHSj/jar38jF18RVboS33t19hPj
WFNjI180SGdXCcNaqPQjxHd30tlVxs4FKv2IgKB/M9DYyDfP0rsZtKuvvnSJ
Y9qazdK9TVOR7/7s9rnZ31NXjVfppzAuTP/S5f61X6UrkQ70bgaff6geN8T+
WWdXGht5Vqr+rysiF6t0lXvdV++K+r//V2MjXzEm+v/Rt5GPaKXSjxD3zSc6
qxI7WLWl+2u/9U+qYW313RFQ3RUVpvw2OL7X5wmjWstT/ID/Jk3uVJii9kgl
kf5EM3EgU85oPo1sHd/DKc1rinoJmYd+F81EY7WuhrcUReZcVB2xpbDAclms
TIObJY79qiDqkUpPpoh7xfUMaa7eVXxv59Slw98UFal0lXN2W3FJI1qpdTWi
lVgDIk2oryjxlU98gdRYOvGJDGuR//iK2npKjEz8oWP8wKYaS9e/iThCqf+A
nHvjuGgmPh3NzSBj+8/qSyca6NgMvhRbnfopiaLstOR5veP7NdFYUYOaipUg
VoVKV/mPr0rrU2NF9fxMPXIKWcdW69oMejtnn9mq1lFRYerSEaKZxtINbZ4w
uo3p5V2VnsT/AonjXLQ38j7O4n8r9Z9oxP+YIp5rbwY9P1P/5UFIWze1eCPX
2gxE2fkPLqqtp5SYpCmddW3ks7oXZSSpdJV362RxP+JNtTby9C0/qS9dxu6F
uvZ1/Zqoh7KivKzk+X11beQT2qlfGCAyQvEHN1RrM+j5WerKcepLl/WnZ/HS
aW7kPT/L9tuk3lXq76O1N3Kx6Q5roX59SEHMs0Q3F7HP11i63s4pvw58Y8pT
6Srn8t7i/4V17Osy9y1RX7r0TT9qbwbDWoiNU/0KiqL0hKRpXYoPxOpL169J
0oyuorFKV3khZ4s3cs0Denen9A3T1Zcuc+9i0ezvzWBoc1He+EG9Rb4L+alf
fLdP323kPT8rPv2qoiC/eCMXOxb1pRvYVHzE6udMTS9uFX9wmpuB2Mh/H62+
dNkn1xcvheZG3t1JtFTvqngj19zXiZqHNjc9VxvFoDD2ReL4r7X3db2di38h
V93Ic68cLN4yNfd13T7N3POb+tKJ1Fa8GWhu5H2c1a+gKP5feJzLP5bu7aEk
9Y+x6gUAAAAAKA9paWlRUVHqP4Siwnr+/IX7EvdnzzSuOgYAAAAAVHBeXl7S
o1dWrVrFGAoAAAAAUHklJyfLYyh8/p/6fv6MoQAAAAAAldjNW7dcWreSUl6v
Ht1Dnz41uiIAAAAAgO127d5dv3ZNKeXNnTM3O1vtqdEAAAAAgIosIyPjp59+
kiLe1q3eRpcDAAAAACiT23fu/Pjjj6GhXKUJAAAAAAAAAAAAVFCpqal+fv7J
KSlGFwIAAAAAKJONGzc51Pwf54YN/M+cMboWAAAAAIDtnj571uwzJ+nRK717
9hD/NLoiAAAAAIDtdu3a7Vj7X1LKmzN7TkZGhtEVAQAAAABslJ6eLo+hUL92
zT179xpdEQAAAADAdqGhT3t26yalvHZt2gQH3za6IgAAAACA7fz8/J3qO0op
z23cuNjYOKMrAgAAAADYKD8//48//pAinpgePXpsdEUAAAAAANtFR8f07d2r
ON89tlu++/8B5Zh23A==
      "], {{0, 179.04}, {284.16, 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->300],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->Automatic,
    ImageSizeRaw->{284.16, 179.04},
    PlotRange->{{0, 284.16}, {0, 179.04}}], 
   Scaled[{0.5089295532155085, 0.48997127944822827}], 
   Center, {1.38965259685656, 1.0149441030619357}, {{1., 0.}, {0., 1.}}],
  ContentSelectable->True,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{443.96484375, 329.},
  PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.803251626796238*^9, 3.8032516598209047`*^9}, 
   3.80336207964629*^9},ExpressionUUID->"57aabc98-5ade-45a7-b02b-\
d9ac9f280f01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["well known Snell' s law expression", "Subsection",
 CellChangeTimes->{{3.803252809442401*^9, 3.8032528209691257`*^9}, {
  3.803257189176606*^9, 
  3.803257189472332*^9}},ExpressionUUID->"834ae7c3-5d7b-4087-9cb3-\
399b9bcc7011"],

Cell[BoxData[
 RowBox[{
  RowBox[{"snellsLaw", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}], "\[Equal]", 
     RowBox[{"n", "*", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}]}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.803252749786084*^9, 3.803252804081071*^9}, {
  3.8032567784453497`*^9, 3.803256806585116*^9}, {3.803257163255733*^9, 
  3.80325716577474*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"72d5d0ee-075b-411c-897b-ae6cefcdf005"]
}, Open  ]],

Cell[CellGroupData[{

Cell["from the figure above,", "Subsection",
 CellChangeTimes->{{3.803256818030676*^9, 3.803256829393553*^9}, {
  3.8044501542906923`*^9, 
  3.804450154856863*^9}},ExpressionUUID->"0c1c03ba-cdca-4543-bc8f-\
527e9799e1c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"replaceAngles", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "-", "\[Phi]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "-", "\[Phi]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"replaceSurfaceNormalAngle", "=", 
   RowBox[{"(", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "/", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}]}], "]"}]}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.80325684319237*^9, 3.803256933810939*^9}, {
   3.8032569793314133`*^9, 3.803256994876622*^9}, {3.803257028694816*^9, 
   3.803257066926713*^9}, {3.8032571677196712`*^9, 3.8032571691990137`*^9}, {
   3.803351161133484*^9, 3.803351178863264*^9}, 3.803362122341696*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"236ceea6-502d-4c94-8afc-8d0ccd47d1f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
  leads the same mathematical meaning as an expression in eq.(2.5) assuming \
y[t] is monotonous and concerning part of surface axis above\
\>", "Subsection",
 CellChangeTimes->{{3.8032572058557796`*^9, 
  3.803257229336187*^9}},ExpressionUUID->"3488ba04-145b-49e9-a004-\
a760129150d5"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"TrigExpand", "[", 
     RowBox[{"snellsLaw", "/.", "replaceAngles"}], "]"}], "/.", 
    "replaceSurfaceNormalAngle"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}], "}"}], ",", "Reals"}], "]"}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "t", "]"}], ">", "0"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.803256951864839*^9, 3.803256953403391*^9}, 
   3.803257000090715*^9, {3.80325706293978*^9, 3.803257071963765*^9}, {
   3.8033511605856323`*^9, 3.803351178145248*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"4a58cec3-8466-4f47-850d-fcb5034ad39f"],

Cell["\<\
The equation above is same meaning of Snell\[CloseCurlyQuote]s law expressed \
in eq.(2.5) of  WW.\
\>", "Text",
 CellChangeTimes->{{3.803251750585864*^9, 3.803251754488282*^9}, {
   3.803251818649838*^9, 3.8032518675138073`*^9}, {3.803257102364255*^9, 
   3.80325712940025*^9}, 3.803257204243153*^9, {3.804217860451597*^9, 
   3.804217902594289*^9}, {3.804217951499319*^9, 
   3.804217966056072*^9}},ExpressionUUID->"d951b1df-b6b5-428c-9688-\
6644f1b9e1d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["start from Snell' s law for each surfaces, eq.(2.5) in WW.", \
"Subsection",
 CellChangeTimes->{{3.801254582549469*^9, 3.801254613523655*^9}, {
   3.8012565756823673`*^9, 3.801256637210421*^9}, 3.801256692719613*^9, {
   3.8032572587804117`*^9, 3.803257317679521*^9}, {3.803257416744254*^9, 
   3.803257421089126*^9}},ExpressionUUID->"4223025e-ad82-4886-bcda-\
5c456f322151"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[
      TagBox[
       RasterBox[CompressedData["
1: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
e321GtrznOpm5rAv+O6SoLwnc3/6L3lKbj2uQ/7B1N75Q8ZfWZPkGwdnw3sD
T1lFtY+pXn0UiD2H+UXqcW0802WYe1wJ9U2x4/g4Lm2K8muoL00yXxdcSLXM
ur5H+/BWjq4ex/Xbnh4PHrCi74eSf6ygpjbIkbh2WUnXaT/fTb1QbR3AnPYF
310StHZn4vKP59biAWvIP5tz/TXD/F4ypxOcvTEI6oWpAyBnTJ7wl6j3+yi1
SaiXlO0bjx4MK6F+iC1fOSV5gIvzM3OmRvA2fU4cTHHcveoIUm2SXjnsHayy
9+YVL3gJkAMd8dsvLmOf/Xw31SQx18ZHctoXfHcJUKxmq0dXEDyIW4/r6PP8
GWbu7t+9coL7sCrpk6Y9CHqvAg+I69RrP0R5fgtCqFG3E9dYtr1MarUd8tQ4
Aej7QtKHUb++wi2mSOKcF+2zKfaIfDf5b/p+v/rdcf5uhjFbunZl5wt5S2Ac
isiXzEo/390Mg3/mmbcO310OSe/b+N50KrcW19lcqdyyNZ8yoI59H1Yl9Wjl
BdNUJwz4R1zjKK4LG3x43JzIdJ+paZnTHYYk3qLVO+5+3HqKIFLVRyW9b8QZ
9Pemf9bHd6+J8wmSe+4j+21fn6df7eW7abw3KEYFgG7o8eE7OPy2pZfvTtUc
vXH9+rXrctoXfHfBLKu3FIpHcOtxHX3/39/OdVM+w5jbOky/LqH+annpAyAv
KBdNn+fX6vN9n3G3RXEq+lz/ibl2Tq8g1rYr1JvC3ItPq0zQMaL47LiuE/WZ
DKv7dcvH7eW7qXe7eUbd0K82MfX/aK3b9n69Lu+/DUw+1BuVw29bevlu/f19
zXm9Jcd9wXcXy2rq52VyeU7iFuM6pi7Dlea5+JY8thmPo+G9gUPEsdih+Fy8
flmT9xl3e5RHrK+XX7bmHDHX3ZN6rbqRctvjY1ULns6tZ1zi8VYoDonrAirx
8X61Hnr57nj8l2E9Vj/D3jzAc9OY77wKen8Az+g5353kR9xs+gTntS/47gKh
eSw7jzCoFh6I56c/GccJKvl38iZ5bTeOdVRyK9U0yGubAIwCxV0nccbitHHX
cwh9rTxbb+8KW0e5WQsem4fOSUb7xw+a+/K5VA+YW8+oJHmS4jw6l7KMtXr6
biVOMDVJDuvz6xSLcn4qTudi/e+n6VzWvv1Hy+JNguoeg3XLw0z/In0tVDdn
+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
WJ9kWJb77laPhPcUtK/RfXdHvykz/71lWteKbI4KxuvZaPWodLiOJT2jY++N
/HpQie/HzzTPpjdWHIirppiFuHZucs99DrceV7E5UlQXu8z9LoSzO+rP5bvJ
+F3uXWHuXbzMd4fyQ+OuVw/ru1v1Sjr22RmzSl4C/rs8aExInyOtgXBr4WJ5
nIn8bWPEXlIZ9zWS707nJNPXdD1R3BZdL3YdadquG+27TzDrvrn3yphE2vUE
3M7Jpbwr7bMu0J/ruysOeC3AAuUyvofW5IuoqzwO8fMCvf96Qr30WnHMQSDL
2Cf1o6H7hemddKQra8Bp363//YnxwC8fdXvD++4ktrszxqQdsyq3JHHeiF0t
E448B9ewvpvWDbWXu854k7sXtK+RfHcj1W8quWba14n13a7ca8pC/81fMcfk
tdxafIC8rOvz3RaK4U30iqMq8N5TRezbkjnLP9H8JbeeTpJ+4kkdJaoDza3H
NZpCNKzvLmF3q2jdgWo0ka/dMCfuWsI+M9Phuy8f9/47dJyJ6UfZ+f1WTmWP
+XczT76i/gkYDrqXceQV+ID13fEaVXIu3kg5GQXta0Tf3e43lb5OUtfP1M29
6OPwERNreQS3Fh+g3kLxHFQteDq3lizE3jsUfzXem3W9GJRDfU7uTJ95pMTX
aA6TW08v7BgWPXJXEtfIVuL6eA1Wf55F7SeJ+5en6M/iHxSPVHFwfG59N3mv
di1FJUbd3rC+u99cXOIdVq59Ws+NGM7RWdbPvYA+MJOA9d3UB9jkG59d4L5G
ne/eYsem6WtpmvtN2d5fReXAThpJLa34HHoLt5asJLXIgrNN7cM13HpAcTSV
eDL1M9Hn5yEVx8dZ1LNnGmP7smLvNfqZ+pm8t53EsYij4h5g+rm3aXZ2+7z3
kRfWdy+q6gPMc/rycbY3ar/KYbFxrfDdw7EsX1J/Tj6sLXPR9t02B0F+o8B9
De27bU5ytzitac5Jbtcfje9lTj+nXUCPT97g4ziFvDf124D3nljWxLVrw+Aq
mvvgFjMIk5MWx5lw1TQkkhwfcY7Ns+8FxRmM2qdlVGgdoBXHoMQjc9rsan2e
vFhv7zKqAVGvVTfmtN3CsL67GQYvNMfj1HG2B9/tLvpzfj38dnas76Yan+Y+
8b4C9zW0727Paa+sWdIrfmsa2DkItrPrmS70PXed9pyLuLaoOKqiSPpZiTNp
Ho3Wsbn1gHxYWFh7R5rniNc0guDO3Hqy0AjEy8x4/3w2Da2asoNzpOP36mdE
2fk/rX4BobhoQQg11rZq8j6mDirVBvyfvDQWjfXdcc5nDvP/8N3uEvs0+O3M
pHz3T8184IsK3NcIvjvJSe68BtBvKj423zaxQR/m1uIBa/Q5fqmvNdBS3vtr
8N7+Q3VraB2DrmFfcsIp5jzO4UueE2/i0DBsvxOu/ihUy4Q8d+oZNXT8Nfn1
uLavEv+m472wsHCbAqQWRst3K3GiOWfeMM724LvBpJDy3ZeYfOMHFbivUea7
z0nX7W5ty8x52GtjGq+RRlB9qvHdV6E2z2BoLcfM1f2EW8soJPOj4jRaZ8bn
7S+NmnwcXbP6PPzfikexQ7ZngD4H/0V9v8vefyvmsMv8tZ2f6fy+rYVFPy9X
rR6nhOLhet83mRiLvbP+HvUoor668TkSyq9sUGqhSJ1F0Z7vFr9LvEX1qeNs
D76bF3r+xD2hAvEybi2+k9RjDT7ciqGem5kvcF9D+e5UbPeKeiU219LWFXS9
LnMR0LynHS9R7B+3HtehOcbWeV6r3o1bzyiQ3yHv3QzlD+C9vWOVqX+9rVEL
nsYtZhi05te1rx2enq82n6ebH4rnZ7qsffaLUywDG2NBa21Zrtd6KB+mNf+B
XvT/ZWgsCuu7G6bXUj0I7jnO9uC7eTDzPXTfuiLud6PUPbg1+Y6Z7/68mRP4
T6XAHL1hfXe/NUJ7D45jvDs8dypHNPbsg3JvfMb2saAeaTRPwq3HdWiu2Jzr
X+bWMirkvcl36/P8hxzzjmB4qO4ExQjRPbDI+nJFYHt8m3vx2zk0pPPrO+/3
qf6DXfx4Mg/O5bspNsT2r6Tj2Ot9NKfdiHsyxOsgB0zCvZx8d2uuO4c+QvDd
5dLptxG/nR90XJPnQbE1BM2+ho4z6RX7SN/vlqeervEd36vj3MvJjQE3/dG2
NQrsMzpJ0PlnngM3cdYESO7t4mgbR9Wuf0DjyMHrNzR3Rt47jjuB93YaOs9o
/lJ/Xt/fsVab5dYzDPVQPqvtueO8OJY60em5lJWxJIkn75xfif14fD3xeiit
Yf94bkRfr50/I19OsdtxDHcoPztuDqZLkO+OazEln9u2cbdXhu/umLNr9ZKf
RiiXF367GGLfTcc2mRP4XsH7Gql+9zB0xvHZOPAi98lNKtb9r8i5G4w+Tr8w
5/v7mfafurd3qUlvvMKg/sXkvfX7vkXe25fcvGkjCqp7JPNF4vCKR7HcBNXO
sDUDzfoQm/70NdP5M1uzpOfvMNQzSbMYBPdqdKlfbY7vuXGtkpq8D5e+oojj
TOiZnzybfjfu9sqa7wYJvtX98olkvjuuUUTrYB8teF+F++5OrI8pc59lY3o3
b0Ocdza0336uWd+5sFLy/F2rBlqX+CgLzdu158H7e2/TH4/iF84cpxccyJ1V
JiZ6m4/1c6IgeDDFHRqv+03u8Xyv+W47p905L9mv70PZ6GN5F/N8vZ6+jtc/
KN4tqcVN9+uJ7L8Qx5ko+Q8zbvv2uNuD7y4GWi/dGAT1YX7HxOJsGbSOZPt/
jqdw8iDfbdeCxq3zk2FfDL5bHjsNcVrWz1EsIfcz0nVM3eQbTczhXcrab5ID
3FrD3Cfrewedv0l+LdULhvd2gSUhbh/H6ipx3qB4oaT/i4lBXhZvJE7mum9F
c9VFmqM3594PXcjfTceM2LFo+tnfSPVPi2MNW+9deZ0l41p7zIvPx0/q1yT3
5mRuXlxLPScpRrDofXNi4rsvNmOOj427PfjufFkevy3ek/X34usuHusOrhHU
L/dimol9t6nJqsfhLyh4X6X67iS+e3Jju9MYL3kF5ryzYfN9yjxWdg47a8xg
w9TsybhOvoZ6Wuq/56wiaxKB/pi4/TP0M+nHdSmD/u8zn2/yb8sf2vuWPVfK
rNVE+Xz6HPq1Oe/+6FLugJnDtsfMHJvkuK2MyyVf3f24pX63FN9NcfFmLHWN
Pqan+FpLaVgaST2Ty81Y6W3jbg++Ox/GyZek51BSOyh77NY09zfshakjeJW5
L+TV07bXvkrz3cn5UX7NVk7StU0w592fSImPZ4njyItlc91KHhZriL3Cyue+
HSumvUTG+YI1SW2i4Gx47/KJ6zXTPJCSH+xXj8LOFw06/9LxyWV5b33veJX1
iItK3amMfXIwTM/LsfYTxzgnNbyppmCFKS+VA/O32/jHsfvxwXePj76uDxzF
b1t69TFM1dY/bOXvlDfG9QXj1UpZcy/Ld1vPPW25Zpjzzk4UVvczx+mkMvbX
fs63400TX7XcdyX5CInvbvVkDYfq+0E1oo+ifK3GvGjm/GeAHsR9TrRXzbJm
aOdss6x7pN9b9P0sjlcyPRb1/g4ucl/cFO27k/X1uC9G/GxthvJXlSny3EQS
3y2uayS1ux8z7vbgu8dHX9/7jurB2j3CV851N0x/Khvr1fGzm3v9bFpp1fXX
r6JrXJXhu7t5bpOnNhXxRa057zD4J/KRe1NX4kl2Lb2M/aVjeO39p3NtPB3b
Sz+3dWRtLMIQu4u9tx5TXADvXSxxTRkVfIHyx6huxaD32+dTlhh/Ypg4/3Eh
b2T2dQXFqBe5L24K9N2r9Xb3jvuZKXm+iW2+zrea7Xlg5rvjcUcevVbgu3lp
z3WvnAPqVVMond8M391GH8MPmWP5n6L3VYbvbvXTWfGajjWOZXPeoXwltx5X
adX2CoOrythf+rwcxXePUEeW6mm8i7x3mbmj0wT1Oklq3IpfZK27nI5PtnMD
3Z5jdG608gRtTErBMZJ6++80PvGLRe7HBYrw3U0p7518vuJvVHextb4VBi/M
ax8+kR4zLgTBhnG3B9+dDRu/nXedjNR9qEssCXnylTFzrtTydA19TD5t/MeF
xe+r/Hom00jchwFz3n2h54B9JpTRG673fHfvOJMx5rtbmHmISyIpdxr/rwAW
fR97UHxclfho1lwKm9vf+Xl2xm/b3KW2707PJRQ3f6D3+TkTc35IUftwhTx9
N+XP6u19Ms6bDMVbye+kxsss/T1dgMYb9jjkURMHvrs/nfmSWdbfhqHXuluv
miWu9K1ykfa4XJxR9L7gu8shrmOm5KWY8+6N6fOZzMXo+1XR+0vHdzeW1WDo
nVe5PMZg9Bxh7QPeTB5xWuooFI3+LF5BHmvYXLFlvc5TdZa6r8+l6+JR/9Li
a1Hbuht6LPGOovbhCnn47t0rlVvQ/bURBlfqY3Y81UCmXvCpa/bIPDX7RipH
99o8tgff3Z2y+rn3mu9Ordvus/z7rbkm1O/uQB+Tb5hro9Belcm+4LvLgvKi
MOfdGxOPkzwfg0AWvb90jmS3dbpujFDPpN+2DiZ/kPccyDRBPb2T9UHxL308
7z/s7y8/B0bz3VliwkfFztN262c+adhjOmrMadJXSPxOX8t/0tt6RPy9UD6j
YWqX6NenKlOWR9lJPN5P7nfn57I9+O6uUM3SMvq5d6uvlPQfoHol+noy97Rk
nru1RrdlRQ5mav2OfpfWdYvU7SJ0jy0rpg++uzzSc9763/259TjI6jxjD7PQ
qqeUMU43/f48YuPimhuhvILiUMfd1rRBdRmpJoW+h522OD8zN8o2es53D4oz
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
        
        "], {{0, 169.92}, {352.32, 0}}, {0, 255}, ColorFunction -> RGBColor, 
        ImageResolution -> 150], 
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 1],
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
      Magnification[1], ImageSizeRaw -> {352.32, 169.92}, 
      PlotRange -> {{0, 352.32}, {0, 169.92}}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{{3.82580435977421*^9, 3.825804404428906*^9}, {
  3.825804621698399*^9, 3.8258046253964853`*^9}, {3.8258060228832293`*^9, 
  3.825806026319374*^9}},ExpressionUUID->"da8613de-c158-4efb-a242-\
d0535f1c4a19"],

Cell["\<\
From here, dependent variables of 't'  are expressed explicitly, i.e., \
\[OpenCurlyQuote]f[t]\[CloseCurlyQuote] not \[OpenCurlyQuote]f\
\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.801254582549469*^9, 3.801254613523655*^9}, {
   3.8012565756823673`*^9, 3.801256637210421*^9}, 3.801256692719613*^9, {
   3.8032572587804117`*^9, 3.803257317237179*^9}, {3.8032573624874496`*^9, 
   3.803257380790186*^9}, {3.825804212789817*^9, 
   3.825804261486961*^9}},ExpressionUUID->"fc2646f3-5017-4f5d-97e1-\
cdcc3880b1f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["snell", "1"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "]"}], 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "1"], "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "]"}], 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "1"], "'"}], "[", "t", "]"}]}]}], ")"}], 
    "\[Equal]", 
    RowBox[{"n", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Omega]", "s"], "[", "t", "]"}], "]"}], 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Omega]", "s"], "[", "t", "]"}], "]"}], 
        RowBox[{
         RowBox[{
          SubscriptBox["y", "1"], "'"}], "[", "t", "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["snell", "2"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "]"}], 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "2"], "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "]"}], 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "2"], "'"}], "[", "t", "]"}]}]}], ")"}], 
    "\[Equal]", 
    RowBox[{"n", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Omega]", "s"], "[", "t", "]"}], "]"}], 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "2"], "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Omega]", "s"], "[", "t", "]"}], "]"}], 
        RowBox[{
         RowBox[{
          SubscriptBox["y", "2"], "'"}], "[", "t", "]"}]}]}], ")"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.801256416085163*^9, 3.8012565504609222`*^9}, {
  3.801257193822833*^9, 3.8012571955441923`*^9}, {3.801259802391076*^9, 
  3.80125981161119*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"eb54b4f2-949c-497d-9b23-b695a28a26dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["y dependency formulae, eq.(2.8) and (2.9) in WW.", "Subsection",
 CellChangeTimes->{{3.801254582549469*^9, 3.801254613523655*^9}, {
   3.8012565756823673`*^9, 3.8012566897470837`*^9}, 3.801256902557547*^9, {
   3.8038528603269777`*^9, 
   3.80385286108263*^9}},ExpressionUUID->"0d368ff8-b7c2-4e78-a416-\
355491004adc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"yDependencies", "[", "baseExpression", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["h", "1"], "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "1"], "[", "t", "]"}], 
        RowBox[{"Tan", "[", 
         RowBox[{
          SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["h", "2"], "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "2"], "[", "t", "]"}], 
        RowBox[{"Tan", "[", 
         RowBox[{
          SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "]"}]}]}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801256699688307*^9, 3.801256778175803*^9}, {
   3.80128277928089*^9, 3.801282780989065*^9}, {3.803262757311452*^9, 
   3.803262767752549*^9}, 3.804218203779708*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"129e1efc-eea9-4f7f-9d09-9f8065318338"],

Cell[CellGroupData[{

Cell["and their derivatives", "Subsubsection",
 CellChangeTimes->{{3.801256830033381*^9, 
  3.8012568523586283`*^9}},ExpressionUUID->"49033d0e-5ae0-4204-a1d8-\
efd800eae8d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"yDependencies", "[", "differentials", "]"}], "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
     RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.801256858669841*^9, 3.801256874263198*^9}, 
   3.801282306259775*^9, {3.8012829892421293`*^9, 3.8012829905437403`*^9}, {
   3.8032627559599953`*^9, 3.803262767753787*^9}, 3.803262807657156*^9, 
   3.804218203070849*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"0bc54e9e-7e9e-4243-a6c1-cf5970eb75d5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["R definitions, eq.(2.6) and eq.(2.7) in WW.", "Subsection",
 CellChangeTimes->{{3.801256967679291*^9, 3.801256977987698*^9}, {
  3.80421842965408*^9, 
  3.804218454841688*^9}},ExpressionUUID->"dff9b391-2338-443d-bee2-\
f8a76026b80b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"omegaAstariscs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Omega]", "s"], "[", "t", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["R", "y"], "/", "R"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Omega]", "s"], "[", "t", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["R", "x"], "/", "R"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vectorRDefinition", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["R", "x"], "->", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
       RowBox[{
        SubscriptBox["x", "1"], "[", "t", "]"}], "+", "d"}]}], ",", 
     RowBox[{
      SubscriptBox["R", "y"], "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
       RowBox[{
        SubscriptBox["y", "1"], "[", "t", "]"}]}]}], ",", 
     RowBox[{"R", "\[Rule]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["R", "x"], "^", "2"}], "+", 
        RowBox[{
         SubscriptBox["R", "y"], "^", "2"}]}], "]"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.801256981158208*^9, 3.8012569829238462`*^9}, {
  3.8012571137668056`*^9, 3.801257257614397*^9}, {3.8012828191849127`*^9, 
  3.801282854412404*^9}, {3.80128293357491*^9, 3.801282957259531*^9}, {
  3.803262848612753*^9, 3.803262890100728*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"ea547360-bc31-4c55-9f3d-39ce765fd61f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Rewrite expressions for derivative of x1 and x2 to get the equivalents to \
eq.(2.10) and eq.(2.11) in WW\
\>", "Subsection",
 CellChangeTimes->{{3.801259879046722*^9, 3.8012599156931543`*^9}, {
  3.8012601939909678`*^9, 3.801260201708219*^9}, {3.818462323610046*^9, 
  3.8184624275843887`*^9}},ExpressionUUID->"499e536b-99b1-42cb-aa1f-\
74b146ff82b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wweq1011", "[", "original", "]"}], "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], "'"}], "[", "t", "]"}]}], "}"}], "==", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "'"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "2"], "'"}], "[", "t", "]"}]}], "}"}], "/.", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["snell", "1"], ",", 
             SubscriptBox["snell", "2"]}], "}"}], "/.", 
           RowBox[{"yDependencies", "[", "differentials", "]"}]}], "/.", 
          "omegaAstariscs"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "'"}], "[", "t", "]"}], ",", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "2"], "'"}], "[", "t", "]"}]}], "}"}]}], "]"}],
        "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8012594255020533`*^9, 3.801259569308209*^9}, {
   3.80125984760478*^9, 3.8012598480048513`*^9}, 3.801259932526051*^9, {
   3.801260357936967*^9, 3.801260371894857*^9}, {3.801260984909374*^9, 
   3.80126098552528*^9}, 3.801261046792736*^9, 3.80128229792371*^9, 
   3.801282853780594*^9, {3.801283123716536*^9, 3.8012831303056726`*^9}, 
   3.8032627559646072`*^9, 3.8032628068899593`*^9, 3.8032628478427*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"b3958a08-dfb1-40bd-be79-e1c16081cd6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
For confirmation of the equivalency, the first factor of eq.(2.10)\
\>", "Subsection",
 CellChangeTimes->{{3.801261010817873*^9, 3.8012610352844152`*^9}, {
  3.801279258376588*^9, 3.801279273769033*^9}, {3.801279344883033*^9, 
  3.801279373073428*^9}},ExpressionUUID->"e4d96133-ef0d-49b7-a2a9-\
75e37729c36b"],

Cell[CellGroupData[{

Cell["\<\
before that, a preparatory helper function : fractionalRationalize[_,_]\
\>", "Subsubsection",
 CellChangeTimes->{{3.801283005565935*^9, 3.8012830297183332`*^9}, {
  3.80445025990014*^9, 
  3.8044502790277557`*^9}},ExpressionUUID->"90feb9b9-97ec-4d8c-b981-\
92767d395505"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "fractionalRationalize", "]"}], ";", 
  RowBox[{
   RowBox[{"fractionalRationalize", "[", 
    RowBox[{"fraction_", ",", "factor_"}], "]"}], ":=", 
   RowBox[{"Apply", "[", 
    RowBox[{"Divide", ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{"#", "*", "factor"}], "]"}], "&"}], ",", 
       RowBox[{"NumeratorDenominator", "[", "fraction", "]"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.801261278954276*^9, 3.801261284983603*^9}, {
  3.801261315415056*^9, 3.801261429299914*^9}, {3.801261510101343*^9, 
  3.801261530968793*^9}, {3.801281976490368*^9, 3.801282025393396*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"757f723c-ae28-4da4-afa2-7a1bc3ab861c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
here is a denominator factor of eq.(2.10) and eq.(2.11) in WW\
\>", "Subsubsection",
 CellChangeTimes->{{3.8032577652035017`*^9, 
  3.803257799795211*^9}},ExpressionUUID->"461dabc4-8cb3-4548-bf0b-\
baedf551043e"],

Cell[BoxData[
 RowBox[{"originalFirstFactor", "=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "*", 
         SubscriptBox["R", "x"]}], "-", 
        RowBox[{"R", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]", "[", "t", "]"}], "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "*", 
         SubscriptBox["R", "y"]}], "-", 
        RowBox[{"R", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Omega]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{"Tan", "[", 
      RowBox[{"\[Omega]", "[", "t", "]"}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.801260432528533*^9, 3.8012605970460176`*^9}, {
  3.801260640844054*^9, 3.801260651563759*^9}, {3.8012608701345787`*^9, 
  3.801260870761652*^9}, {3.801260924495022*^9, 3.801260948029584*^9}, {
  3.8012609802832212`*^9, 3.801260980991987*^9}, {3.801261049495007*^9, 
  3.801261066043167*^9}, {3.801261103440831*^9, 3.801261156427679*^9}, {
  3.801261547047114*^9, 3.801261567599581*^9}, {3.801261624348022*^9, 
  3.801261626606834*^9}, {3.8012618139354677`*^9, 3.801261818906904*^9}, {
  3.804450454702134*^9, 3.804450486052794*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"01ee5c8f-2f9b-4f94-a4b6-1dc79f16ba36"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"Together", ",", "originalFirstFactor"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.801260432528533*^9, 3.8012605970460176`*^9}, {
  3.801260640844054*^9, 3.801260651563759*^9}, {3.8012608701345787`*^9, 
  3.801260870761652*^9}, {3.801260924495022*^9, 3.801260948029584*^9}, {
  3.8012609802832212`*^9, 3.801260980991987*^9}, {3.801261049495007*^9, 
  3.801261066043167*^9}, {3.801261103440831*^9, 3.801261156427679*^9}, {
  3.801261547047114*^9, 3.801261567599581*^9}, {3.801261624348022*^9, 
  3.801261626606834*^9}, {3.8012618139354677`*^9, 3.801261818906904*^9}, {
  3.804450454702134*^9, 3.8044505081010857`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"95237ae1-405b-4e9a-b0ee-a0086ae92fcd"],

Cell[BoxData["\.10"], "Input",
 CellChangeTimes->{
  3.826595389956417*^9},ExpressionUUID->"f782c4a9-9bdf-4e4e-a859-\
d3ab3e6126e8"],

Cell[BoxData[
 RowBox[{"fractionalRationalize", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Sec", "[", 
    RowBox[{"\[Omega]", "[", "t", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8012616353593187`*^9, 3.801261645958481*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"343980a7-b3a4-47be-bfac-6e5f3c60e5f9"],

Cell["and the second factor of eq.(2.10)", "Text",
 CellChangeTimes->{{3.801261010817873*^9, 3.8012610352844152`*^9}, {
  3.80126159428434*^9, 
  3.801261599718048*^9}},ExpressionUUID->"4f38cf6a-bd87-4751-a2ae-\
508d63ac3159"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"h", "'"}], "[", "t", "]"}], "+", 
  RowBox[{
   RowBox[{"x", "[", "t", "]"}], "*", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Tan", "[", 
      RowBox[{"\[Omega]", "[", "t", "]"}], "]"}], ",", "t"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.801261666154804*^9, 3.801261687222643*^9}, 
   3.801261724868786*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"b3d30928-800d-4025-a7b7-601d40e0d2ca"],

Cell["lead the expression above.", "Text",
 CellChangeTimes->{{3.8012617313048267`*^9, 
  3.80126175130299*^9}},ExpressionUUID->"5f4a92a5-382e-4cba-a721-\
4df5da3b45ba"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further calculation beyond Schwarzschild example in WW.", "Title",
 CellChangeTimes->{{3.803251912815789*^9, 3.803251946916445*^9}, {
  3.8032521897641563`*^9, 
  3.80325219501087*^9}},ExpressionUUID->"e30a5911-e687-412d-bee6-\
b37f095f6b1e"],

Cell["boundary conditions", "Subtitle",
 CellChangeTimes->{{3.8012629277523527`*^9, 
  3.801262935059951*^9}},ExpressionUUID->"6b5557f3-8f9e-4756-a5fe-\
ada3315de9e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"boundaryConditions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "2"], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.801262937899324*^9, 3.801262964884446*^9}, 
   3.8032629171563807`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"acf07e2a-32fb-4bd2-80a6-b89468e7373e"],

Cell[CellGroupData[{

Cell["and explicit expression of \[Theta] (t)", "Subtitle",
 CellChangeTimes->{{3.8012629277523527`*^9, 3.801262935059951*^9}, {
  3.8042196457946577`*^9, 
  3.80421967952183*^9}},ExpressionUUID->"72dfc994-23a8-45fe-ae71-\
6fa31b1ad7c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"thetaRule", "[", "infinite", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"D", "[", 
        RowBox[{"#", ",", "t"}], "]"}]}], "}"}], "&"}], "[", 
    RowBox[{
     RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"ArcSin", "[", "t", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8042190348325787`*^9, 3.8042190351584253`*^9}, 
   3.80421945048139*^9, 3.804219629290697*^9, {3.8042201933215237`*^9, 
   3.804220196009314*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b62569f8-a1d3-438f-9a68-570f3b056da7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"thetaRestoreRule", "[", "infinite", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"ArcSin", "[", "t", "]"}], ",", "t"}], "]"}], "/.", 
         RowBox[{"t", "\[Rule]", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Pi"}], "/", "2"}], "<", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "<", 
          RowBox[{"Pi", "/", "2"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.80421945547586*^9, 3.8042198158621187`*^9, 
  3.804220200384472*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"812f0df9-6699-498c-8fe8-ba5d0018fe6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deriving equations for infinite conjugate singlet", "Chapter",
 CellChangeTimes->{{3.801261875251954*^9, 3.801261904014021*^9}, {
  3.804219515709002*^9, 
  3.8042195173278217`*^9}},ExpressionUUID->"cb0ce1fb-f875-4678-8691-\
ff6ba18d82e5"],

Cell["It' s easy geometric exercise.", "Text",
 CellChangeTimes->{{3.825805566529273*^9, 3.8258055767157784`*^9}, {
  3.825805955994782*^9, 
  3.825805999498538*^9}},ExpressionUUID->"0521dfe2-428c-4b77-9124-\
4a472c231bb8"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[
      TagBox[
       RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAAABN/X9Av4Tw
        "], {{0, 129.12}, {264.96, 0}}, {
        0, 255}, ColorFunction -> RGBColor, ImageResolution -> 150], 
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 1],
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
      Magnification[1], ImageSizeRaw -> {264.96, 129.12}, 
      PlotRange -> {{0, 264.96}, {0, 129.12}}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{{3.825805305593687*^9, 3.82580532849879*^9}, 
   3.825806044985878*^9, 
   3.8258082479100447`*^9},ExpressionUUID->"1e7bd84c-1442-42fa-aa6f-\
d0b17c01d34c"],

Cell[BoxData[{
 RowBox[{"f", ":", 
  RowBox[{"focal", " ", "length"}]}], "\[IndentingNewLine]", 
 RowBox[{"m", ":", 
  RowBox[{"working", " ", "distance", " ", 
   RowBox[{"(", 
    RowBox[{"W", ".", "D", "."}], ")"}]}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.825727862277256*^9, 3.825727956058918*^9}, {
  3.825728111432921*^9, 3.825728166276469*^9}, {3.825728201465061*^9, 
  3.8257282313390837`*^9}, {3.825744430492483*^9, 3.8257444591294823`*^9}, {
  3.825744489734045*^9, 
  3.8257445002314043`*^9}},ExpressionUUID->"8e4be628-22c8-41cc-9808-\
3894f50033f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"baseConditions", "[", "infiniteSinglet", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     
     RowBox[{
      RowBox[{
       SubscriptBox["h", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"f", "*", "t"}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"m", " ", 
       RowBox[{"Tan", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseConditionDifferentials", "[", "infiniteSinglet", "]"}], "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
     RowBox[{"baseConditions", "[", "infiniteSinglet", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.801262220346615*^9, 3.801262321485908*^9}, {
   3.801262453993031*^9, 3.8012624802159843`*^9}, 3.801263625452203*^9, 
   3.80128235540061*^9, {3.80128245128267*^9, 3.8012824520938063`*^9}, {
   3.8012830568203793`*^9, 3.801283061185416*^9}, {3.803262767758926*^9, 
   3.8032627677596607`*^9}, 3.80326280689144*^9, {3.8032630178580647`*^9, 
   3.803263018342022*^9}, {3.803351298567271*^9, 3.803351299049747*^9}, {
   3.804217590378145*^9, 3.8042175903790083`*^9}, {3.8042182030732527`*^9, 
   3.804218203073805*^9}, {3.8042189714494257`*^9, 3.8042190061654377`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"561a91af-1411-44a5-9b94-1e8940450f3c"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"baseConditions", "[", "infiniteSinglet", "]"}], ",", 
      RowBox[{"baseConditionDifferentials", "[", "infiniteSinglet", "]"}]}], 
     "]"}]}], "/.", 
   RowBox[{"thetaRestoreRule", "[", "infinite", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804219061269064*^9, 3.804219096717453*^9}, 
   3.804219822996599*^9, 3.804220208428587*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"fb69c6d5-0812-4197-a75c-d1ace8cd6dab"],

Cell["\<\
deform to expression about variable t, eliminating dependencies with \
\[Theta],\[Omega] etc...\
\>", "Text",
 CellChangeTimes->{{3.801262683207402*^9, 3.801262686868909*^9}, {
  3.801262726324486*^9, 3.801262734806669*^9}, {3.801263976096023*^9, 
  3.801263977693021*^9}, {3.8012640301077747`*^9, 
  3.801264091938325*^9}},ExpressionUUID->"7ef561b1-b931-4bed-bbfc-\
2f70a61a53e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wweq1011", "[", "infiniteSinglet", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
       "vectorRDefinition"}], "/.", 
      RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "//.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"baseConditions", "[", "infiniteSinglet", "]"}], ",", 
       RowBox[{"baseConditionDifferentials", "[", "infiniteSinglet", "]"}]}], 
      "]"}]}], "/.", 
    RowBox[{"thetaRule", "[", "infinite", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.80421913834447*^9, {3.804219292706629*^9, 3.804219301763631*^9}, 
   3.8042196924836273`*^9, 3.8042202130854692`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"aa5ea190-7122-48ac-bd68-d12e05c6391a"],

Cell[CellGroupData[{

Cell["trying to solve with numerical values", "Subsection",
 CellChangeTimes->{{3.804219312993245*^9, 
  3.804219324913885*^9}},ExpressionUUID->"1d205220-8475-4dd1-8a87-\
2d70b5fbfc8f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numvals", "[", "infiniteSinglet", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "1.5168"}], ",", 
     RowBox[{"f", "\[Rule]", "3."}], ",", 
     RowBox[{"m", "\[Rule]", "1.6"}], ",", 
     RowBox[{"d", "\[Rule]", "2.5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"na", "=", "0.6"}], ";"}]}], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"58af5202-70c8-4dfe-9dad-78e79b1217f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutions", "[", "infiniteSinglet", "]"}], "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"wweq1011", "[", "infiniteSinglet", "]"}], ",", 
       "boundaryConditions"}], "]"}], "/.", 
     RowBox[{"numvals", "[", "infiniteSinglet", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "na"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"9ab582c5-7306-439f-8f50-e789bfbaa9bd"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["x", "2"], "[", "t", "]"}], "+", "d"}], ",", 
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "+", "m"}], ",", "0"}], "}"}]}], "}"}], "/.", 
         RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "/.", 
        RowBox[{"baseConditions", "[", "infiniteSinglet", "]"}]}], "/.", 
       RowBox[{"thetaRule", "[", "infinite", "]"}]}], "/.", 
      RowBox[{"numvals", "[", "infiniteSinglet", "]"}]}], "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"solutions", "[", "infiniteSinglet", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "na"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.804219366024926*^9, 3.8042194854122143`*^9, 
  3.804219725187935*^9, 3.804220217643105*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"17e8b1cb-ac22-4dbf-ad22-45b97819b698"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["infinite conjugate singlet with cover glass", "Chapter",
 CellChangeTimes->{{3.801264442909706*^9, 3.8012644508924437`*^9}, {
  3.804219499159749*^9, 
  3.8042195085646887`*^9}},ExpressionUUID->"a7a46cdc-e858-423b-936e-\
674629567d2c"],

Cell["Same as above except existence of a cover glass.", "Text",
 CellChangeTimes->{{3.825805541467746*^9, 3.82580555933994*^9}, {
  3.825805596310116*^9, 
  3.82580560027791*^9}},ExpressionUUID->"999bddd7-d7d7-439a-b5a2-\
352229b7c2d6"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[
      TagBox[
       RasterBox[CompressedData["
1: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
x4Pmuws0H5QF0ulP63HY07tt51pauu/mZp67S6uW8HVvxm11XM/X4vZAXkN/
H0n3x5/o9X9zzuYxfpRO231xBrVBH0vveNB8V4Hmg7JAunis1vRLu21n7eZ5
V8n+kaTmt9ap6kvoGeDX3EfEtdXpeO+k995JbcrlDaV2zvhjdIXOP9tt7sFi
gea7CzQflAXu/9A++k3t21i7V3teo319N82P9p+Z2Yr9fvOac41F87iUuI/a
jc+FSs2k/gF6MDU1NcHzjOtCqLSOCc13F2g+KAt1z1tl+uMHrSvSS/N7sbJa
9Zu++KgeL/5Et3YkbaideS09a/w4zWNC890Fmg9KxBKdV21zsyaeNcgbhtV8
A+frCXzxqSifgy/P5LZgaGsHPZcvLybNf1eax4Tmuws0H5QJ7vfm67lRqx40
yP6L1fy593tP4rm/5Ivfy3n806hbmITHHrgdW7VCPDnN40Lz3QWaD8oEadkn
dd6d9w20/4iabwilfGboyyvjsV55PI8fLOY4HE+afGYIlXw1HfPaUe1rB5rv
LtB8UCZasTu+/NpA+6ek+a3j1eQLmr64Oqq56Msjhs3TyXkfOA+cec05/rkO
TFr2teyE5jsLNB+UCa7fqvMi/3aQ/dPWfA2PK3ANrms5hojPwfOEB3ljoyZf
GN+P1Zfy+DDXe+RaKSnbB813GGg+KBNcF8XE7gzSv5KR5huWRjE3XKNXyV+G
SuxXWaDGFdnyKj0P+HecR7Ppe5dkYRg0312g+aBkbDFI3h1Dxpofwf07pPdv
DH3vFo65JD1/UU97fPH2RN2uB+P8QOKEaB4utQFpxYZC890Fmg/KBmnqT7Wv
/NqF9h2H5hu4hnlco11u5HN2q9Ee51jolu/Tu4u0/+/TsgWa7y7QfFA2uPZt
rPnytAX3HaPmG9pqtH85WaOd2qnzO+u4iA1p5/SH5rsLNB+UDZ0fZ6CaWTY0
f+7cnkzWaOd5Xjrec07zlfzOat+vpn5uaL6zQPNB2eCxUp1r7TcL7WtT81s2
xDXaz9PjEHcm9P68rGqyQ/PdBZoPykbT855oap+EYfjofvvmQfMNOpfzX7P0
7w3QfHeB5oOysbZS2dLUP2mskDv12zdPms9jvNzHz3n7OR903N8vTggnJh6f
9rmg+e4CzQdlhOPho+t6gZzzOdP8iWRenWlVfW5Ur13J25tKHMNtQlrngua7
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
3+nU+8iv+5e23ZdwfWr290Ll/Zr+3q+CuJ7S01Bq5/h6EA9C84FLFEHzuTa0
yX3Lr1mj+XW32qHTSj1Btw13av/9Zj12a3T/kG7nYB+ffX1+D/v+/AyQ9ecC
9uC6nIn8xd+xbc+4gea7S941P8qp08Wv1/PmL1zw/UqcTW3GZXN+fvUl/fbf
yfMex88CTd+7i/6/dLomnjLqZwD5Y22lsmWiv+9q2/aMG2i+u+RZ87lekB53
vbzLNm4HNvR7/9TU1ATnYOMxWx2ruZnrEA1ybu4f4tgejvHhPOvTUgaL/Rwg
n9Dv+3+6v+/Htm0ZN9B8d8mr5ifrCHXrwxlE86Pad774Af/dkNKj4/2ZczEP
Y8cqpep0f3ySczeTNnwoVEoM90lAXqFr4zp9Hf3Cti3jBprvLnnVfO7L0c/e
s+3bdM3QhTWfntlJqw8zrxu16kH03xaLskfKHaO5vL53N8/t5Tm+izkOyA+t
/AtKXm/blnEDzXeXHGv+hl7xOa32oEufj4H0fTXHZKSdV59z9/CzA+fyoeXN
HBOa5vHB+IjbcPYrvBts2zJuoPnukkfN576cufG1zv53M65LmntWr2PQtuNo
+VJGJnL+zr05dyfrBefyrCC+s3BQ2/0pfR391rYt4waa7y551HyOyewWW98R
a98nRj/2xeXBWdrJ8Z18Do4H5XHAhi//LsvzgXTh8Rk9hnuzbVvGDTTfXfKo
+XPxmZ2xmKYvn5desTTReK0vH+b/s7c2ig96jO5vurOpxDe4dtc4zgtGg/z7
E7Wff5ttW8YNNN9d8qn5A/Tldxnbbe1T817Zb3tW8NgB3Uunc3xo1G5NiXDc
NoDBod/oCD0udIdtW8YNNN9d8qz5PN+2c1v3OVpJyG/7GG0/I1sre9Os1ban
7/XcOH+n/PCw8aFgPNDv81o9hnuXbVvGDTTfXfKs+e3jt1HMfhxbt7FfPA7H
3jU8b4/sLe1PqNRMoMQX4jzO4uRwYuLxtm0Cc4Q1b0/t599r25ZxA813lzxq
PvfLdOuvN/06fcduly9fFj8j5GfuFNm7C33PV3HufrrXjkR8Zz6g3+XZetzo
r7ZtGTfQfHfJpebruJ1k346Zl7vQPKxQVXcNlbwpeyuHh/1KnvPJsYHkW76G
Vi21bZPLND3viXpsaJNtW8YNNN9d8qj57N+bcVrWev16lvV+obw3pPdvDZT4
4rhsXQRLg5o4kNsl0v2fLpTzDWRH3fNWmRgw1569oPnukkfNZ6J5WTrfjpl/
NcicWt6PNP/Ucdg4CvV6fWv6fEdzzAjXZZ/2vGfYtsk1WuNDtNTry7azbc84
gea7S141f7FwTevQ915v245BYa0JlHw3jyM2fe+SVbXJNbZtcgXOm93yKWq1
7W3bM06g+e5SNs2nz3Jj0/OeZ9uOYeF4Ts71H+fvFOdwTQ/bNrmA0fxQiKZt
W8YJNN9dyqb5HINR5Fz37Oezvx/N6yL/37U+h3HDefiiGDHHauNA892lTJrP
+sifhZ/ZbdsyKg3Pe3rgi29GYxpKHMP5HWzbVEa4bYXmA5cok+Zz/mSe+2rb
jjThuB6O7+E4H473qSC+M1WM5vMcCtu2jBNovruUSfN53m6g5B9s25EBS0nz
Xx2NVfjy2mZN7mXboLLAeReiPv0CjgGNAjTfXUql+XTfljkXOseQR3nBlLyd
lu8mfVPf9x/LfVv9lrbDLW3fznXB551PiG0WOuYA55xXl4zzTyS3t/dZ8etR
zxmG4aOTx+S+vuT2NZOT25pt0XfJ9Tc9b49Rztnen8g2dPkukjUWloz6OXnO
edtvukX7Ppzvu9v3z9ePnvf4xkX8pvOeNdmO+fvUt05uH+TaXGhpnz/Rfm22
163j/Uc9J9udPCZ/ri7fRZKOe2roa7ctPwv/fl3OOe+e6vz++y+kkT9v/+3b
rs1Kh10L3FOLWdr1hu/L5PZB7im+bznXzqDnXEhvuuTH6binhl2SesPw5+7y
m867pzq+/xUTU/SbvSeO75RfjfNLc92u/vUGQl/sbo5J+7+lsx6B/KTZznmo
6fVDg9QxWKDGwSlz55zLg53YPm9etalRO8oS+vJKc7y4xoH25eeWh/k7jM6n
5M2jnk8v9ySvYTrupR12KbFf67to5XcbbUnO66BzvqPj+1XyQ63flPs+fblp
5PMqeVTrnJ63W+fnlNckf1P6/v84+mf1Lmnd+3Rfcnzb/M8pHkjer3TtXjT6
OcWt8z+HuLp9n2Stbp4PmsJvuikZr033w/u62HVi6zdVauc0riNdN1YfU+zb
+ZuLy8x2vs673FOLuY7ONcecnppY0ak33l3Je4rj8Ec9J+vLvN9UyV917JPI
hU/f9Umjn1M+lMyzSes+0blP9fC5zyl2H+C4j1TAouBnQ75XK4usk1xUqP19
KteSQ2yAe3B8CP/27c9jBQZjnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAC0wfVUm0qe1lTi8qYvZ5u+OMu2TQAAALJj
5cply2O9j3LVrrNtDwAAgGzheg6s+az/tm0BAACQHVz/RPv4s7ZtAQAAkC3k
46/XtZTW27YFAABA+nAfjunH0eO38+odAgAAKD6hEvuzxge+vJBjdIyP31Ry
o23bAAAApEek76TtSX/e+Pj8v03bAAAApIfx59nPT65nXx99+QAAUB445j7W
dXlhl206Lr+61oZtAAAA0iOab6XkRtZ1nnPbvp23cWy+DdsAAACkS5RXobeP
vy728ZFvAQAAyoCZX9stp0Jr/Bb5FgAAoPDoPDqbu/XrRDGbPbYBAAAoHjwu
a3Q9mUeH/47j8+fyLcT7YhwXAACKjBm/5VhM1nr277Xet/ry43la8jTbtgIA
ABiN1jxbvbDeG+1vrYfeAwBAaeA+m1jj5/fddFsHAAAAAAAAKC/xOG+Un+c0
PAsAAEB50TVUZlnrTV421M8CAIDyoWuit3Jv8mvkXwMAgHISxXEirzIAADhB
nKsB+XcAAMAF2jUf9RIBAKC8mDHbOF4nnqNr2yYAAADZweO2rPWI1QF55P8B
fL0Mjg==
        "], {{0, 111.36}, {182.88, 0}}, {0, 255}, ColorFunction -> 
        RGBColor, ImageResolution -> 150], 
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
       Selectable -> False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
      Automatic, ImageSizeRaw -> {182.88, 111.36}, 
      PlotRange -> {{0, 182.88}, {0, 111.36}}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{
  3.825805534056531*^9},ExpressionUUID->"4d49aff7-967d-430d-b391-\
d441f8d89624"],

Cell[BoxData[{
 RowBox[{"f", ":", 
  RowBox[{"focal", " ", "length"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", ":", 
   RowBox[{"mechanical", " ", "working", " ", "distance"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["d", "c"], ":", 
  RowBox[{
  "mechanical", " ", "thickness", " ", "of", " ", "cover", " ", 
   "glass"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["n", "c"], ":", 
  RowBox[{
  "refractive", " ", "index", " ", "of", " ", "cover", " ", "glass", " ", 
   "material"}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.825727862277256*^9, 3.825727956058918*^9}, {
  3.825728111432921*^9, 3.825728166276469*^9}, {3.825728201465061*^9, 
  3.8257282313390837`*^9}, {3.825744430492483*^9, 3.8257444591294823`*^9}, {
  3.825744489734045*^9, 3.8257445002314043`*^9}, {3.825744600257921*^9, 
  3.825744660801105*^9}},ExpressionUUID->"04b61733-3a18-4305-bb0f-\
34e1aabfc4e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"baseConditions", "[", "infiniteSingletWithCG", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     
     RowBox[{
      RowBox[{
       SubscriptBox["h", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"f", "*", "t"}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", "-", 
          SubscriptBox["d", "c"]}], ")"}], " ", 
        RowBox[{"Tan", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        SubscriptBox["d", "c"], "*", 
        RowBox[{"Tan", "[", 
         RowBox[{"ArcSin", "[", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "/", 
           SubscriptBox["n", "c"]}], "]"}], "]"}]}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseConditionDifferentials", "[", "infiniteSingletWithCG", "]"}], 
   "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
     RowBox[{"baseConditions", "[", "infiniteSingletWithCG", "]"}]}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.801265128388286*^9, 3.80126517625208*^9}, {
   3.801265277172641*^9, 3.801265292438443*^9}, 3.8012680397721977`*^9, 
   3.801282354464259*^9, {3.801282451290474*^9, 3.801282451291667*^9}, {
   3.80128249143426*^9, 3.801282502446006*^9}, {3.801283223368376*^9, 
   3.801283227597582*^9}, {3.8032627677708397`*^9, 3.803262767771641*^9}, 
   3.803262806894779*^9, {3.803263071646736*^9, 3.803263072033045*^9}, {
   3.803351298572352*^9, 3.803351298572879*^9}, {3.804217590386479*^9, 
   3.8042175903869762`*^9}, {3.804218203086216*^9, 3.804218203086794*^9}, {
   3.8042195603041143`*^9, 3.8042195921981783`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"74744478-dc43-4835-bdca-b801e0f6ce0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"thetaRestoreRule", "[", "infinite", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"ArcSin", "[", "t", "]"}], ",", "t"}], "]"}], "/.", 
         RowBox[{"t", "\[Rule]", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}]}], ",", 
        RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "2"}], "<", 
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "<", 
           RowBox[{"Pi", "/", "2"}]}], "}"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"ArcSin", "[", "t", "]"}], ",", "t"}], "]"}], "/.", 
         RowBox[{"t", "\[Rule]", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}]}], ",", 
        RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "2"}], "<", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "<", 
           RowBox[{"Pi", "/", "2"}]}], "}"}]}]}], "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.801274336378481*^9, 3.801274375340475*^9}, {
   3.801274449971085*^9, 3.8012745642065983`*^9}, 3.803263201896646*^9, {
   3.804220233865529*^9, 3.804220237363061*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"369e8eba-7401-453b-a312-5e51d7f06470"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"baseConditions", "[", "infiniteSingletWithCG", "]"}], ",", 
      RowBox[{
       RowBox[{
       "baseConditionDifferentials", "[", "infiniteSingletWithCG", "]"}], "/.", 
       RowBox[{"thetaRestoreRule", "[", "infinite", "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["n", "c"], ">", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804219789446638*^9, 3.8042197980528917`*^9}, {
   3.8042198395556087`*^9, 3.8042198418955927`*^9}, {3.804219981086918*^9, 
   3.804220004801252*^9}, 3.8042202414577847`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"33bca472-8490-4ae1-be01-219b20d5b405"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wweq1011", "[", "infiniteSingletWithCG", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
       "vectorRDefinition"}], "/.", 
      RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "//.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"baseConditions", "[", "infiniteSingletWithCG", "]"}], ",", 
       RowBox[{
       "baseConditionDifferentials", "[", "infiniteSingletWithCG", "]"}]}], 
      "]"}]}], "/.", 
    RowBox[{"thetaRule", "[", "infinite", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8012653284370823`*^9, 3.8012653369773607`*^9}, 
   3.801282354467566*^9, {3.801282451292324*^9, 3.8012824512929792`*^9}, {
   3.801282491435053*^9, 3.801282507800558*^9}, {3.801282589826231*^9, 
   3.80128262535384*^9}, 3.801282956708745*^9, {3.801283230938879*^9, 
   3.801283240861774*^9}, {3.801283337963759*^9, 3.8012833401216993`*^9}, {
   3.8032627560168667`*^9, 3.8032627677734632`*^9}, 3.803262806895697*^9, 
   3.80326288938764*^9, {3.8032630716488*^9, 3.803263071649729*^9}, 
   3.8032631432804527`*^9, {3.803351298573606*^9, 3.80335129857412*^9}, {
   3.804217590387546*^9, 3.804217590388001*^9}, {3.80421820308855*^9, 
   3.8042182030890493`*^9}, {3.804219602749764*^9, 3.804219613269711*^9}, 
   3.804220246037664*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"92706b26-abdc-4f77-a30d-80624af154e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numvals", "[", "infiniteSingletWithCG", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "1.5168"}], ",", 
     RowBox[{"f", "\[Rule]", "3."}], ",", 
     RowBox[{"m", "\[Rule]", "2."}], ",", 
     RowBox[{"d", "\[Rule]", "2.5"}], ",", 
     RowBox[{
      SubscriptBox["d", "c"], "\[Rule]", "0.6"}], ",", 
     RowBox[{
      SubscriptBox["n", "c"], "\[Rule]", "1.62"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"na", "=", "0.6"}], ";"}]}], "Input",
 CellChangeTimes->{{3.801265904920395*^9, 3.8012659278481693`*^9}, {
   3.801265964750535*^9, 3.80126603368968*^9}, {3.801283361700548*^9, 
   3.8012833677974463`*^9}, 3.803263142994617*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"c26016dd-9b06-45c4-abf6-462057777cd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutions", "[", "infiniteSingletWithCG", "]"}], "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"wweq1011", "[", "infiniteSingletWithCG", "]"}], ",", 
       "boundaryConditions"}], "]"}], "/.", 
     RowBox[{"numvals", "[", "infiniteSingletWithCG", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "na"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.801265942397418*^9, 3.801265950393491*^9}, 
   3.801282632599884*^9, {3.8012833772808123`*^9, 3.801283389835889*^9}, 
   3.803262916605557*^9, 3.803263043554935*^9, {3.803263143000574*^9, 
   3.803263143002365*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"b05f0187-dc2e-4978-a253-fb045d273b97"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["x", "2"], "[", "t", "]"}], "+", "d"}], ",", 
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "+", "m"}], ",", "0"}], "}"}]}], "}"}], "/.", 
         RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "/.", 
        RowBox[{"baseConditions", "[", "infiniteSingletWithCG", "]"}]}], "/.", 
       RowBox[{"thetaRule", "[", "infinite", "]"}]}], "/.", 
      RowBox[{"numvals", "[", "infiniteSingletWithCG", "]"}]}], "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"solutions", "[", "infiniteSingletWithCG", "]"}], "]"}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "na"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.801265979644067*^9, 3.80126598669871*^9}, 
   3.801266527339118*^9, 3.801282451296273*^9, 3.801282491436257*^9, {
   3.801283426208536*^9, 3.801283459486478*^9}, {3.803262756041973*^9, 
   3.803262767776841*^9}, {3.803263043556425*^9, 3.80326307165222*^9}, {
   3.803263143004263*^9, 3.80326314300568*^9}, {3.803351298575135*^9, 
   3.8033512985757427`*^9}, {3.804217590391168*^9, 3.80421759039182*^9}, {
   3.804218203092312*^9, 3.8042182030928383`*^9}, 3.8042199117944098`*^9, 
   3.804220251944428*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"a1d7a59a-1d67-406f-af0b-4fb8bcdea02b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finite Conjugate", "Chapter",
 CellChangeTimes->{{3.801274089621552*^9, 3.80127410486205*^9}, {
  3.8025537969529552`*^9, 
  3.802553798549115*^9}},ExpressionUUID->"aea75a9a-b06a-4ce3-be99-\
3bf24ea851d5"],

Cell[BoxData[{
 RowBox[{"f", ":", 
  RowBox[{"focal", " ", "length"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["m", "1"], ":", 
  RowBox[{
  "distance", " ", "between", " ", "object", " ", "point", " ", "and", " ", 
   "first", " ", "surface"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["m", "2"], ":", 
  RowBox[{
  "distance", " ", "between", " ", "second", " ", "surface", " ", "and", " ", 
   "image", " ", "point", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"i", ".", "e", "."}], ",", 
     RowBox[{"W", ".", "D", "."}]}], ")"}]}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.825727862277256*^9, 3.825727956058918*^9}, {
  3.825728111432921*^9, 3.825728166276469*^9}, {3.825728201465061*^9, 
  3.8257282313390837`*^9}, {3.825744430492483*^9, 3.8257444591294823`*^9}, {
  3.825744489734045*^9, 3.8257445002314043`*^9}, {3.825744600257921*^9, 
  3.825744660801105*^9}, {3.825744701023479*^9, 
  3.8257447804378557`*^9}},ExpressionUUID->"be6e18c1-2008-458b-89f3-\
9dbb6cec7e94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"baseConditions", "[", "finiteSinglet", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["m", "1"], "*", 
       RowBox[{"Tan", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["m", "2"], " ", 
       RowBox[{"Tan", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}]}]}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseConditionDifferentials", "[", "finiteSinglet", "]"}], "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
     RowBox[{"baseConditions", "[", "finiteSinglet", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8012741230534983`*^9, 3.801274224604081*^9}, {
   3.801274291874329*^9, 3.80127430375525*^9}, {3.801282529348068*^9, 
   3.8012825424218903`*^9}, {3.8012834676983347`*^9, 3.801283471658847*^9}, {
   3.803262767780081*^9, 3.803262767781086*^9}, 3.803262806896924*^9, {
   3.803263164168758*^9, 3.803263164587946*^9}, {3.8033512985765047`*^9, 
   3.803351298577124*^9}, {3.804217590393015*^9, 3.80421759039363*^9}, {
   3.8042182030948753`*^9, 3.804218203095449*^9}, {3.804220076352228*^9, 
   3.8042201020691*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"c41597a3-d27e-4b5c-b6fa-c023f786e52a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"thetaRestoreRule", "[", "finite", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"ArcSin", "[", "t", "]"}], ",", "t"}], "]"}], "/.", 
         RowBox[{"t", "\[Rule]", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}]}], ",", 
        RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "2"}], "<", 
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "<", 
           RowBox[{"Pi", "/", "2"}]}], "}"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"ArcSin", "[", "t", "]"}], ",", "t"}], "]"}], "/.", 
         RowBox[{"t", "\[Rule]", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}]}], ",", 
        RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "2"}], "<", 
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "<", 
           RowBox[{"Pi", "/", "2"}]}], "}"}]}]}], "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.801274336378481*^9, 3.801274375340475*^9}, {
   3.801274449971085*^9, 3.8012745642065983`*^9}, 3.803263201896646*^9, {
   3.8042202602255573`*^9, 3.804220261067857*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"909ade8e-3a0c-4765-8559-7de93387baca"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"baseConditions", "[", "finiteSinglet", "]"}], ",", 
      RowBox[{"baseConditionDifferentials", "[", "finiteSinglet", "]"}]}], 
     "]"}]}], "/.", 
   RowBox[{"thetaRestoreRule", "[", "finite", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8012742571906023`*^9, 3.801274283616693*^9}, {
   3.801274380918304*^9, 3.8012743813584948`*^9}, {3.801274417570773*^9, 
   3.801274437324967*^9}, {3.801282529352387*^9, 3.801282541778706*^9}, {
   3.801283477756331*^9, 3.8012834832241573`*^9}, 3.803262767783785*^9, 
   3.8032628068980207`*^9, {3.80326316417087*^9, 3.803263164171582*^9}, 
   3.8032632014430933`*^9, 3.80335129857771*^9, 3.804217590394187*^9, 
   3.8042182030965*^9, {3.8042202709006853`*^9, 3.804220281442609*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"bd52f5c5-6b19-4b0f-ae9e-a58572b9a7e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"thetaRule", "[", "finite", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"D", "[", 
            RowBox[{"#", ",", "t"}], "]"}]}], "}"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "\[Rule]", 
           RowBox[{"ArcSin", "[", "t", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "\[Rule]", 
           RowBox[{"ArcSin", "[", 
            RowBox[{"t", "/", "\[Beta]"}], "]"}]}]}], "}"}]}], "]"}], "]"}], 
     ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ">", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801274879796488*^9, 3.801274990475553*^9}, {
   3.801282650205776*^9, 3.801282654177064*^9}, 3.803263250768911*^9, 
   3.804220287763793*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"9c34463c-5fe0-4210-aecb-1ad6a4d08d6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wweq1011", "[", "finiteSinglet", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
       "vectorRDefinition"}], "/.", 
      RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "//.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"baseConditions", "[", "finiteSinglet", "]"}], ",", 
       RowBox[{"baseConditionDifferentials", "[", "finiteSinglet", "]"}]}], 
      "]"}]}], "/.", 
    RowBox[{"thetaRule", "[", "finite", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.801274846730495*^9, 3.8012748623481483`*^9}, 
   3.801274994040193*^9, {3.80128252935754*^9, 3.801282541779481*^9}, {
   3.801282670151778*^9, 3.80128267267111*^9}, 3.801282956709807*^9, {
   3.80128349260646*^9, 3.8012835023602*^9}, {3.803262756051173*^9, 
   3.803262767785626*^9}, 3.80326280689911*^9, 3.803262889389181*^9, {
   3.803263164172526*^9, 3.8032631641732597`*^9}, 3.803263250290646*^9, {
   3.803351298578288*^9, 3.803351298578764*^9}, {3.8042175903947773`*^9, 
   3.804217590395235*^9}, {3.8042182030972843`*^9, 3.804218203097742*^9}, {
   3.804220298462454*^9, 3.804220356953877*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"770a361c-2d20-4b8b-a678-87a51b64edde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numericalValues", "[", "finiteSinglet", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "1.5168"}], ",", 
     RowBox[{
      SubscriptBox["m", "1"], "\[Rule]", "8.15"}], ",", 
     RowBox[{"d", "\[Rule]", "4"}], ",", 
     RowBox[{
      SubscriptBox["m", "2"], "\[Rule]", "3."}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "0.5"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"na", "=", "0.3"}], ";"}]}], "Input",
 CellChangeTimes->{{3.801275025540429*^9, 3.801275053891033*^9}, {
   3.801275133915406*^9, 3.801275191548542*^9}, {3.801275242837984*^9, 
   3.801275625882442*^9}, {3.801275714242878*^9, 3.801275723128501*^9}, {
   3.801275755024578*^9, 3.8012758771995564`*^9}, {3.8012835476662207`*^9, 
   3.801283550038887*^9}, 3.803263314605793*^9, 3.804220361420041*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"222cb5fb-2275-432e-9ad9-e51a219a67cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutions", "[", "finiteSinglet", "]"}], "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"wweq1011", "[", "finiteSinglet", "]"}], ",", 
       "boundaryConditions"}], "]"}], "/.", 
     RowBox[{"numericalValues", "[", "finiteSinglet", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "na"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8012750704851847`*^9, 3.8012750818835173`*^9}, 
   3.801282688142252*^9, {3.8012835575428123`*^9, 3.8012836037245903`*^9}, 
   3.8032629166081867`*^9, 3.803263043557716*^9, 3.803263314245777*^9, {
   3.804220365841461*^9, 3.80422037563865*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"69046d28-2cdf-46ac-a547-385a32011d4a"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["m", "1"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["x", "2"], "[", "t", "]"}], "+", "d"}], ",", 
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "+", "m"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "+", 
              SubscriptBox["m", "2"]}], ",", "0"}], "}"}]}], "}"}], "/.", 
         RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "/.", 
        RowBox[{"baseConditions", "[", "finiteSinglet", "]"}]}], "/.", 
       RowBox[{"thetaRule", "[", "finite", "]"}]}], "/.", 
      RowBox[{"numericalValues", "[", "finiteSinglet", "]"}]}], "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"solutions", "[", "finiteSinglet", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "na"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.801275099119287*^9, 3.8012751255007477`*^9}, {
   3.801275202147472*^9, 3.80127522786404*^9}, 3.80128252936276*^9, {
   3.801283581258132*^9, 3.8012836094625483`*^9}, 3.802728924995722*^9, {
   3.803262756078505*^9, 3.803262767788865*^9}, 3.803263043559269*^9, 
   3.8032631641751957`*^9, 3.80326325029287*^9, 3.803263314247768*^9, {
   3.8033512985796423`*^9, 3.803351298580267*^9}, {3.804217590399419*^9, 
   3.804217590400136*^9}, {3.804218203100164*^9, 3.804218203100651*^9}, 
   3.804220339301108*^9, {3.804220381927371*^9, 3.804220393797414*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"ea1e7fc8-7658-4458-ab04-5e63a4f74585"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finite conjugate with cover glass in image space", "Chapter",
 CellChangeTimes->{{3.8025779454496307`*^9, 
  3.8025779779779177`*^9}},ExpressionUUID->"621b4053-c226-4fc8-8674-\
43db3a93ff3e"],

Cell[BoxData[{
 RowBox[{"f", ":", 
  RowBox[{"focal", " ", "length"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["m", "1"], ":", 
  RowBox[{
  "distance", " ", "between", " ", "object", " ", "point", " ", "and", " ", 
   "first", " ", "surface"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["m", "2"], ":", 
  RowBox[{
  "mechanical", " ", "working", " ", "distance"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["d", "c"], ":", 
  RowBox[{
  "mechanical", " ", "thickness", " ", "of", " ", "cover", " ", 
   "glass"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["n", "c"], ":", 
  RowBox[{
  "refractive", " ", "index", " ", "of", " ", "cover", " ", "glass", " ", 
   "material"}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.825727862277256*^9, 3.825727956058918*^9}, {
  3.825728111432921*^9, 3.825728166276469*^9}, {3.825728201465061*^9, 
  3.8257282313390837`*^9}, {3.825744430492483*^9, 3.8257444591294823`*^9}, {
  3.825744489734045*^9, 3.8257445002314043`*^9}, {3.825744600257921*^9, 
  3.825744660801105*^9}, {3.825744701023479*^9, 
  3.8257448282766867`*^9}},ExpressionUUID->"a60e2f92-89ef-4000-ab84-\
564d2a384e3d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"baseConditions", "[", "finiteWithImageCG", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["m", "1"], "*", 
       RowBox[{"Tan", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["m", "2"], "-", 
          SubscriptBox["d", "c"]}], ")"}], " ", 
        RowBox[{"Tan", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        SubscriptBox["d", "c"], 
        RowBox[{"Tan", "[", 
         RowBox[{"ArcSin", "[", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], "/", 
           SubscriptBox["n", "c"]}], "]"}], "]"}]}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseConditionDifferentials", "[", "finiteWithImageCG", "]"}], "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
     RowBox[{"baseConditions", "[", "finiteWithImageCG", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.80257798944678*^9, 3.802577991482933*^9}, {
   3.8025780242773323`*^9, 3.802578105570997*^9}, 3.802638974424633*^9, {
   3.8032627677929573`*^9, 3.8032627677936983`*^9}, 3.803262806900426*^9, {
   3.803351298581093*^9, 3.803351298581587*^9}, {3.804217590401556*^9, 
   3.8042175904020567`*^9}, {3.8042182031017513`*^9, 
   3.8042182031022453`*^9}, {3.8042204348265142`*^9, 3.8042204738639517`*^9}},
 
 CellLabel->"In[47]:=",ExpressionUUID->"0b592839-fe6a-4fce-aaee-5023a3aef461"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"baseConditions", "[", "finiteWithImageCG", "]"}], ",", 
       RowBox[{
       "baseConditionDifferentials", "[", "finiteWithImageCG", "]"}]}], 
      "]"}]}], "/.", 
    RowBox[{"thetaRestoreRule", "[", "finite", "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["n", "c"], ">", "1"}], ",", 
      RowBox[{"n", ">", "1"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.802578136677671*^9, 3.802578139625181*^9}, 
   3.8025783415449038`*^9, {3.802578373416037*^9, 3.8025784025996523`*^9}, 
   3.803262767796524*^9, 3.803262806901382*^9, 3.803263201445122*^9, 
   3.803351298582193*^9, 3.804217590402873*^9, 3.80421820310295*^9, {
   3.804220484383995*^9, 3.804220495476144*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"7f36452a-2a25-4cf5-935a-24c5553ef096"],

Cell["evaluation of  an expression bellow may be slow.", "Text",
 CellChangeTimes->{{3.804221499139308*^9, 3.804221530211187*^9}, {
  3.804221564512537*^9, 
  3.8042215675616837`*^9}},ExpressionUUID->"1bf73362-f9b7-4fea-b289-\
8bd5cc3df685"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wweq1011", "[", "finiteWithImageCG", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
       "vectorRDefinition"}], "/.", 
      RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "//.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"baseConditions", "[", "finiteWithImageCG", "]"}], ",", 
       RowBox[{
       "baseConditionDifferentials", "[", "finiteWithImageCG", "]"}]}], 
      "]"}]}], "/.", 
    RowBox[{"thetaRule", "[", "finite", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802578418280551*^9, 3.80257842444557*^9}, {
   3.803262756087082*^9, 3.80326276779823*^9}, 3.803262806902273*^9, 
   3.803262889390547*^9, 3.803263250294016*^9, {3.803351298583929*^9, 
   3.8033512985843983`*^9}, {3.804217590403469*^9, 3.8042175904039307`*^9}, {
   3.804218203103677*^9, 3.804218203104128*^9}, {3.804220505994405*^9, 
   3.804220515086488*^9}, 3.804221406953782*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"14799a36-d379-403b-badb-85cc69027e3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finite conjugate with cover glass in object space", "Chapter",
 CellChangeTimes->{{3.80263895282682*^9, 
  3.802638967901325*^9}},ExpressionUUID->"edd27eaf-9ee0-437c-9a8f-\
fdb5eb7282b7"],

Cell[BoxData[{
 RowBox[{"f", ":", 
  RowBox[{"focal", " ", "length"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["m", "1"], ":", 
  RowBox[{
  "distance", " ", "between", " ", "object", " ", "point", " ", "and", " ", 
   "first", " ", "surface"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["m", "2"], ":", 
  RowBox[{
  "mechanical", " ", "working", " ", "distance"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["d", "c"], ":", 
  RowBox[{
  "mechanical", " ", "thickness", " ", "of", " ", "cover", " ", "glass", " ", 
   "in", " ", "object", " ", "space"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["n", "c"], ":", 
  RowBox[{
  "refractive", " ", "index", " ", "of", " ", "cover", " ", "glass", " ", 
   "material"}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.825727862277256*^9, 3.825727956058918*^9}, {
  3.825728111432921*^9, 3.825728166276469*^9}, {3.825728201465061*^9, 
  3.8257282313390837`*^9}, {3.825744430492483*^9, 3.8257444591294823`*^9}, {
  3.825744489734045*^9, 3.8257445002314043`*^9}, {3.825744600257921*^9, 
  3.825744660801105*^9}, {3.825744701023479*^9, 3.8257448282766867`*^9}, {
  3.825744866228907*^9, 
  3.825744874367506*^9}},ExpressionUUID->"03aabfc7-f0ab-45fa-97bd-\
993de04ffa9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"baseConditions", "[", "finiteWithObjectCG", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["m", "1"], "-", 
          SubscriptBox["d", "c"]}], ")"}], " ", 
        RowBox[{"Tan", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        SubscriptBox["d", "c"], 
        RowBox[{"Tan", "[", 
         RowBox[{"ArcSin", "[", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], "/", 
           SubscriptBox["n", "c"]}], "]"}], "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["m", "2"], "*", 
       RowBox[{"Tan", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}]}]}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseConditionDifferentials", "[", "finiteWithObjectCG", "]"}], 
   "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
     RowBox[{"baseConditions", "[", "finiteWithObjectCG", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8026390228753357`*^9, 3.802639075800796*^9}, {
   3.803262767802437*^9, 3.803262767803541*^9}, 3.803262806903407*^9, {
   3.803351298585787*^9, 3.803351298586417*^9}, {3.804217590409235*^9, 
   3.804217590409869*^9}, {3.804218203105218*^9, 3.804218203105715*^9}, {
   3.804220557239565*^9, 3.804220580673169*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"e5faf9a4-7867-48c8-8462-be06632e5d81"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"baseConditions", "[", "finiteWithObjectCG", "]"}], ",", 
       RowBox[{
       "baseConditionDifferentials", "[", "finiteWithObjectCG", "]"}]}], 
      "]"}]}], "/.", 
    RowBox[{"thetaRestoreRule", "[", "finite", "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["n", "c"], ">", "1"}], ",", 
      RowBox[{"n", ">", "1"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.802639087320153*^9, 3.802639089627655*^9}, 
   3.803262767806314*^9, 3.8032628069043703`*^9, 3.8032632014464483`*^9, 
   3.803351298587233*^9, 3.804217590410688*^9, 3.804218203106422*^9, {
   3.8042205886378593`*^9, 3.80422059931599*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"0d1c44d2-f978-47a5-bed2-cd3cd8fcf3f2"],

Cell["evaluation of an expression bellow may also be slow.", "Text",
 CellChangeTimes->{{3.804221499139308*^9, 3.804221530211187*^9}, {
  3.8042216007818727`*^9, 
  3.804221615655694*^9}},ExpressionUUID->"def23fce-ddac-41a6-bbf3-\
89455d6aaa62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wweq1011", "[", "finiteWithObjectCG", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
       "vectorRDefinition"}], "/.", 
      RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "//.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"baseConditions", "[", "finiteWithObjectCG", "]"}], ",", 
       RowBox[{
       "baseConditionDifferentials", "[", "finiteWithObjectCG", "]"}]}], 
      "]"}]}], "/.", 
    RowBox[{"thetaRule", "[", "finite", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8026393247333393`*^9, 3.8026393307192707`*^9}, {
   3.8032627560997953`*^9, 3.8032627678082943`*^9}, 3.803262806905287*^9, 
   3.803262889391704*^9, 3.803263250295388*^9, {3.803351298588336*^9, 
   3.8033512985888*^9}, {3.804217590411293*^9, 3.804217590411765*^9}, {
   3.804218203107192*^9, 3.8042182031076508`*^9}, {3.804220608123258*^9, 
   3.804220630724703*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"5e305e87-079c-4c4c-af0d-883615351972"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Finite conjugate with cover glass in both image and object space\
\>", "Chapter",
 CellChangeTimes->{{3.802639389254045*^9, 
  3.802639397781096*^9}},ExpressionUUID->"3869eecf-5a42-4547-900b-\
71db8a74489d"],

Cell[BoxData[{
 RowBox[{"f", ":", 
  RowBox[{"focal", " ", "length"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["m", "1"], ":", 
  RowBox[{
  "distance", " ", "between", " ", "object", " ", "point", " ", "and", " ", 
   "first", " ", "surface"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["m", "2"], ":", 
  RowBox[{
  "mechanical", " ", "working", " ", "distance"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["d", "c1"], ":", 
  RowBox[{
  "mechanical", " ", "thickness", " ", "of", " ", "cover", " ", "glass", " ", 
   "in", " ", "object", " ", "space"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["n", "c1"], ":", 
  RowBox[{
  "refractive", " ", "index", " ", "of", " ", "cover", " ", "glass", " ", 
   "in", " ", "object", " ", "space"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["d", "c2"], ":", 
  RowBox[{
  "mechanical", " ", "thickness", " ", "of", " ", "cover", " ", "glass", " ", 
   "in", " ", "image", " ", "space"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["n", "c2"], ":", 
  RowBox[{
  "refractive", " ", "index", " ", "of", " ", "cover", " ", "glass", " ", 
   "in", " ", "image", " ", "space"}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.825727862277256*^9, 3.825727956058918*^9}, {
  3.825728111432921*^9, 3.825728166276469*^9}, {3.825728201465061*^9, 
  3.8257282313390837`*^9}, {3.825744430492483*^9, 3.8257444591294823`*^9}, {
  3.825744489734045*^9, 3.8257445002314043`*^9}, {3.825744600257921*^9, 
  3.825744660801105*^9}, {3.825744701023479*^9, 3.8257448282766867`*^9}, {
  3.825744866228907*^9, 
  3.825744932892425*^9}},ExpressionUUID->"cf8216ff-2d92-4c98-93f0-\
6f365df1e695"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"baseConditions", "[", "finiteWithCGBothSide", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "1"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["m", "1"], "-", 
          SubscriptBox["d", "c1"]}], ")"}], " ", 
        RowBox[{"Tan", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        SubscriptBox["d", "c1"], 
        RowBox[{"Tan", "[", 
         RowBox[{"ArcSin", "[", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], "/", 
           SubscriptBox["n", "c1"]}], "]"}], "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["m", "2"], "-", 
          SubscriptBox["d", "c2"]}], ")"}], " ", 
        RowBox[{"Tan", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        SubscriptBox["d", "c2"], 
        RowBox[{"Tan", "[", 
         RowBox[{"ArcSin", "[", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], "/", 
           SubscriptBox["n", "c2"]}], "]"}], "]"}]}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseConditionDifferentials", "[", "finiteWithCGBothSide", "]"}], 
   "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
     RowBox[{"baseConditions", "[", "finiteWithCGBothSide", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.802639413430628*^9, 3.802639456417728*^9}, {
   3.803262767812521*^9, 3.803262767813566*^9}, 3.803262806906395*^9, {
   3.8033512985902767`*^9, 3.803351298590914*^9}, {3.8042175904170713`*^9, 
   3.804217590417735*^9}, {3.804218203108877*^9, 3.804218203109399*^9}, {
   3.804220646925565*^9, 3.8042206964833117`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"f403af78-8745-45e1-b23b-3a69db31107f"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"baseConditions", "[", "finiteWithCGBothSide", "]"}], ",", 
       RowBox[{
       "baseConditionDifferentials", "[", "finiteWithCGBothSide", "]"}]}], 
      "]"}]}], "/.", 
    RowBox[{"thetaRestoreRule", "[", "finite", "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["n", "c1"], ">", "1"}], ",", 
      RowBox[{
       SubscriptBox["n", "c2"], ">", "1"}], ",", 
      RowBox[{"n", ">", "1"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.802639468039571*^9, 3.802639497435256*^9}, 
   3.803262767816332*^9, 3.803262806907336*^9, 3.803263201447674*^9, 
   3.803351298591742*^9, 3.804217590418591*^9, 3.804218203110119*^9, {
   3.804220703119958*^9, 3.80422071161594*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"a8e861ad-69cc-4901-9300-a57622e0f5a3"],

Cell["\<\
It may take very log time to evaluate an expression bellow because it will be \
very large.\
\>", "Text",
 CellChangeTimes->{{3.804221499139308*^9, 3.804221530211187*^9}, {
  3.8042216007818727`*^9, 3.804221615655694*^9}, {3.80422169047871*^9, 
  3.804221691357752*^9}, {3.804222160434816*^9, 3.804222163392448*^9}, {
  3.826593185713933*^9, 
  3.8265932564634733`*^9}},ExpressionUUID->"74c6e5f8-16d4-4f85-a038-\
ab2a00850613"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"wweq1011", "[", "finiteWithCGBothSide", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
       "vectorRDefinition"}], "/.", 
      RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "//.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"baseConditions", "[", "finiteWithCGBothSide", "]"}], ",", 
       RowBox[{
       "baseConditionDifferentials", "[", "finiteWithCGBothSide", "]"}]}], 
      "]"}]}], "/.", 
    RowBox[{"thetaRule", "[", "finite", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802639511170669*^9, 3.802639517033229*^9}, {
   3.803262756111685*^9, 3.8032627678180437`*^9}, 3.803262806908229*^9, 
   3.803262889392844*^9, 3.803263250296577*^9, {3.8033512985927896`*^9, 
   3.8033512985932503`*^9}, {3.804217590419202*^9, 3.804217590419672*^9}, {
   3.804218203110896*^9, 3.804218203111355*^9}, {3.804220721884832*^9, 
   3.8042207245175877`*^9}, 3.804221657380855*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"c3bc371d-f9e6-49d9-9de6-20f1bb8b72bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["x", "1"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["d", "c1"]}], "+", 
             SubscriptBox["m", "1"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["t", "2"]}], ")"}], 
             RowBox[{"3", "/", "2"}]]], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["t", "2"], " ", 
             SubscriptBox["d", "c1"]}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 SuperscriptBox["t", "2"], 
                 SubsuperscriptBox["n", "c1", "2"]]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             SubsuperscriptBox["n", "c1", "3"]}]], "+", 
           FractionBox[
            SubscriptBox["d", "c1"], 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                SuperscriptBox["t", "2"], 
                SubsuperscriptBox["n", "c1", "2"]]}]], " ", 
             SubscriptBox["n", "c1"]}]], "+", 
           FractionBox[
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["t", "2"]}], ")"}], 
             RowBox[{"3", "/", "2"}]]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["d", "c1"]}], "+", 
               SubscriptBox["m", "1"]}], ")"}]}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["t", "2"]}]]], "+", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["d", "c2"], "-", 
               SubscriptBox["m", "2"]}], ")"}]}], 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                SuperscriptBox["t", "2"], 
                SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], "+", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             SubscriptBox["d", "c1"]}], 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                SuperscriptBox["t", "2"], 
                SubsuperscriptBox["n", "c1", "2"]]}]], " ", 
             SubscriptBox["n", "c1"]}]], "-", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             SubscriptBox["d", "c2"]}], 
            RowBox[{"\[Beta]", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                SuperscriptBox["t", "2"], 
                RowBox[{
                 SuperscriptBox["\[Beta]", "2"], " ", 
                 SubsuperscriptBox["n", "c2", "2"]}]]}]], " ", 
             SubscriptBox["n", "c2"]}]], "+", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}]}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["t", "2"]}]]], "+", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}]}], 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                SuperscriptBox["t", "2"], 
                SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], "+", 
           RowBox[{"t", " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"d", "-", 
                  RowBox[{
                   SubscriptBox["x", "1"], "[", "t", "]"}], "+", 
                  RowBox[{
                   SubscriptBox["x", "2"], "[", "t", "]"}]}], ")"}], "2"], 
               "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["d", "c1"], "-", 
                    SubscriptBox["m", "1"]}], ")"}]}], 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["t", "2"]}]]], "+", 
                  FractionBox[
                   RowBox[{"t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SubscriptBox["d", "c2"]}], "+", 
                    SubscriptBox["m", "2"]}], ")"}]}], 
                   RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], 
                  "-", 
                  FractionBox[
                   RowBox[{"t", " ", 
                    SubscriptBox["d", "c1"]}], 
                   RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    SubsuperscriptBox["n", "c1", "2"]]}]], " ", 
                    SubscriptBox["n", "c1"]}]], "+", 
                  FractionBox[
                   RowBox[{"t", " ", 
                    SubscriptBox["d", "c2"]}], 
                   RowBox[{"\[Beta]", " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    SubsuperscriptBox["n", "c2", "2"]}]]}]], " ", 
                    SubscriptBox["n", "c2"]}]], "-", 
                  FractionBox[
                   RowBox[{"t", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "[", "t", "]"}]}], 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["t", "2"]}]]], "-", 
                  FractionBox[
                   RowBox[{"t", " ", 
                    RowBox[{
                    SubscriptBox["x", "2"], "[", "t", "]"}]}], 
                   RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]]}], 
                 ")"}], "2"]}], ")"}]}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "n"}], " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], "+", 
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}]}], ")"}]}], "-", 
         FractionBox[
          RowBox[{"n", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"t", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["d", "c1"], "-", 
                 SubscriptBox["m", "1"]}], ")"}]}], 
              SqrtBox[
               RowBox[{"1", "-", 
                SuperscriptBox["t", "2"]}]]], "+", 
             FractionBox[
              RowBox[{"t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SubscriptBox["d", "c2"]}], "+", 
                 SubscriptBox["m", "2"]}], ")"}]}], 
              RowBox[{
               SqrtBox[
                RowBox[{"1", "-", 
                 FractionBox[
                  SuperscriptBox["t", "2"], 
                  SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], "-", 
             
             FractionBox[
              RowBox[{"t", " ", 
               SubscriptBox["d", "c1"]}], 
              RowBox[{
               SqrtBox[
                RowBox[{"1", "-", 
                 FractionBox[
                  SuperscriptBox["t", "2"], 
                  SubsuperscriptBox["n", "c1", "2"]]}]], " ", 
               SubscriptBox["n", "c1"]}]], "+", 
             FractionBox[
              RowBox[{"t", " ", 
               SubscriptBox["d", "c2"]}], 
              RowBox[{"\[Beta]", " ", 
               SqrtBox[
                RowBox[{"1", "-", 
                 FractionBox[
                  SuperscriptBox["t", "2"], 
                  RowBox[{
                   SuperscriptBox["\[Beta]", "2"], " ", 
                   SubsuperscriptBox["n", "c2", "2"]}]]}]], " ", 
               SubscriptBox["n", "c2"]}]], "-", 
             FractionBox[
              RowBox[{"t", " ", 
               RowBox[{
                SubscriptBox["x", "1"], "[", "t", "]"}]}], 
              SqrtBox[
               RowBox[{"1", "-", 
                SuperscriptBox["t", "2"]}]]], "-", 
             FractionBox[
              RowBox[{"t", " ", 
               RowBox[{
                SubscriptBox["x", "2"], "[", "t", "]"}]}], 
              RowBox[{
               SqrtBox[
                RowBox[{"1", "-", 
                 FractionBox[
                  SuperscriptBox["t", "2"], 
                  SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]]}], 
            ")"}]}], 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["t", "2"]}]]], "+", 
         FractionBox[
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{
                SubscriptBox["x", "1"], "[", "t", "]"}], "+", 
               RowBox[{
                SubscriptBox["x", "2"], "[", "t", "]"}]}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"t", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["d", "c1"], "-", 
                   SubscriptBox["m", "1"]}], ")"}]}], 
                SqrtBox[
                 RowBox[{"1", "-", 
                  SuperscriptBox["t", "2"]}]]], "+", 
               FractionBox[
                RowBox[{"t", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    SubscriptBox["d", "c2"]}], "+", 
                   SubscriptBox["m", "2"]}], ")"}]}], 
                RowBox[{
                 SqrtBox[
                  RowBox[{"1", "-", 
                   FractionBox[
                    SuperscriptBox["t", "2"], 
                    SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], 
               "-", 
               FractionBox[
                RowBox[{"t", " ", 
                 SubscriptBox["d", "c1"]}], 
                RowBox[{
                 SqrtBox[
                  RowBox[{"1", "-", 
                   FractionBox[
                    SuperscriptBox["t", "2"], 
                    SubsuperscriptBox["n", "c1", "2"]]}]], " ", 
                 SubscriptBox["n", "c1"]}]], "+", 
               FractionBox[
                RowBox[{"t", " ", 
                 SubscriptBox["d", "c2"]}], 
                RowBox[{"\[Beta]", " ", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   FractionBox[
                    SuperscriptBox["t", "2"], 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    SubsuperscriptBox["n", "c2", "2"]}]]}]], " ", 
                 SubscriptBox["n", "c2"]}]], "-", 
               FractionBox[
                RowBox[{"t", " ", 
                 RowBox[{
                  SubscriptBox["x", "1"], "[", "t", "]"}]}], 
                SqrtBox[
                 RowBox[{"1", "-", 
                  SuperscriptBox["t", "2"]}]]], "-", 
               FractionBox[
                RowBox[{"t", " ", 
                 RowBox[{
                  SubscriptBox["x", "2"], "[", "t", "]"}]}], 
                RowBox[{
                 SqrtBox[
                  RowBox[{"1", "-", 
                   FractionBox[
                    SuperscriptBox["t", "2"], 
                    SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]]}], 
              ")"}], "2"]}]], 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["t", "2"]}]]]}], ")"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["x", "2"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["m", "2"], "-", 
           FractionBox[
            RowBox[{
             SubscriptBox["d", "c2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["t", "4"], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["t", "2"], " ", 
                SuperscriptBox["\[Beta]", "2"], " ", 
                SubsuperscriptBox["n", "c2", "2"]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{"1", "-", 
                  FractionBox[
                   SuperscriptBox["t", "2"], 
                   SuperscriptBox["\[Beta]", "2"]]}]], " ", 
                SuperscriptBox["\[Beta]", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["t", "2"], "-", 
                  SuperscriptBox["\[Beta]", "2"]}], ")"}], " ", 
                SqrtBox[
                 RowBox[{"1", "-", 
                  FractionBox[
                   SuperscriptBox["t", "2"], 
                   RowBox[{
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    SubsuperscriptBox["n", "c2", "2"]}]]}]], " ", 
                SubsuperscriptBox["n", "c2", "3"]}], "+", 
               RowBox[{
                SuperscriptBox["\[Beta]", "4"], " ", 
                SubsuperscriptBox["n", "c2", "4"]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["t", "2"], "-", 
               RowBox[{
                SuperscriptBox["\[Beta]", "2"], " ", 
                SubsuperscriptBox["n", "c2", "2"]}]}], ")"}], "2"]], "-", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["d", "c1"]}], "+", 
               SubscriptBox["m", "1"]}], ")"}]}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["t", "2"]}]]], "+", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["d", "c2"], "-", 
               SubscriptBox["m", "2"]}], ")"}]}], 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                SuperscriptBox["t", "2"], 
                SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], "+", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             SubscriptBox["d", "c1"]}], 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                SuperscriptBox["t", "2"], 
                SubsuperscriptBox["n", "c1", "2"]]}]], " ", 
             SubscriptBox["n", "c1"]}]], "-", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             SubscriptBox["d", "c2"]}], 
            RowBox[{"\[Beta]", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                SuperscriptBox["t", "2"], 
                RowBox[{
                 SuperscriptBox["\[Beta]", "2"], " ", 
                 SubsuperscriptBox["n", "c2", "2"]}]]}]], " ", 
             SubscriptBox["n", "c2"]}]], "+", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}]}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["t", "2"]}]]], "+", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}]}], 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                SuperscriptBox["t", "2"], 
                SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], "-", 
           RowBox[{
            FractionBox["1", "\[Beta]"], 
            RowBox[{"t", " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"d", "-", 
                   RowBox[{
                    SubscriptBox["x", "1"], "[", "t", "]"}], "+", 
                   RowBox[{
                    SubscriptBox["x", "2"], "[", "t", "]"}]}], ")"}], "2"], 
                "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["d", "c1"], "-", 
                    SubscriptBox["m", "1"]}], ")"}]}], 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["t", "2"]}]]], "+", 
                   FractionBox[
                    RowBox[{"t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SubscriptBox["d", "c2"]}], "+", 
                    SubscriptBox["m", "2"]}], ")"}]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], 
                   "-", 
                   FractionBox[
                    RowBox[{"t", " ", 
                    SubscriptBox["d", "c1"]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    SubsuperscriptBox["n", "c1", "2"]]}]], " ", 
                    SubscriptBox["n", "c1"]}]], "+", 
                   FractionBox[
                    RowBox[{"t", " ", 
                    SubscriptBox["d", "c2"]}], 
                    RowBox[{"\[Beta]", " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    SubsuperscriptBox["n", "c2", "2"]}]]}]], " ", 
                    SubscriptBox["n", "c2"]}]], "-", 
                   FractionBox[
                    RowBox[{"t", " ", 
                    RowBox[{
                    SubscriptBox["x", "1"], "[", "t", "]"}]}], 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["t", "2"]}]]], "-", 
                   FractionBox[
                    RowBox[{"t", " ", 
                    RowBox[{
                    SubscriptBox["x", "2"], "[", "t", "]"}]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]]}], 
                  ")"}], "2"]}], ")"}]}]}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["t", "2"]}], "+", 
            SuperscriptBox["\[Beta]", "2"]}], ")"}], 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "n"}], " ", 
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{
               SubscriptBox["x", "1"], "[", "t", "]"}], "+", 
              RowBox[{
               SubscriptBox["x", "2"], "[", "t", "]"}]}], ")"}]}], "+", 
           FractionBox[
            RowBox[{"n", " ", "t", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"t", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["d", "c1"], "-", 
                   SubscriptBox["m", "1"]}], ")"}]}], 
                SqrtBox[
                 RowBox[{"1", "-", 
                  SuperscriptBox["t", "2"]}]]], "+", 
               FractionBox[
                RowBox[{"t", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    SubscriptBox["d", "c2"]}], "+", 
                   SubscriptBox["m", "2"]}], ")"}]}], 
                RowBox[{
                 SqrtBox[
                  RowBox[{"1", "-", 
                   FractionBox[
                    SuperscriptBox["t", "2"], 
                    SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], 
               "-", 
               FractionBox[
                RowBox[{"t", " ", 
                 SubscriptBox["d", "c1"]}], 
                RowBox[{
                 SqrtBox[
                  RowBox[{"1", "-", 
                   FractionBox[
                    SuperscriptBox["t", "2"], 
                    SubsuperscriptBox["n", "c1", "2"]]}]], " ", 
                 SubscriptBox["n", "c1"]}]], "+", 
               FractionBox[
                RowBox[{"t", " ", 
                 SubscriptBox["d", "c2"]}], 
                RowBox[{"\[Beta]", " ", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   FractionBox[
                    SuperscriptBox["t", "2"], 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    SubsuperscriptBox["n", "c2", "2"]}]]}]], " ", 
                 SubscriptBox["n", "c2"]}]], "-", 
               FractionBox[
                RowBox[{"t", " ", 
                 RowBox[{
                  SubscriptBox["x", "1"], "[", "t", "]"}]}], 
                SqrtBox[
                 RowBox[{"1", "-", 
                  SuperscriptBox["t", "2"]}]]], "-", 
               FractionBox[
                RowBox[{"t", " ", 
                 RowBox[{
                  SubscriptBox["x", "2"], "[", "t", "]"}]}], 
                RowBox[{
                 SqrtBox[
                  RowBox[{"1", "-", 
                   FractionBox[
                    SuperscriptBox["t", "2"], 
                    SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]]}], 
              ")"}]}], 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                SuperscriptBox["t", "2"], 
                SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], "+", 
           FractionBox[
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"d", "-", 
                 RowBox[{
                  SubscriptBox["x", "1"], "[", "t", "]"}], "+", 
                 RowBox[{
                  SubscriptBox["x", "2"], "[", "t", "]"}]}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"t", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["d", "c1"], "-", 
                    SubscriptBox["m", "1"]}], ")"}]}], 
                  SqrtBox[
                   RowBox[{"1", "-", 
                    SuperscriptBox["t", "2"]}]]], "+", 
                 FractionBox[
                  RowBox[{"t", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SubscriptBox["d", "c2"]}], "+", 
                    SubscriptBox["m", "2"]}], ")"}]}], 
                  RowBox[{
                   SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]], 
                 "-", 
                 FractionBox[
                  RowBox[{"t", " ", 
                   SubscriptBox["d", "c1"]}], 
                  RowBox[{
                   SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    SubsuperscriptBox["n", "c1", "2"]]}]], " ", 
                   SubscriptBox["n", "c1"]}]], "+", 
                 FractionBox[
                  RowBox[{"t", " ", 
                   SubscriptBox["d", "c2"]}], 
                  RowBox[{"\[Beta]", " ", 
                   SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    RowBox[{
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    SubsuperscriptBox["n", "c2", "2"]}]]}]], " ", 
                   SubscriptBox["n", "c2"]}]], "-", 
                 FractionBox[
                  RowBox[{"t", " ", 
                   RowBox[{
                    SubscriptBox["x", "1"], "[", "t", "]"}]}], 
                  SqrtBox[
                   RowBox[{"1", "-", 
                    SuperscriptBox["t", "2"]}]]], "-", 
                 FractionBox[
                  RowBox[{"t", " ", 
                   RowBox[{
                    SubscriptBox["x", "2"], "[", "t", "]"}]}], 
                  RowBox[{
                   SqrtBox[
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["t", "2"], 
                    SuperscriptBox["\[Beta]", "2"]]}]], " ", "\[Beta]"}]]}], 
                ")"}], "2"]}]], 
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               SuperscriptBox["t", "2"], 
               SuperscriptBox["\[Beta]", "2"]]}]]]}], ")"}]}], ")"}]}], 
      ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.826593653464116*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"fb049091-61c7-4a41-ad27-f3296b790690"]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numericalValues", "[", "finiteWithCGBothSide", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "1.5168"}], ",", 
     RowBox[{
      SubscriptBox["m", "1"], "\[Rule]", "8.15"}], ",", 
     RowBox[{"d", "\[Rule]", "4"}], ",", 
     RowBox[{
      SubscriptBox["m", "2"], "\[Rule]", "3."}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "0.5"}], ",", 
     RowBox[{
      SubscriptBox["d", "c1"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["d", "c2"], "\[Rule]", "0.6"}], ",", 
     RowBox[{
      SubscriptBox["n", "c1"], "\[Rule]", "1.5168"}], ",", 
     RowBox[{
      SubscriptBox["n", "c2"], "\[Rule]", "1.6"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"na", "=", "0.3"}], ";"}]}], "Input",
 CellChangeTimes->{{3.801275025540429*^9, 3.801275053891033*^9}, {
   3.801275133915406*^9, 3.801275191548542*^9}, {3.801275242837984*^9, 
   3.801275625882442*^9}, {3.801275714242878*^9, 3.801275723128501*^9}, {
   3.801275755024578*^9, 3.8012758771995564`*^9}, {3.8012835476662207`*^9, 
   3.801283550038887*^9}, 3.803263314605793*^9, 3.804220361420041*^9, 
   3.826593708249749*^9, {3.826593752966456*^9, 3.8265937981246843`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"8a950e83-a3e5-4484-9b04-5b55e9982e8e"],

Cell["But it can be numerically solved.", "Text",
 CellChangeTimes->{{3.804221499139308*^9, 3.804221530211187*^9}, {
  3.8042216007818727`*^9, 3.804221615655694*^9}, {3.80422169047871*^9, 
  3.804221691357752*^9}, {3.804222160434816*^9, 3.804222163392448*^9}, {
  3.826593185713933*^9, 3.8265932564634733`*^9}, {3.826593835309127*^9, 
  3.826593849153954*^9}},ExpressionUUID->"ab5d904b-6710-4866-ab5f-\
297de61a6b81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutions", "[", "finiteWithCGBothSide", "]"}], "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"wweq1011", "[", "finiteSinglet", "]"}], ",", 
       "boundaryConditions"}], "]"}], "/.", 
     RowBox[{"numericalValues", "[", "finiteSinglet", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "na"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8012750704851847`*^9, 3.8012750818835173`*^9}, 
   3.801282688142252*^9, {3.8012835575428123`*^9, 3.8012836037245903`*^9}, 
   3.8032629166081867`*^9, 3.803263043557716*^9, 3.803263314245777*^9, {
   3.804220365841461*^9, 3.80422037563865*^9}, 3.8265937095605717`*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"70821b5f-de6f-452e-8913-07733aecd4e9"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["m", "1"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
             RowBox[{
              SubscriptBox["y", "1"], "[", "t", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["x", "2"], "[", "t", "]"}], "+", "d"}], ",", 
             RowBox[{
              SubscriptBox["y", "2"], "[", "t", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "+", "m"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "+", 
              SubscriptBox["m", "2"]}], ",", "0"}], "}"}]}], "}"}], "/.", 
         RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "/.", 
        RowBox[{"baseConditions", "[", "finiteWithCGBothSide", "]"}]}], "/.", 
       
       RowBox[{"thetaRule", "[", "finite", "]"}]}], "/.", 
      RowBox[{"numericalValues", "[", "finiteWithCGBothSide", "]"}]}], "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"solutions", "[", "finiteWithCGBothSide", "]"}], "]"}]}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "na"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.801275099119287*^9, 3.8012751255007477`*^9}, {
   3.801275202147472*^9, 3.80127522786404*^9}, 3.80128252936276*^9, {
   3.801283581258132*^9, 3.8012836094625483`*^9}, 3.802728924995722*^9, {
   3.803262756078505*^9, 3.803262767788865*^9}, 3.803263043559269*^9, 
   3.8032631641751957`*^9, 3.80326325029287*^9, 3.803263314247768*^9, {
   3.8033512985796423`*^9, 3.803351298580267*^9}, {3.804217590399419*^9, 
   3.804217590400136*^9}, {3.804218203100164*^9, 3.804218203100651*^9}, 
   3.804220339301108*^9, {3.804220381927371*^9, 3.804220393797414*^9}, {
   3.826593810844335*^9, 3.826593816342382*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"cb1bacdf-de1b-4067-a27d-5a7a802caf78"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Afocal singlet", "Chapter",
 CellChangeTimes->{{3.803791676168764*^9, 3.803791687632262*^9}, {
  3.8042159323494177`*^9, 
  3.804215933541793*^9}},ExpressionUUID->"47f6ea11-a9e3-48aa-b426-\
cdba0a1256ae"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[
      TagBox[
       RasterBox[CompressedData["
1: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
ZZA/Kyw4gJLx/6UJgX4=
        "], {{0, 100.8}, {188.16, 0}}, {0, 255}, 
        ColorFunction -> RGBColor, ImageResolution -> 150], 
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
       Selectable -> False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
      Automatic, ImageSizeRaw -> {188.16, 100.8}, 
      PlotRange -> {{0, 188.16}, {0, 100.8}}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{
  3.8258058548649063`*^9},ExpressionUUID->"e53c9ca3-afb9-4a61-8316-\
e2e32976e038"],

Cell["\<\
This example is an afocal optics by aspherical singlet lens. It may only be \
used for beam expander, etc...?\
\>", "Text",
 CellChangeTimes->{{3.825727237063583*^9, 3.825727248254339*^9}, {
  3.8257272989372807`*^9, 3.825727315278509*^9}, {3.825794387008357*^9, 
  3.825794432292975*^9}, {3.8257945245923777`*^9, 
  3.825794603554398*^9}},ExpressionUUID->"065803c8-87d4-4846-8e33-\
a646e579f3dc"],

Cell[BoxData[
 RowBox[{"\[Beta]", ":", 
  RowBox[{"lateral", " ", "magnification"}]}]], "DisplayFormula",
 CellChangeTimes->{{3.825727862277256*^9, 3.825727956058918*^9}, {
  3.825728111432921*^9, 3.825728166276469*^9}, {3.825728201465061*^9, 
  3.8257282313390837`*^9}, {3.825744430492483*^9, 3.8257444591294823`*^9}, {
  3.825744489734045*^9, 3.8257445002314043`*^9}, {3.825744600257921*^9, 
  3.825744660801105*^9}, {3.825744701023479*^9, 3.8257448282766867`*^9}, {
  3.825744866228907*^9, 3.825744932892425*^9}, {3.825747954258219*^9, 
  3.82574797431355*^9}},ExpressionUUID->"b75a53b1-5ec8-47a4-a7e0-\
541c875781f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"baseConditions", "[", "afocalSinglet", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     
     RowBox[{
      RowBox[{
       SubscriptBox["h", "1"], "[", "t", "]"}], "\[Rule]", "t"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     
     RowBox[{
      RowBox[{
       SubscriptBox["h", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"\[Beta]", " ", "t"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseConditionDifferentials", "[", "afocalSinglet", "]"}], "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
     RowBox[{"baseConditions", "[", "afocalSinglet", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.804220755423048*^9, 3.804220772657386*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"bb1f667c-ceef-4581-8810-c1582578dd29"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"baseConditions", "[", "afocalSinglet", "]"}], ",", 
     RowBox[{"baseConditionDifferentials", "[", "afocalSinglet", "]"}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804220785527914*^9, 3.8042207895107393`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"ba9eddaf-24da-4f8a-a7a8-509b93e585b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wweq1011", "[", "afocalSinglet", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
      "vectorRDefinition"}], "/.", 
     RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "//.", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"baseConditions", "[", "afocalSinglet", "]"}], ",", 
      RowBox[{"baseConditionDifferentials", "[", "afocalSinglet", "]"}]}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8042208051141*^9, 3.8042208097495193`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"23703b86-5526-4fdb-aa42-2e8bce4723b5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numvals", "[", "afocalSinglet", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "1.5168"}], ",", 
     RowBox[{"d", "\[Rule]", "3"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "2"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8012630530975037`*^9, 3.801263094508999*^9}, {
   3.801263172687652*^9, 3.801263209644691*^9}, {3.801263295607588*^9, 
   3.801263318984898*^9}, {3.801263641426814*^9, 3.8012638352317553`*^9}, {
   3.801283167951693*^9, 3.801283173011119*^9}, 3.803263115659727*^9, {
   3.803792073817575*^9, 3.8037921339171124`*^9}, {3.803792194104774*^9, 
   3.803792258581438*^9}, 3.8037922942100477`*^9, {3.8037923249229794`*^9, 
   3.803792335251822*^9}, {3.803792391929295*^9, 3.803792392356008*^9}, {
   3.8038695337935257`*^9, 3.803869551838085*^9}, {3.8038697865756683`*^9, 
   3.803869792220793*^9}, {3.803870066387619*^9, 3.803870078480926*^9}, {
   3.8042158800935707`*^9, 3.804215903706048*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"0fa96532-aa07-4a68-8d88-a129afa6e9e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutions", "[", "afocalSinglet", "]"}], "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"wweq1011", "[", "afocalSinglet", "]"}], ",", 
       "boundaryConditions"}], "]"}], "/.", 
     RowBox[{"numvals", "[", "afocalSinglet", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.801263002654477*^9, 3.8012630187842503`*^9}, {
   3.80126310094422*^9, 3.801263124501245*^9}, {3.80126338030837*^9, 
   3.801263381174972*^9}, 3.801282408170619*^9, {3.8012831788283443`*^9, 
   3.801283179099044*^9}, {3.801283399568046*^9, 3.801283400308728*^9}, 
   3.803262916602566*^9, 3.803263044132358*^9, {3.803263115661213*^9, 
   3.803263115663175*^9}, {3.803792091952169*^9, 3.803792120482757*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"8b87dd15-7ec3-4a86-9081-d7de6cac14e5"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "+", "d"}], ",", 
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}]}], "}"}]}], "}"}], "/.", 
        
        RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "/.", 
       RowBox[{"baseConditions", "[", "afocalSinglet", "]"}]}], "/.", 
      RowBox[{"numvals", "[", "afocalSinglet", "]"}]}], "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"solutions", "[", "afocalSinglet", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.801263129163539*^9, 3.801263160896487*^9}, {
   3.801263331358416*^9, 3.801263386372561*^9}, {3.801263542280878*^9, 
   3.801263548241811*^9}, {3.8012665070391493`*^9, 3.8012665158493557`*^9}, 
   3.8012824512893333`*^9, {3.8012831879523497`*^9, 3.801283203016203*^9}, {
   3.801283412642311*^9, 3.801283416668055*^9}, {3.803262756009536*^9, 
   3.803262767767289*^9}, {3.80326301786617*^9, 3.80326304355344*^9}, {
   3.803263115665002*^9, 3.8032631156659613`*^9}, {3.803351298570595*^9, 
   3.803351298571262*^9}, {3.8037921499249487`*^9, 3.803792180143385*^9}, 
   3.804217590431961*^9, {3.804218203116825*^9, 3.804218203117436*^9}, 
   3.8042208413178988`*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"19d494b5-fce4-43d9-9451-48a0564fc88e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tophat converter", "Chapter",
 CellChangeTimes->{{3.8037943918887663`*^9, 
  3.8037943998168907`*^9}},ExpressionUUID->"c6d13a37-8068-49b5-b441-\
43f018eb7f58"],

Cell["\<\
Laser beam with gaussian profile is converted to tophat (flat - top) profile \
by the converter . This example is two-dimensional, in z-y plane.\
\>", "Text",
 CellChangeTimes->{{3.825727352625691*^9, 3.825727486810487*^9}, {
  3.825748096784412*^9, 
  3.8257481280796347`*^9}},ExpressionUUID->"d5e07504-20d4-46da-b89b-\
68e0eb77660b"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[
      TagBox[
       RasterBox[CompressedData["
1:eJztnQd8W9Xdv+WEBAq0gcT36soxOJYUAikQ+kIpfUtfRpkFWqANzSK25MQJ
KWG2JTihaWn5l1FGYkmJGQ2jULAdVtl7E/besyFAWbaUpKW0lPs/RyORFdmx
ZV0d6Z7n+Xy+yNa4+kVYV4+Pz/md+vDxRzYP8Xg8J28m/nNk6JR9TjopdOpP
thLfTDzu5GNmHTdzxsHH/WLmrJkn7REeKq70V3k8D4v7b+IBAI0wNhky5LlN
qqpsQoh+GTZkyFqRSapPRAAAACoRPjxL9WcyIURthnuqXlB9LgIAAFDJJh7P
Cao/jwkhijNkyLuqz0UAAAAqyXbizYdvai84dQEhRIN8a8LOODEAAECaHk78
9S3tdz5YSwjRIEf++Ec4MQAAQBqcmBA9gxPrR3Nb27DJCzoPl2leeOPmqusB
ACgncGJC9AxOrB8Nx1+31ZT5nbZMw8K/jFFdDwBAOYETE6JncGL9wIkBAHoH
JyZEz+DE+oETAwD0Dk5MiJ7BifUDJwYA6B2cmBA9gxPrB04MANA7ODEhegYn
1g+cGACgd3BiQvQMTqwfODEAQO/gxIToGZxYP3BiAIDewYkJ0TM4sX7gxAAA
vYMTE6JncGL9wIkBAHoHJyZEz+DE+oETAwD0Dk5MiJ7BifUDJwYA6B2cmBA9
gxPrR/PCGzfPOPG0+e31qusBACgncGJC9AxOrCdT5ne8lvTilo4/qK4FAKCc
wIkJ0TM9nLiqKj6squo3RFE8nl1Kdc6fNH/53MxY8eSWjvsntSw/pLmtbVip
nh8AoFzBiQnRM4wTa4ptV01d0HnOlPkdX61z4/kd3SI3TJ3f+eupLe1HTDnt
ul0nnXqDV3WpAAClBCcmRM/gxHozuaV992nz26+Z2tL5ecaNN0hL5xdTFnSs
FHlBfP2wcOlbhDcvn7yg81KZafM7olNaOi4oViYv6DhLuPlvZKYsWH7ipJbl
J4g6moS/T/zZ/I4Dpp3W8Z3p868NHLTolk1Vv34A4D5wYkL0DE4Mkv1PvnyL
Sact3194aIvItZPnd74hHPRfvXpymWRyS8dH4vIJkYuObumYLbLbwoULh6h+
PQGgcsGJCdEzODH0xcRT241JCzq+JX156oLlP53a0hGWY7eZcVyRP2bGdye1
dCzNjB33M4uSjxU+m/f2+R1Xpudy3DdlQcdTyXWBLR3vT53fsbovTxb3/3hy
S/t5Uxcur1X9+gFA5YETE6JncGKoRPZauGwzOX9i8qnte01p6WwWzny+uFwh
nPjL9W7csXrygvZJqmsFgMoCJyZEz+DE4Camzr3iG9KRp7V0vJ524y8nLej4
puq6AKBywIkJ0TM4MbgROY4se8wl5xwv6Fykuh4AqBxwYkL0DE4MbkXOe06P
Fd+luhYAqBxwYkL0DE4MbiXdw02uubtPdS0AUDngxIToGZwY3ApODACFgBMT
omdwYnArODEAFAJOTIiewYnBreDEAFAIODEhegYnBreCEwNAIeDEhOgZnBjc
Ck4MAIWAExOiZ3BicCs4MQAUAk5MiJ7BicGt4MQAUAg4MSF6BicGt4ITA0Ah
4MSE6BmcGNwKTgwAhYATE6JncGJwKzgxABQCTkyInsGJwa3gxABQCDgxIXoG
Jwa3ghMDQCHgxIToGZwY3ApODACFgBMTomdwYnArODEAFAJOTIiewYnBreDE
AFAIODEhegYnBreCEwNAIeDEhOgZnBjcCk4MAIWAExOiZ3BicCs4MQAUAk5M
iJ7BicGtuM2JE61Hb5eINh6/tq3Zp7oWADeDExOiZ3BicCuuc+JoqDMRDdvx
SPjzeCR0AW4M4Aw4MSF6BicGt+I2J+5e0rS3cOI3pRcn3Tga+lc80ni+PXHi
UNW1AbgJnJgQPYMTg1txmxNL7IULN4kvCU+NR0Ivr3fjxjmq6wJwEzgxIXoG
Jwa34kYnziDceEg8Gj4v6cWR8Eq7feJw1TUBuAWcmBA9gxODW3GzE0sSrT8f
lYg1rU2OFcdmNKuuB8At4MSE6BmcGNyK251YkoiEzkyOFcfC7314zrQtVNcD
4AZwYkL0DE4MbkULJ5ZjxZFQV3rN3dmq6wFwAzgxIXoGJwa3ooMTS7ojDTPT
Tvyf1YtC41XXA1Dp4MSE6BmcGNyKLk6cXG8XC69I9S4OPWq3NQ9TXRNAJYMT
E6JncGJwKy5x4jHDqqp+s7HUe0cuOXavnb88bp9d7MN2HvtIfx5DCMkf8Xl4
G05MiH7BicGtuMSJ+018SdOxmZ7FiWjTYarrAahUGCcmRM/gxOBWdHNiSWb/
Z7nubk1b406q6wGoRHBiQvQMTgxuRUcn7mprHhGPhF9P9Sxuej8emRZUXRNA
pYETE6JncGJwKzo6saQrEq4TXrwqNYci9Pani6bWqq4JoJLAiQnRMzgxuBVd
nViSaD16u3gk9Em6F8WrXRccva3qmgAqBZyYED2DE4Nb0dmJJV2LQxOEEycy
8yjk96prAqgEcGJC9AxODG5FdyeWSA9eP48inOiOhH+guiaAcgcnJkTP4MTg
VnDiFJ9FG7cRXvxSeh7Fv7tbQyHVNQGUMzgxIXoGJwa3ghOvp3tZw1bxaPiB
TP/ieDR06YfnTNtCdV0A5QhOTIiewYnBreDEPbEXzd00EQ0tXefFkfBLayLT
v6m6LoByAycmRM/gxOBWcOL8xFvDk4Qbr0nv7fGPRCQctj2eKtV1AZQLODEh
egYnBreCE/dOYknjWOHEz67fCzp0byIWHqe6LoByACcmRM/gxOBWcOK+sZc1
bBaPhs+LR8JfpudSfCEuT5fXq64NQCU4MSF6BicGt4IT94/u1sb/SURDT2TN
M3493tq0v+q6AFSBExOiZ3BicCs4cf+xJ04cmoiFjktEm1avm08RC93aFZ2+
s+raAEoNTkyInsGJwa3gxAPn00VTa4UPX5M1ZvyV7Nsmexyrrg2gVODEhOgZ
nBjcCk5cOPElTbv36GccCX8ej4XPkn2OVdcG4DQ4MSF6BicGt4ITD55EtOmw
zB546d5tcXH5h9VtzdWqawNwCpyYED2DE4NbwYmLg71w4SbdkYaZwo1XrZ9r
3LRWjhuvbWv2qa4PoNjgxIToGZwY3ApOXFzs9onD49Hw7EQkvLLHnIpI6IJ/
LJk+WnV9AMUCJyZEz+DE4FZwYmew25qHCS9uFE785no3Dv27OxK6enUktKfq
+gAGC05MiJ7BicGt4MTOIudUxJeEpwoffnn9fnjJPLu6tXHG+23Nm6uuEaAQ
cGJC9AxODG4FJy4NtsdTFW9tPFC48Y2yd1vWerwucd258bbpAdU1AgwEnJgQ
PYMTg1vBiUtP9+IZ9fFo6Gzhw59l9zhOxEK3x2NNE+WcZNU1AmwMnJgQPYMT
g1vBidWx8twTv9bdGgoloqGns+dVxKPhT0XOWxOZ/k3VNQL0Bk5MiJ7BicGt
4MTlQXr/j4t67Bst/TgWXiHnHX9yVvjrqmsEyAYnJkTP4MTgVnDi8uLDc6Zt
IceO49HQQz3W5Mlex9HQpd3R8D72woVDVNcJgBMTomdwYnArOHH5snpxw/bx
aPiPIh/38GPZ+zgS+n/ydtU1gr7gxIToGZwY3ApOXP7IXserl4SOEG58vexx
3HP8OPx4PBb6OftIQ6nBiQnRMzgxuBWcuLJItP58lHTgRCT0WI95x8KVk87c
Gp70UWTOlqrrBPeDExOiZ3BicCs4ceWSiIXHJaKhM0T+1tOPk3tJ35iINBzd
1dY8QnWd4E5wYkL0DE4MbgUnrnzkmrvuJU17Czdemjv3WPjxF+K6v+LHUGxw
YkL0DE4MbgUndhf2xIlDuyPhH/Tlx92LQ03xi5pGqq4VKhucmBA9gxODW8GJ
3UuWH7fGI6EPeu4LEvqPuP4u4ciz10YaLNW1QuWBExOiZ3BicCs4sR7I+RVd
ixu/n/TjWNP7OePHXwk3fjARC53QdcHR26quFSoDnJgQPYMTg1vBifXD9niq
ErGGPWTv40Qs/FaP3m6Z/m6R0Lx4ZFpQda1QvuDEhOgZnBjcCk4M3YvC30pE
Q78TjvxKrh8LN35B5LTV0aYdVNcJ5QVOTIiewYnBreDEkE1y7zzhwMKHn8rj
x69Kd+5aHJqguk5QD05MiJ7BicGt4MTQG/G26YHuxaFfxWPhFXnmV7yViITO
jEcbvy3nYqiuFUoPTkyInsGJwa3gxNAf5No7uQZPrsWTa/Jy1uitEpexeGvj
gXb7xOGqa4XSgBMTomdwYnArODEMlE9awzWp/aXDd8ejof/mjCEnRK6Jx5qm
dC9r2Ep1reAcODEhegYnBreCE8NgSLT+fFRXa2NDPBq+NhFrWrtBD+RI+M74
kqZj6fHmPnBiQvQMTgxuBSeGYrHy3BO/lmgNHSr8+CLhw3/fYA5yNPxUssdb
2/SA6lph8ODEhOgZnBjcCk4MTiD3CElEG/83Hguf1UuPt+eTPd4WN2yvulYo
DJyYED2DE4NbwYmhFPTd4y38kuzxtqatcSfVdUL/wYkJ0TM4MbgVnBhKjZw7
IedQJCKhx/L1QBaOvJA99MofnJgQPYMTg1vBiUElyR5vkdDJ8WjokQ16vMnr
oo1z5Do+1XXChuDEhOgZnBjcCk4M5YLs8Sb8+EThw8/kjB3/W/jxDfFY00R7
0dxNVdcJKXBiQvQMTgxuBSeGcmT1otB44cN/SETCK3P7H8u+Fl3R0F7sn6cW
nJgQPYMTg1vBiaGckf0rupc07R2PNV6c3g8k24/fkWvzEq1Hb6e6Th3BiQnR
MzgxuBWcGCoFe1nDZvFI6Kh4NPzX5H4gPedXPMrc49KCExOiZ3BicCs4MVQi
qxeFjEQsdFwiGnoip6/bF/FY6LpEpPGHzK1wFpyYED2DE4NbwYmh0lkdbdoh
Ofc4Fn4vp2/Fa3Ls+MNzpm2hukY3ghMTomdwYnArODG4heTc41jjvolI6ErZ
q2KdH0dCXXI/vc+ijduortFN4MSE6BmcGNwKTgxuJNXXLfx74cafZM2r+FJc
XhNfGt5NdX1uACcmRM/gxOBWcGJwMyvPPfFr3ZGGmfFo6MWe844bL1vb1uxT
XV8lgxMTomdwYnArODHogFxvF29t2j8RCd+53o1Da+Qe0+wDUhg4MSF6BicG
t4ITg24kok2HCR9+Y50bx8JvrY7M+LHquioNnJgQPYMTg1vBiUFH7PaJw+Ox
8CnCj1ev71MRvn5tpMFSXVulgBMTomdwYnArODHojHRgObc4q0fFZ/El4amq
66oEcGJC9AxODG4FJwbweLoj4R+k9ope19v45n8smT5adV3lDE5MiJ7BicGt
4MQAKT6KzNkyEQlFs/pTdK9pa9xJdV3lCk5MiJ7BicGt4MQAPemOhvdJRENv
p3tT/G3NBU1e1TWVIzgxIXoGJwa3ghMDbEhXJFwXj4Q/Ss6jiIVXyD7HpXz+
GTNm7FLK59sY+erBiQnRM6V04lmzZo138viVzMKJC4fPmTMnqLqOckW+NvI1
GshjcGKA/CRiDXsIL/485cWNF5fyuWfOmvmbUj7fxshXD05MiJ4ppRPPaG4+
wcnjVzINxzdsNWPWjEbVdZQr8rWRr9FAHoMTgy7Mnjl70kAf090aCkkn7oqE
vyjkOZuamw8r5HHic6CzkMc1Nzd/Z8aMGfWFPLav1wcnJoRkMlAnnj17tinO
S/sWcl4q1Inluffkk6dtMdDHyccUWmshnzGSQmsdjBOXulYVrytODNA7hYy9
Jlp/Piqz5q6QPhSFns/F4+4r5HHCiQ8vdN5FX68PTkwIyWSgTtwwa9aYQt1t
EOfQEwbqQ5LBeGahf9+j1r4puFac2BO0LOOHBx54pXwtCMnOzJkzryrkcZ+2
Nv5LOvHyBTP+MODHNzdfUshzCrd9qq/bJx91VMdJxx33qw0eN6v5j+KxLQW9
Ps0z7xWv0cX5Iv4dK3Kv++aEnR/FiQnRL9lOvOmmm3660XPLrJkninNGpKBz
dx/n0Jnhxra5c+ac1dvjxLnwmALOvccUWmuhnzH9rXXqpEntJxx77LxKqLUc
Xlf5fAOtteEXrVdJJ5427/JXC3p9cqLaicfWGLuMrbXek7+XElKMdKV7ULx8
dnim6loyGbft6JcPP+SQ5mIeU5w/vi3OH3v2N9bomsU4MSH6JduJhw0ZskrV
eXCXHXbo3HP33S9QfT6u5PM+6Zlpp156unTiKS3XrCjG8crBiQM+413VdYA7
sBcuHBKPhL9IrrNb1LCr6noyBCzz2YDPPFxlDcydIETPlEsvNnEOvFR83v9G
1fOXmnI477sdt82dwImhmMiebJn5xF1tzSNU15OhHM6NODEhegYnVkM5nPfd
Dk4M0DuJSOOSdI/iD1XXkk05nBtxYkL0DE6shnI477sdnBggP4lo4/GZMeJ4
pHGW6nqyKYdzI05MiJ7BidVQDud9t4MTA2xIItp0WDwa+m/Sh6PhRarryaUc
zo04MSF6BidWQzmc990OTgywHntZw2bxWNM56304dLM9ceJQ1XXlUg7nRpyY
ED2DE6uhHM77bgcnBkiR2ss59GpmvkQiEr77k7PCX1ddVz7K4dyIExOiZ3Bi
NZTDed/t4MSgO++3NW8uXPiCeCT8VcqHm1bL+cO2x1OlurbeKIdzI05MiJ7B
idVQDud9t4MTg87Eo00/S0TCK9eNDUdDd3RdcPS2gz2u+Bmc67eM64KWeaL8
mRRXDSlCueuPXwbnRpyYED1TiU5cW1v7NXHfJQ6X5CjlcN53Ozgx6Eh3pGGX
eDT8wHoXDnevbm2cUayxYb9lnibOXfa6WGaXcOTr/T7zhGI4cjmcG3FiQvRM
JTpxXV3dZvK86XBJjlIO5323gxODTqxeFDISkXBb1ho6cRlaurqtubrYzxW0
LCNoGT8VHhwJWMZz4lz2VT5H9pvmTp4cFw/U1Gwj7nNmb8cuh3MjTkyInqlE
J07d37u6trZ2pIMlOUo5nPfdDk4MOhBvmx6QPdWE/65Z33M4fF/X4tCEUtUg
z8X1lvETcV5bJM5r8Zxx5E/EZaf42T3W7/Xu6PcZewYt78O9Hasczo04MSF6
pnKd2LT9lvGvgGXc5bfMBfI8O378+OEOllhUyuG873ZK7cRjTdMvfg5PkZeO
HB8nhiy6lzTtHY+Gbli/fi45Z/jdeCR0lMq65BiyODffIMeQUzFe7OHIKU9+
rbfHl8O5EScmRM9UshNveJ41/tlfR5Z/u1Pp0OVw3nc7pXbioGVMzPp5fFL8
PLeJy+ZiOTJODPaiuZsmIuFG4b/PZs0XlnkqEWk42m6fWC7jAkMDlveq7Wtq
Rslvkp7sM48Q5+cL5LlPnJ8/7u2B5XBuxIkJ0TOV68TeD8Za1f8nzq3zxGNv
Et8nBuLIcg7cuFGjlPXnLIfzvttRMU4sPVj8rL2V53e2J+XvYdKbt912xNb5
Hi+v7+225PFxYm1JrpuLNJ4fj4Q/Wjc/Ihr6bzwavrZrceP3VdeXj3qvd3fx
M39Svts2Ml6h/NyIExOiZyrRiaXLBi3zqZyrh/qtUbsJ1/1F2pHX5HPkoM+8
WzzP78T3a4v/r+g/5XDedzsq5xMHfNW7ynkUvfix/Fm8U95eX2Pul3mM9GWZ
3o6JE+vFJ63hmu7FoV/FI6EXcsaEE8KFz+tePKNeRV3+rbceIX6Gl6X/FrI0
4PXu4+ml14TfMi4e6PHL4dyIExOiZyrRiQVD5HqOPo8n/0bnM+ZmOfIG48iD
r7pwyuG873bKZY2ddN/0+LFwZLN9A0+2zK6UIydvO6W34+DE7ufDc6ZtkYiG
pslewpn+Eek1c1/JdXPCkZtU7z8nfk7PET+Hj8mfxfU/x94PUvMijIMya5+T
cyV83thAj18O50acmBA9U6FOvPHjyfOz17t31lVDx3q930nOtbDMh3Bi91Mu
TixJrb8z2zNzizPjyNKFk068zi2Mtl6PgRO7EnvixKHx1qb945HGyxKxprXZ
Y8LCi18Tmd99fsMY1XVmSI/9JseF0z/H5/ot8/18fw+R89sGevxyODfixITo
mUp14vGGsWWfx9vQibOpkufwAZRXdMrhvO92ysmJJXKucNKBhUfk3ibnUKQc
ufe+rTixu0jOEY41nROPhD7o6cHhTxORUFTkO6przEe913to+lyd3Xd4SHr+
8HzxM/5nkSvFfQ7s1/F81d/Pfk9knxvl/kziXD2rqP+AfoATE6JnKtGJgyNH
fkP4w6N9Hq9vJ/YEfeYT8jgDq7J44MTOU2onlp/rco5lZg5EPvdNerG4T19r
6XoDJ658Pl00tTYeC5+SO0c4Hgl/kYiGOrsXNxxeRr0jekX8jE8RP8e3iPPs
0Tt7vVsM5lhyroVc6yHHn+tN05s5N8o9QZLzMyzzD8Wqu7/gxITomUp0Yo9c
T+czXuzzeBtx4vqa6jC92NxNyZ3YMs/M/duxnDssHTm7J5u8n7xuoMfHiSuT
NbHZZnekYWYiErqnZy/h5NyI++OxGc3dyxq2Ul3nQJFjuNKJAzXmdwd7LPF+
uCw9LzkR9Hk/FD/nL6TfQ19t5/WWfC0hTkyInqlQJ5bn0H/LcQSfz7d53uNt
xIlVgxM7j6L+xE8mL1N+/GQvPdnk/OEnB3p8nLhykD0j4tHw7EQkfHf2Wrn0
3IhX4pHGlnKaI6yaQI3xv3n7s/jMW1TUgxMTomcq1YnXj8OZ/5Zr5vw+4/dy
TmbGkfvhxEMHWfKgwImdR8V84nT/tXW9I1I9i83mDfpN9DFvuDdw4vLms2jj
NsJ354o8mDseLNx4ZTwSOje+NLyb6jrLlfQ5sYcTB2u8h6moBScmRM9UthN7
V2/4t+qUI4tjPS97sfU2jizud/9g58ENBpzYeVStsZMOLJP/tupds3sSDwSc
uPyIR6YFE5HQyfFYeEVOD2E7EQu/JW47U66Vs3uuR4M8+C1zdg8ftsyVHkVj
FzgxIXqmQp14iHDKVz2yf4TXu6N43LHi8Z3iuk96c2Q5jizXQWf6VYjbXpLz
4Rz7B20EnNh5yq3vxGDBidUj3Ta+pGn3RDR0RjwaejHXg+OR0Kvitt/FFzVs
sL4S+kbuxZS915Jw5NNU1YITE6JnKtGJU+dOc0WemzbqyCJfpud5/re4/4KB
gRM7T6mdWI7/ZvZvduL4OLEa7EVzN03EQgcL112a2zctNS8i9Fw8El64pq1x
J9W1Vjpyj4/0WMZ/6gzDUlUHTkyInqlEJ5aMrR05uh9369ORC6928ODEzqNo
jV3O3nQb9mST19GLrbzpamseEV8Sniqct0O48JqcvmlfiuvuFZ58AuvkisuY
0caEtBN3qKwDJyZEz1SqExdIxpFPxYndT6mdWHruur3p+ujJJi8LGUvGiZ0l
flHTSLl3svDe2+KR0L97zg2W+8uFOhORhqPl/VTX6maClvcRf435A5U14MSE
6BnNnHj981nmKx6FvSdwYudROZ84tZdzsgfFWz33bqbvRDkhewf32jMtFv5Q
XN+WiDT+UM6fUF2rq2ifONTTtt9LnqX7vZubURcc9aFn6f4bXF/S/HRClyfg
tT2n72V7jv2u/dv7l9l3v/qC8s9rQoiz0dWJ5VhEXd0IZX3ycWLnKZc1dik3
Tu1tt64nm2XcOdDj4MTF4R9Lpo/us2daNLyoa3Hj9+2FC4eortXVxPYZ57lw
/13KMn7vOcOHDbU9u2xre36yi+3vPMHe74YW5Z/XhBBno6sTj7WsHTwK+yPh
xM5TLk4sSc2rkHMnUnOL8+37vDFw4sKJt00PdLc2/qK3nmnxWNM5iVjDHvRM
A0l/5048884q23PRD23PVSF70i1n2K0rltv3vvay/db7a5R/thNCBh5dnVg1
OLHzlNqJM/tzZPZwzof4GW8rxIeTx8eJB8TqaNMO8UjoNOG9z/TSM+0MeqZB
PgYyn/iRN9+0lz5+ox267Wzb85cZwpEPSnqyt/N45Z/vhJCBBSdWA07sPEr7
TqT2cE72ZcvtMSHnTfTlzb2BE28c6bjJ/sBJ593Ag1+QjkzPNNgYg1ljJ8eI
5dzj9mfvz3v7mQ9daV/x9J320++sUv75TwjpmUp24l09nmH1Xu/uQcucJh7f
IhzkD36fcZ48TsBr/NxvVR8ctCzDoZIHBU7sPGrGiY22Hns4r1tTl+rLJh05
NafYbB/w8XHiDVi3h4bcL07uG7dh7+DHhAfPk3MnVNcKlYOTfSeOvOm3tufy
ybanbT/bs+xIe8K1J9un3nuhvfz5h5X7ACG6p9KcWO495/cajX7LvF14xj9z
9qz7j7juH3nW+L8ijv3b7bze+hL8U/oFTuw8KucTy/kR6/pObLhvTHIceaDH
xIlTSA+Wc3+F654r18Tl9A7+Sq6dS0Qbj++64OhtVdcKlUkperG9vPJT+1rh
wb++/xJ7t+t+aXuumGa/tPJj5U5AiM6pICceGrSMOeI+HwV83kTQZ14jvp4b
tKr3kvt3jB8/fnj2nZNrmrzeHVPjcsYfhUM/I57jK79lXO33+ZR/Vg7WidN/
p28uZO8HXSiXNXbZfSfSvYufZI3dwOjTg2UPtWQvtfDsNRc0eVXXCpVPOfUn
9lzdnPTlI276jX3Ow3+x73jlOfvNVQnl7kCIG1MJThyoqdlG9k4THvyEdMFg
MFhQr1DZa0I8x1LZL1aONQ+m3sEyWCeWc1XzzV0tZo2VTrk4sUT+7jKY9XUS
HZ24a3FognDdP+buqdzDg2OzTdV1grsoJyd++p337GVP3mofc8d5tueaY2zP
xYfYngsPtD1Xhe0Vb72t3CEIcVPK3YkDXu83xW0vpR22KH2S5BwKv8+412+Z
C4txvEIoxjhxsrdX7n4QWXsK19eY+/X2+ELWeFUaKpxYum9fY/f0ndg4a9ua
fYlI6GSR53I8+D9yjzm51xx7yYGTlJMT58sDr79q/0l4spx/kXvbNc/eb1/y
xC3Cl99RXichlZZyduLtfL5q4X33jakZNc6BpxySnlMxy4Fjb5RizieW7pt0
rfz7pXWt+7t9lovJcWW3z7sotROnXmP6ThTCynNP/Fo81jQlEQvdusF+ctHw
A92Rhpl4MJSKcnfivnLGg5fbnj9Ptz1t+9ueS35k+zqPs0+4O2Jf9cw99uur
upXXR0g5p5yduLa2duT2NTWjnHxe/+jqsU4evzecWGOX2hdCzlk1z1w3dzXH
k+War9TeEYXNaa0klDhx8neQvOvq1jkyfSfWszoS2jMeC/8pEW1a3bNnROiN
eGvo192LZ5TNuljQh0p24kxee6/bvvnFJ5KOvPf1p9qey6f02h+OEJJKOTux
m3Gy70Rq/Z3RlhmflOPI6THMJ3M8rdmJ5y8XSu3EyTnD6T2bM30n8v1eonvf
CTn/N7mnXG4P4UioKxFpXJKINv6v6hpBb9zgxP3N8Xe1Cl+elNy7WvrzLS89
mfRp1XURoiI4sRqc7sUmnUz6WO7f7eX3SWdOjyU79fzlgIr5xCkXNttzX/fM
a57+veTJQtZDVrIT2xMnDhW++8NELLQ8PS943Vo54cY3dcfCP7EXzS1o7SxA
sdHJiV/820fJeRXSjUd1zk3Ot0jOu/jzdPvKZ+5WXh8hpUwlOrHfGrWb8LmP
hfPd5bfMBYEa87t7JU9jlcNgnXj9uK9cs5V/P+HkPOP0uKWOqOo7kfm9o9jH
rUQnlj2C5b5yiVj4vZy5EW/HI+EF/1gyfbTqGgFy0cmJ80X2s5C9LuRavtzb
Hnrj9eRe1g++8ZryOgkpdirRicdtM6pG3H+FyH+z/ha9VvjxbcIV5wVNc49y
d+RB92LbcB6EnXHk7HVd8jq3jwf3Rjn1YisGleLEspdwd6xx33gsdJ3w3i+z
xoT/lYiErpS32UXqIQPgBLo7cV/pfO7BZB84z4UHpPrCtc9J9om79Knb7Off
/VB5fYQMJpXoxBn8W289ot7rPVQ89uy0I3+Zz5HrLevb4u5DezzWZ96nsu9C
MfoTp9fKNfe6n3DGm8V9i1l7pVBsJ+6rt11/bh8s5e7En5wV/no82jgnHgm9
nNND7cV4NDw3HjvG1X1OwD3gxBuP3Dfk9leeTe4j8uObfpPcV2Tm7ecqr4uQ
waSSnTiXcaNGfd1vVR8sHPBPcs+6nn7oTYjLmwKW8Qvhj98LWubKoGWNL1L5
A6YY84lze932tq5L1708iu3E8vWWc1R6S3o+i2PrFsvViROx8LhELLQ4u3dE
anw41Nm9pGlv1fUBDBScuHi57oVHbM9lP7N3v+6XyX2s5ff5+ioTUg5xkxNn
M9aq/j9xzFv8PvMI2Yc4PWaaPdfClvtCF+v5Bkqx1tj1tTdHqm+xu/ut9UWx
nbiXsfhB95PoL+XmxKsXhcZ3R0JXC//9KquX8Mdy/vCni6bWqq4PoFBw4uJF
jid3PPeAPe/eNnvHa0+yPcuOsD1t+yV7w8nrVNdHSHbc6sSSel/198UxT818
P94wtgxYxkHpnguP+mvMHxTz+QZCEeYTN29srzrdKb4TZ+aq9J1iPFc+ysWJ
uxeFvyXc9/oea+Zi4ceFC0+z2ycOV10fwGDBiZ2N3K/6iqfvtK965t4NbpN9
4C58/K/2Pa++aL/1/hrltRK94mYnlgiPubzYxywGxZhPnLsPh3Tk3P4Tuq6v
kxR/7oTafs6qnTgRa9hD9k3rMVc4Er4vHmk6SFVNAE6AE6vLM++ssj1Xz7I9
Fx0scpD4eoYduu3spCezXzVxOhXqxFXivksDlvG5cMP3/JbZKvuxefKsZZdz
i8uxB8VgnThr/mqf/Sfk127fw7k36DtRHFZHm3YQLnxjTi+1u5grDG4FJ1Yf
OUZ872sv24sfXW7/7Obf254rG0UalNdF3J1KdGLpv36feb/wykvE497JcsF3
hB8vrreMnwRrqr+VXG/nM553uPSCKOaeHan9Ocwzk+vq8uyZxho7nLgQ1rY1
+xKRcFt2PzWR2+R4calqAFABTlw5eX1V3PZcMdXebvmJ9in3LLWvefZ++4W/
/V15XaQyU4lOLNfGifvPTH9bJftICEeOisd/tOGYqfFb56ouHCf2sUvtLSzn
VCR7s63rP6Hr/AmcuDA+iszZUrjv6YlY09p1cyRi4RVdixu/7/RzA5QDOHFl
5eYXn7B/ff+f7O9df4rtuXRiag3fZUfZ+97QwpxkMqBUohMLhsr5s+m+w9kM
Cfiq/8dvmbNEFvqt6h8Wucyi4eTeznLdXfb+wvn2uNMBnHjgxGNNU+KR8EdZ
cyTe6I6EfqrbHhsBr3dvT05Pc9AHnLiyI8eJr37mPvuPD19tv53HieVtt778
tP3GqoTyWkl5pUKdON2L2FwcsLxXlbP79sZgnVjOh8jery4XeX22F+sITtx/
4m3TA8J/78juqRZf0nSs3dY8zInnK3f8PuNeuV+m6jpADTixu/P96+fZnosP
Te3Fd1XInnTLGXbriuX2fa+9orw2ojaV6sQZamtrR6bHdCqKYvadkHMk8vVl
k+PD8rbBV1uZ4MQbRzpvPNLYEo+EP0/3kZC9hmNdbc0jivk8lYbfMq5XuacP
qAUn1iMPvfG6vfTxG5N9LTx/mWF7LjnUXvHmW8rrIupS6U5cqRRjnDjZLzd3
TV1y/nCqL1um7wTziXHifKxpa9xJ7ru8vq9a6HnWz6WQTiwjf8/0+Xybq64H
SgtOTLJzhNy7uuNY+7i7Fif7Kj/9zirlNRFnUs5OvJ3XW1/v9e7u1HOOHz9+
uHjeHzt1/L4o5nzi1H51Rlu+nhNpTz6zGM9TabjBibPHKvM48dA636jtCznu
6tbGGevGhmPhf3YvDv3KXriw7HoWqkL68Pr+3+a/xXvoIfG75e/lPj91dXWb
bezxdV7vGPk3rFLUCsUHJybZeeD1V+0zH7rSPuDG+bbn8smpNXzLjrQnXHty
cqxZdX2keClnJ5Z9hcX1Nwct46fFfr7ta2pGic+6W8Xn3J7FPnZ/cKrvhBwT
zowTJ/sUW8adus4pdoMTi/9/54v8JVBTs022Eyd7r1jGcwPdi1H2lOhuDf05
q7faU/FYSMs1mH2RcmLjBfE+/ST3d0xx27/Ee+w+eb6S87byObK4X4u4X4OK
2mHw4MSkr7y88lP72ucftk9/4FL78bfe3eB2OS/5ry8+br/6XpfyWsnAUs5O
LPFvvfWI1OePeWmdYVhFeKoq6djis+412b+4CMcrCKf7TshxY11dOIMbnFiO
A6fnjP8z4PPG/Jb5fnqPaTn+/5pnAP0gErHwuHg0/EqWD0fsRXM3dbD8ikX+
Ll5fU72dR/Z69Hp3FO+nY8V1nf11ZHH92br2BXcDODEZTE6772Lb86cf2562
/W3PFdOScy/Oefgv9h2vPEdvuDJPuTuxZFePZ1hqTZl3jexDnKcH20aR48Jy
b97k2JplPi0+u7456KIHQTGcuC/npe+EO5xYInsg5JsTE7TME/t7jNWLm74n
fPjTtAsnZH81J2uudMR54q560/TmuSnjyHOTY8l55isl51r4zP869TsvOA9O
TIqRx956x1725K32MXecZ3vaj7E9Fx9iL3q0U3ldpPdUghNnGDPamCA+q65N
fd4Yf0/OEbDMX4vLKfU+c3+5d4ecfyzHasR1R8jPLTm2Ji4fTz7GMv4m7j+7
HPZ6HnzfCePOzJq63vpOpPbwoO9EpTtxwFt91IZzxI3P+ztftTvadKScM5zp
N5xoPXo7p2uudIKWZXj6NwY/RM5pEeebE/I4Mk5coeDEpJSJrLjO9lwz2551
+7n2JU/cYq8QLq26Jl1TSU6cYdvqap9wwF8JL7hDPG5t3nVl6/OSOO5SOU+i
HFw4QzGcWLwGb+XrO5FxZPpOuMOJk38nEb8D5vxcX9qfx8ajjXPi0dB/kz4c
CT22elHIcLhc3Rnit0btljrv4MSVCk5MSpmn33nPPveRa1L9Lf48PTXn4pIf
2b7O4+yrnrlHeX06pRKdOIchwdEja+UYsXDBg2QfCTlOLNfrl3MPpcE6cWbO
8LqvU/2Kn6TvxHrc4sQS2fOgx7wJ09xoz7R4JHRMVp+1m95vay7b94PbkP+/
mE9cueDERGVee687uV/1GQ9ebnc+99AGt8t9+q574RH7pZUfK6/VbXGBE1ck
xZhPnOwtkeO7yX065Lxp2Zst3XeCvZ0r34nHWFad+P/5Vfp3nGc3dv/4kvDU
rPHhK+2JE9mneIDI+VhBwwgU8thk/xev0VjkkqBE4MSknCN9WPaCS/aEu3yS
vd8NLUl/vuWlJ+3XV3Urr6+SgxOroVh9JwK+6l11dd6N4SYnloj3x1/T48TN
fd2vqzX8I+HD/0nv0Xw9Ptw/ZF9GOe8h8738W5PfMi4U79WTB3qs7Xy+6rq6
EVsVt0IoFTgxqYQ8886q5NyK4+9qtUd1zk3Ot/je9acor6uSgxOrwclebJDC
bU7s91YfEvB5V48bNerrvd0nuTddei+ORDR0l90+cXgpa6xU/JY5K3sNguzp
Ib1W3ibPS+m+bKAJODFxUx5847XkGr6jbz3TXvL4DcnvVddUrsGJ1bAxJ87t
ITHQ28E1TrzV0KFD95bZdOjQfYQTL818n5vRW2998J+bfrBy+ewD7Msa9nnd
+MY3DuztvjrEM4A1tbLHo+yFLt9XqX42xhfpXCd8+fZM/8dkj0PT3KkY/2M3
93gs1a8RyZ9hVVURnJi4JXJ+cvSx6+0pt5xhe64K254LD0z2hfO0z7F//+Bl
yusrp+DEatiYE8v5wHJORG9J71PX59/QdcclTrzlMI9nl/7kmpn733zPyYfZ
d5146NrD/yd4aH8f59aI167fc0bGWtX/J704sy5XjhHL/mpBn3mP3H8jcz/x
vpsnvv/S7/WaRfh/O1L1a0R6SVXVOTgxcWveXJWwb3/l2eQ+Imc8eEXe+8g1
fs+++4HyWksdnFgNG3PiZJ+1vnvMyTxZyporDZc4cb+Qa+oyPSbYj6MwAjXm
d+UYsZxH3Nt9UmPJ1WHPAHwbKg/mThCdI/tZyLV7yTV8l060d7/ul/av778k
ubZP7mutuj4ngxOrYeNOnNy/t3ljKWXNlYYuTtzV1jwiHgl/lJ5DvFR1PQCV
Dk5MiOz59pHd8dwD9rx72+wJ155se5YdYXsuOVR5XU4GJ1bDxudO4LuDRRcn
Fi4cSfWYCP1d+rHqegAqHZyYkPx5Y1Ui7/U7XnuS/dObT7fPf6TDvufVF+23
3l+jvNZCghOrgb4TzqODE3ctDk3I9CGW8ydU1wPgBnBiQgaWy5++05552zm2
5+pm23PRwSIHia9n2M23/7GieiarcuIxNaPGCSdsqaur20x+n+3Ecm23cMaz
+uo5VengxM6jgxPHY6Hr0n2IH7A9nirV9QC4AZyYkMIjx4jvfe1le/Gjy+1j
7jjPfvW9zza4zwOvv2o/+fZK5bXmRuU4sXDgx/0+423phmkn/q3fMmcLX/zU
7zMvK2UtpQYndh63O/HqRaHx8Uj4q+S6uiVNe6uux40ELcvwe737ynV1cu8O
+Xt76tKcKfu21RmGpbpGKD44MSHOJjk/uW1/2/Onw21/5wn2Kfcsta959v7k
vtUq61LpxP4aI7S+h4L3A/F58/d139eY3y1lLaUGJ3YeNztx0oejoYcyY8Sq
63ETwZrqbwUs43zxHn21H71fbPF7/Bvy/vWjzZ1V1w7FAScmxPnI8eMbXlhh
//r+PyX335M9LmSvi1tfflpZTSqdWPYCFZ873Rt8zghfLGUdKsCJnceNTixd
uDsSujozPpx04tam/VXX5QbGjDYmCLe9I+25z/h9xnlBy5wm9+sYt82oGtmH
Td4vOHLkN+T48NgaY5egZUwU7+U/iN/nHxOP+8rvM+8b6/V+R/W/BQYHTkyI
mrzyXv5eb6fee6F9yF9/bZ/98FVJZ+5trd9go3qNnfgMuiDPuMvsUtdRanBi
53GbEycioZN7uHAsvAIfLgpDxDlnoTgXfSbXMQQNI1DIQYKjR9YKNz5dHke4
8Tm7ejzDil0olAacmJDyyq0vPWXPvXNRcu892Q/Oc+EBtufKRnvSLWfYD73x
etGeR7UTj7WsHXo6sXeNm9fWZcCJncd9Thxuy8yViEeaDlJdjxuQ3irOOcuF
w14u5w4X45hyHNlvGRcJz74ts4YYKgucmJDyjvTgpY/fmOx1Iffky739uXc/
sFe8+daAj6vaiSXy741ZThxTUUOpwYmdx21ObLc1D4u3TS9oDBPyE/AZS5z6
u5S/xjvJ7zOucOLY4Cw4MSGVndMfuDS1hu+SH9mejmPt4+5abF/x9J320++s
6vNx5eDEAW/1URkn1mWdCk7sPG5zYig+cj2dk8eXc5TFxRAnnwOKD05MSOXn
9VVx+5aXnrTPfOhK+4Ab59uey6ck1/AtuO+iXh9TDk48fvz44bLnRNDyPqLi
+VWAEzsPTgwAhYATE+LOvLzy06Qr515/3QuP2Pvd0GKP/8URtmd7n73JpsPt
YUOGrPQs22srFZmww7hz99hj11m93sdl4MTOgxMDQCHgxITolcffetf+xd0x
23PmYbbn3H1tT2g3u8oakRxXVpIlh9qepQf0fvuF+++r+jxZTHBi58GJoVD8
PuNRkXvlHh1Bq3ov+bcs1TVB6cCJCdEz5TB3QkdwYufBiaFQ/D6zQ7w/v1zf
M934p8hdfstcIFx5TxzZ3eDEhOgZnFgNOLHz4MQwGMYbxpbCgw9K7slhmQ8J
T/53b46c24s44DOOlWuHVdUOgwMnJkTP4MRqwImdByeGYiL33Qz6jAPkfhzC
h/+Rs9fQWtmPWPjxPLkvvXDiNpFTVdcMhYETE6JncGI14MTOgxODU4yxrDrh
wLfL3sbivXymeC+v6DHXQu7H6TPOU10nFAZOTIiewYnVgBM7D04MTrLttiO2
DljGXzLfy3Hk+hpzP+HCvxfv7wdFFqmsDwoHJyZEz+DEasCJnQcnBqcR/nuK
3+vdUXUdUFxwYkL0DE6sBpzYeXBiKBS/t/oQ8R59zW+Z74vLS+Q8YnH10Nz7
BWu8h9Vbxk8UlAgOghMTomdwYjXgxM6DE0OhCBd+OmAZV4r36EtZ84M/DviM
pUHLmFjnG7X9mJpR42TPNr/X66re6YATE6JrcGI14MTOgxNDoQjXvTzzdf1o
c+fkOjrL+FtOrwlbXP8KvYrdB05MiJ7BidWAEzsPTgyF4rfMhcKLp2xwvWnu
FLSMObIfm99n/Equs1NRHzgLTkyInsGJ1YATOw9ODIOgSrxHT/Zbxg3+GiO0
V1KTQBdwYkL0DE6sBpzYeXBiGCy1tbVfk/OHd/Z6t1BdC5QOnJgQPYMTqwEn
dh6cGAAKAScmRM/gxKVBrlHPHmvKdeKxNcYu4qJKSXEuBSeGjeG3qg928vgB
n3GguBji5HNA8cGJCdEzOHFpCBpGIGiZK/0+c7InNVcx6cR1hmGJy0v9lnG1
6hrdBk4MG0M4629Ffudx4PdR8V4/PmAZFxT7uOA8ODEhegYnLh3i8/GOdP+m
h4KW93XZ7yng865OXuf17q26PreBE0M/kL+fLhLvxfvk33KKcUC/z7et+B33
evG+XubJs88HlD84MSF6BicuHXJceIP+pukepx7mTRSdKS0dp0gnFpc3q64F
yhvhsA3ifdiV3Kcj9fvpQOc7VNVb1rfFcS4U7+l4wGcc60CZUCJwYkL0DE5c
OmQ/J79lrsp1Yr/PPEF1bW7jqAXLJwgXfl868eSWjtNU1wPlz7htRtUIl20T
XvuF3LNOzmcSl/PE+/OIoGnu4fd6d6zzesfIHsVjvd7viNuP9HuNXwYs71UB
n/cD8V7+Ujj1n8eapl/1vwUGB05MiJ7BiUuL+Mz9Tc8xYuOfdXUjtlJdlxto
Wtg+cmpL+xHCg9tFvkz68IKOD6bMu4l9FaDfyH045Div+P31NvEeXZv3bztZ
71+Ru6Q7B2pqtlFdOxQHnJgQPYMTl5bUWJT5Zdbn6jLVNVUC4V9e//WJLe2j
p57aPn7yvPbvSvedNH/5XOG8Z02d37l88oLOt5PzJLIirn9k+vxrA6prh4pm
qBz3DXi9+8jxYrm3XWp82LtvoNYI7urxDFNdIBQfnJgQPYMTl56AZVybceJ6
r3d31fXkMrG9fah0ySmndu7zs/mdR09paT91ckv7eZPnd14ydX5H55SWjjsn
t3TcP7Wl41mZKfM7Xpu6oOPdYiU95yGezpe5rttXhAd/PKWl888/m99xgMe2
maMNAAMGJyZEz+DEpSfoMw6QPhy0zKdU1yI5aNEtm05qWX5I2nsfmLKgc+1A
PLS06fgq5codr01Z0HG3+Poy4ee/E99PPHJeJ/M4AWDQ4MSE6BmcWAlVAZ/3
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
+Vrhv7f4LeOG9Djy2SIzg5Y13lPme9n9f5FCp9A=
        
        "], {{0, 139.2}, {340.32, 0}}, {0, 255}, ColorFunction -> RGBColor, 
        ImageResolution -> 150], 
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
       Selectable -> False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
      Automatic, ImageSizeRaw -> {340.32, 139.2}, 
      PlotRange -> {{0, 340.32}, {0, 139.2}}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{
  3.825809838532094*^9},ExpressionUUID->"05bcb0a2-a79a-4c5f-90e3-\
128fcf8f639f"],

Cell[BoxData[{
 RowBox[{"a", ":", 
  RowBox[{"input", " ", "gaussian", " ", "width"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["hm", "1"], ":", 
  RowBox[{
  "marginal", " ", "ray", " ", "in", " ", "object", " ", 
   "space"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["hm", "2"], ":", 
  RowBox[{
  "marginal", " ", "ray", " ", "in", " ", "image", " ", 
   "space"}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.825727862277256*^9, 3.825727956058918*^9}, {
  3.8257280437454348`*^9, 3.825728050746263*^9}, {3.8257281708068037`*^9, 
  3.8257281784330473`*^9}, {3.825744292754668*^9, 
  3.825744293789937*^9}},ExpressionUUID->"8ac3a0f0-aa18-4497-a0c0-\
5e49fc6a590e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Ii", "[", "h_", "]"}], "=", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"h", "/", "a"}], ")"}], "^", "2"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Io", "[", "h_", "]"}], "=", 
   SubscriptBox["\[CapitalUpsilon]", "0"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"upsilonsol", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Ii", "[", "h", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "0", ",", 
         SubscriptBox["hm", "1"]}], "}"}]}], "]"}], "\[Equal]", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Io", "[", "h", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "0", ",", 
         SubscriptBox["hm", "2"]}], "}"}]}], "]"}]}], ",", 
    SubscriptBox["\[CapitalUpsilon]", "0"]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.825808825582101*^9, 3.8258090166768084`*^9}, {
   3.8258090576451483`*^9, 3.8258090930518427`*^9}, 3.825809436085813*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"73838254-4c19-470b-9562-2c7184c86546"],

Cell["From tow-dimensional geometrical intensity conservation,", "Text",
 CellChangeTimes->{{3.825809305432046*^9, 3.825809326272955*^9}, 
   3.8258100123097887`*^9, {3.825822288258807*^9, 
   3.8258222919785547`*^9}},ExpressionUUID->"bd6ce188-afb5-4490-8aad-\
92edee0d83a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ii", "[", "h", "]"}], "dh"}], "\[Equal]", 
  RowBox[{
   RowBox[{"Io", "[", 
    RowBox[{
     SubscriptBox["h", "2"], "[", "h", "]"}], "]"}], 
   RowBox[{
    RowBox[{
     SubscriptBox["h", "2"], "'"}], "[", "h", "]"}], 
   "dh"}]}]], "DisplayFormula",
 CellChangeTimes->{{3.8258091608685093`*^9, 3.8258092217410383`*^9}, {
  3.825809393430428*^9, 3.825809394492285*^9}, {3.825809983056959*^9, 
  3.825809985370658*^9}},ExpressionUUID->"a4857425-0965-487d-b32f-\
ec9a13c0c883"],

Cell["leads a differential equation,", "Text",
 CellChangeTimes->{{3.825809340681292*^9, 3.825809363482655*^9}, {
  3.825809933465077*^9, 3.825809991840917*^9}, {3.825810042309729*^9, 
  3.825810042722003*^9}},ExpressionUUID->"07ea66fe-8769-476c-b5b1-\
4cb93fb1a38d"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"h2", "'"}], "[", "h", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"Ii", "[", "h", "]"}], "/", 
     RowBox[{"Io", "[", "h", "]"}]}]}], ",", 
   RowBox[{"h2", "[", "h", "]"}], ",", "h"}], "]"}]], "Input",
 CellChangeTimes->{{3.8258093851537943`*^9, 3.825809402711172*^9}, {
   3.8258094504612417`*^9, 3.8258094667111464`*^9}, 3.825809504929628*^9, {
   3.825809699179088*^9, 3.825809710055356*^9}, {3.8258100756852293`*^9, 
   3.825810083621402*^9}, {3.826593878904194*^9, 3.826593882777701*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"63c8cde0-7b79-4381-9a01-5eb9e8ad10db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"%", "/.", "upsilonsol"}], "/.", 
  RowBox[{
   RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.825809652714211*^9, 3.825809662775351*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"d24899ae-083c-4937-af2f-08e013738774"],

Cell[TextData[{
 "Then we got the expression for ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["h", "2"], "[", "h", "]"}]],
  CellChangeTimes->{{3.803791701728732*^9, 3.803791729087987*^9}, {
    3.803792607618672*^9, 3.803792686516983*^9}, {3.8037927898834953`*^9, 
    3.803792818830844*^9}, {3.803793025710849*^9, 3.803793030074594*^9}, {
    3.803793066986649*^9, 3.803793067120131*^9}, {3.8037938668975058`*^9, 
    3.803793873535576*^9}, {3.803793939371109*^9, 3.8037939697564497`*^9}, 
    3.803794285539584*^9, {3.803852782163343*^9, 3.8038528362770653`*^9}, {
    3.803852973395225*^9, 3.803852994206606*^9}, {3.803876703603003*^9, 
    3.8038767054704323`*^9}, {3.8038767539487467`*^9, 3.8038767583347893`*^9},
     3.8038768034494133`*^9, {3.803876866111964*^9, 3.803876912717761*^9}, {
    3.8038769822932568`*^9, 3.80387698722719*^9}, {3.803877044021456*^9, 
    3.803877044434607*^9}, {3.803877082231152*^9, 3.803877085459462*^9}, {
    3.803877133236528*^9, 3.803877160249259*^9}, {3.80387720464226*^9, 
    3.803877206688478*^9}, 3.803877298996299*^9, {3.8042134722297583`*^9, 
    3.8042134747709217`*^9}, 3.804213600943034*^9, {3.804217590434198*^9, 
    3.804217590434903*^9}, {3.804218203118425*^9, 3.804218203118938*^9}, {
    3.804220864898169*^9, 3.8042208844619226`*^9}, {3.825727965339764*^9, 
    3.825727969965231*^9}},ExpressionUUID->
  "77a98c17-509d-4f0b-b850-f102a75cdf9e"],
 "."
}], "Text",
 CellChangeTimes->{{3.825809871840396*^9, 3.8258098920269423`*^9}, {
  3.8258100593407907`*^9, 3.825810059747291*^9}, {3.825810099092256*^9, 
  3.825810124183785*^9}},ExpressionUUID->"03a4880d-8105-4480-b818-\
c1b7651c1207"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"baseConditions", "[", "tophat", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     
     RowBox[{
      RowBox[{
       SubscriptBox["h", "1"], "[", "t", "]"}], "\[Rule]", "t"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     
     RowBox[{
      RowBox[{
       SubscriptBox["h", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["hm", "2"], 
       RowBox[{
        RowBox[{"Erf", "[", 
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], 
          RowBox[{"t", "/", "a"}]}], "]"}], "/", 
        RowBox[{"Erf", "[", 
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], 
          RowBox[{
           SubscriptBox["hm", "1"], "/", "a"}]}], "]"}]}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseConditionDifferentials", "[", "tophat", "]"}], "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
     RowBox[{"baseConditions", "[", "tophat", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.803791701728732*^9, 3.803791729087987*^9}, {
   3.803792607618672*^9, 3.803792686516983*^9}, {3.8037927898834953`*^9, 
   3.803792818830844*^9}, {3.803793025710849*^9, 3.803793030074594*^9}, {
   3.803793066986649*^9, 3.803793067120131*^9}, {3.8037938668975058`*^9, 
   3.803793873535576*^9}, {3.803793939371109*^9, 3.8037939697564497`*^9}, 
   3.803794285539584*^9, {3.803852782163343*^9, 3.8038528362770653`*^9}, {
   3.803852973395225*^9, 3.803852994206606*^9}, {3.803876703603003*^9, 
   3.8038767054704323`*^9}, {3.8038767539487467`*^9, 3.8038767583347893`*^9}, 
   3.8038768034494133`*^9, {3.803876866111964*^9, 3.803876912717761*^9}, {
   3.8038769822932568`*^9, 3.80387698722719*^9}, {3.803877044021456*^9, 
   3.803877044434607*^9}, {3.803877082231152*^9, 3.803877085459462*^9}, {
   3.803877133236528*^9, 3.803877160249259*^9}, {3.80387720464226*^9, 
   3.803877206688478*^9}, 3.803877298996299*^9, {3.8042134722297583`*^9, 
   3.8042134747709217`*^9}, 3.804213600943034*^9, {3.804217590434198*^9, 
   3.804217590434903*^9}, {3.804218203118425*^9, 3.804218203118938*^9}, {
   3.804220864898169*^9, 3.8042208844619226`*^9}, {3.825727965339764*^9, 
   3.825727969965231*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"c54b417b-f899-4100-862c-84571765aeb4"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"baseConditions", "[", "tophat", "]"}], ",", 
     RowBox[{"baseConditionDifferentials", "[", "tophat", "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8037917761036654`*^9, 3.803791785259919*^9}, {
   3.803792637304854*^9, 3.803792637305315*^9}, 3.804217590436248*^9, 
   3.8042182031196012`*^9, {3.804220889916891*^9, 3.804220897680141*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"8bb79677-fab5-493b-901d-e6879b8d867d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wweq1011", "[", "tophat", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
       "vectorRDefinition"}], "/.", 
      RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "//.", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"baseConditions", "[", "tophat", "]"}], ",", 
       RowBox[{"baseConditionDifferentials", "[", "tophat", "]"}]}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", ">", "1"}], ",", 
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"a", ">", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.803791816234129*^9, 3.8037918267174683`*^9}, 
   3.803792027512661*^9, {3.803792637306686*^9, 3.80379263730764*^9}, 
   3.804217590437612*^9, {3.804218203120326*^9, 3.804218203120783*^9}, 
   3.8042209130268803`*^9, {3.804222524014161*^9, 3.804222551438847*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"d8cfab00-7cc4-4c30-9811-e19c00e6e12e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numvals", "[", "tophat", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "1.5168"}], ",", 
     RowBox[{"d", "\[Rule]", "2.5"}], ",", 
     RowBox[{"a", "\[Rule]", "0.7"}], ",", 
     RowBox[{
      SubscriptBox["hm", "1"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["hm", "2"], "\[Rule]", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8012630530975037`*^9, 3.801263094508999*^9}, {
   3.801263172687652*^9, 3.801263209644691*^9}, {3.801263295607588*^9, 
   3.801263318984898*^9}, {3.801263641426814*^9, 3.8012638352317553`*^9}, {
   3.801283167951693*^9, 3.801283173011119*^9}, 3.803263115659727*^9, {
   3.803792073817575*^9, 3.8037921339171124`*^9}, {3.803792194104774*^9, 
   3.803792258581438*^9}, 3.8037922942100477`*^9, {3.8037923249229794`*^9, 
   3.803792335251822*^9}, {3.803792391929295*^9, 3.803792392356008*^9}, 
   3.803792637309124*^9, {3.80379304733363*^9, 3.803793060540176*^9}, {
   3.8037932172558613`*^9, 3.803793261806061*^9}, {3.803793453768919*^9, 
   3.803793477370899*^9}, {3.803793690370706*^9, 3.8037937284635363`*^9}, {
   3.803793990740267*^9, 3.8037940137805634`*^9}, 3.8037940798193407`*^9, {
   3.8037942964071417`*^9, 3.803794362310667*^9}, {3.803853019947257*^9, 
   3.803853110802706*^9}, {3.803855691444605*^9, 3.803855691972438*^9}, 
   3.803855799286983*^9, {3.803855842330738*^9, 3.803855842779358*^9}, {
   3.80385593083456*^9, 3.803855931462969*^9}, {3.803855972594254*^9, 
   3.803855975967812*^9}, {3.803856091970339*^9, 3.8038561110838757`*^9}, {
   3.803856159056375*^9, 3.803856159380837*^9}, {3.803856202999275*^9, 
   3.8038562102075653`*^9}, 3.803857202441389*^9, 3.803857305931226*^9, {
   3.8038732947976847`*^9, 3.8038733101745863`*^9}, {3.803873373436207*^9, 
   3.803873373714878*^9}, {3.803873464359016*^9, 3.803873468171276*^9}, {
   3.8038735076828747`*^9, 3.803873513822783*^9}, {3.8038763612814827`*^9, 
   3.803876399508752*^9}, {3.8038764824456577`*^9, 3.8038764907581863`*^9}, 
   3.803876817567658*^9, {3.803876848618791*^9, 3.803876849223301*^9}, {
   3.803876934477187*^9, 3.803876952048832*^9}, {3.803877249574541*^9, 
   3.8038772502935534`*^9}, 3.8038773089185963`*^9, {3.825727974900393*^9, 
   3.825727979432932*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"f7a04801-c7dd-4f89-b340-599e26216660"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutions", "[", "tophat", "]"}], "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"wweq1011", "[", "tophat", "]"}], ",", "boundaryConditions"}], 
      "]"}], "/.", 
     RowBox[{"numvals", "[", "tophat", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.801263002654477*^9, 3.8012630187842503`*^9}, {
   3.80126310094422*^9, 3.801263124501245*^9}, {3.80126338030837*^9, 
   3.801263381174972*^9}, 3.801282408170619*^9, {3.8012831788283443`*^9, 
   3.801283179099044*^9}, {3.801283399568046*^9, 3.801283400308728*^9}, 
   3.803262916602566*^9, 3.803263044132358*^9, {3.803263115661213*^9, 
   3.803263115663175*^9}, {3.803792091952169*^9, 3.803792120482757*^9}, {
   3.803792637310515*^9, 3.803792637311554*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"1f85d078-4593-426d-a460-4c6e34ace981"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "+", "d"}], ",", 
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}]}], "}"}]}], "}"}], "/.", 
        
        RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "/.", 
       RowBox[{"baseConditions", "[", "tophat", "]"}]}], "/.", 
      RowBox[{"numvals", "[", "tophat", "]"}]}], "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"solutions", "[", "tophat", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.801263129163539*^9, 3.801263160896487*^9}, {
   3.801263331358416*^9, 3.801263386372561*^9}, {3.801263542280878*^9, 
   3.801263548241811*^9}, {3.8012665070391493`*^9, 3.8012665158493557`*^9}, 
   3.8012824512893333`*^9, {3.8012831879523497`*^9, 3.801283203016203*^9}, {
   3.801283412642311*^9, 3.801283416668055*^9}, {3.803262756009536*^9, 
   3.803262767767289*^9}, {3.80326301786617*^9, 3.80326304355344*^9}, {
   3.803263115665002*^9, 3.8032631156659613`*^9}, {3.803351298570595*^9, 
   3.803351298571262*^9}, {3.8037921499249487`*^9, 3.803792180143385*^9}, {
   3.803792637313439*^9, 3.803792637314748*^9}, {3.803792867971105*^9, 
   3.80379295118848*^9}, {3.80379298623287*^9, 3.803793006563003*^9}, 
   3.804217590439904*^9, {3.804218203122867*^9, 3.804218203123481*^9}, 
   3.8042209322183123`*^9},
 CellLabel->"In[84]:=",ExpressionUUID->"4adb890d-6d67-4100-a8c2-6095ee5afc81"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bessel beam generator", "Chapter",
 CellChangeTimes->{{3.8037943918887663`*^9, 3.8037943998168907`*^9}, {
  3.804213621315291*^9, 
  3.804213626063444*^9}},ExpressionUUID->"c4011650-044d-41ae-b8d7-\
ec08175c4f7c"],

Cell["\<\
Pseudo - Bessel beam can be produced by an axicon lens. This pseudo-Bessel \
beam generator example is better to get longer focal depth and working \
distance. The solution is rotational symmetric, not two-dimensional.\
\>", "Text",
 CellChangeTimes->{{3.825727506811977*^9, 3.825727522934986*^9}, {
  3.825727564185869*^9, 3.825727730372588*^9}, {3.8257480754157352`*^9, 
  3.8257480833292828`*^9}},ExpressionUUID->"1ed20724-c589-4398-972b-\
0c63d02aad70"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[
      TagBox[
       RasterBox[CompressedData["
1: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
Xeef/XommF1I7uFd92ven9/1bu/73sf+1Moy7p7lOFfUO84Lvbuui/uxI34r
lix5y/OOOmrReNyW7stp+lfsLzYP1e5/AQAAABjkFsCkUF/nOC/zz3Qkbp7l
JD7hfU9+vjaRuMP78+Pevz/m/f39klXUJxJp7++7vOv3zXKczd6/b5CL97G9
knPUOE6bzjb+bGcX3m383vv4+/Vtf9S7fE7lGPks4z9NluH9/Vs6y9hc7zgv
csgyZpzVzY0PrGpq3Dwet7V06YIjVU7R1HB/sXmopkcnNRkAAAAIIrcAJt4c
xzlqVm3tO2Y5zvUyz8f7/huS8xuSSXh/3lmbSHzEu+z0/v1BuXh/3+HXXTiX
e39utf59rnc7b5W/y9vk/fWOc/xsx1npfdyN3u1mAnUXf/Xe/oDcp3f99+pZ
Qp+UbCSXZTiJ+9Wlpua7uj/Gz0yW4b3/U959XKOzjPq4n0ccGsuPWvRclSk0
Nf6X98/EeN62zBHRs0X+W889DeYY1FwAAACgALkFcMjNrnOcV3iXK/1sQZ35
+LT35+06s/gbfeZjp9Ra1CcS75P6Cck0vO/Pjd7lanmfqq+orX1HreO8zvv7
tTqn2Ob9/TTvPhZ7b3+7nBXxb8dxJRvx3t6oemIEel54b/u2ZB1yP/p+9+h8
xGQZd+s8Q7KMz6gcI5H4mve273jreVjqMrzLj+R2vLcNeG/b4t3nSxyyjGlh
VVPDB02OcChnfPj5hZqDav5UtReH6v4AAAAwNZFbAONuaY3jvFNyBskh9FmP
j6pMws8HUt7lFskddG6wy+QUkjd4H/cunSW827uddSrzqKnZaK4v9RXefRyp
sxCpvdipayAkN/A+xFko9y/XV7dTU9Pi/fnhYHbh3f4j8j1vZSRXq/4Y3rrV
fcla/fdLjvJBOV+iL3fmsgz/3IlkGf8xKsvw1kaWMfUcc8wxcwrrIJbccyjv
zz9DIudE/F4XwZ4XAAAAALkFMCZzvP35qSo3kD4T/vmLD+seFDu9y63yfWVy
CF0fsd1kBdKLor6mJmnVSaz3Lid5b79A5w47vH+3e/dztHdZ4f29S58fuaG2
tvZs721zvUutlWFI34srdX9NY546S5JIfHaWk/hLIL94yrv8ndRqeJc3ex97
iVmfPoeyWdas85VclqHqMvws45O6NuNj3u3cGzxjYrIMlW0kEkPSg8O73ZO9
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
EolHgz0v5OyLd3me95y05fpyehf5t7zd8eesinne21+lzsrkc4dyWUaP9MSQ
fMa+D5OFqBqU8Cxjszpfk5/JepvV//O9ui4jf8aksC7joWCWIT029DoXRPli
nM7GPbdoatxfpBfng977bmaeCAAAAIoht8AkJvvbEyQDMOcFZC/sz/t0Ouz+
mdJbQl7Dt/pGblEZheO8MphTSPagM4ztOlu4Uu7Hu7/5ukfFdn2u4jKpB9Br
OVpmh+TOd9TWvs3Jn++YW1Bv4e3HHXO2Qj8O6begMxRVcyH78+CDraZPhc4q
Njr53p5hTJ+MLfr6V+neG0XNc5wl3l7+n8J6XjiFGYv0DnmO1GGYPhgVZRmO
80bvfQ3yOMNqL8pmGd7zrjIr/Xb9cdcUZBmmLsPvl/FefbbkU3qOyadM70/v
vr+p8ouamh9bWcYX1SzXGZhljGduIXUVppbCzBORf0uWwTwRAAAAlENugclC
7ZVra99q6iZ0z0upm3ij3ZtCXnOXPbDslU1WIPth6XepLoGcQm5XahDU7fp7
XlMfYeZkjOpR4UgW4WcbuRoMb/+cq1+XegG5HytjsOstZFDnMbrHhZlvetYy
x3lW4CEX3EepmgrpmZGrqfDPqEhPiVI9EqVPRpvpMar7ZUbpU9moz8ioOShS
gxCSXTwqGUCRfEKEZRnb/RmzKgcyz9McfUbmEqvuYku5LEOf93mu3G9IXqJ6
lIRlGWY2jJVl3KYvN+l6DHXGRGcZX5W6DJNlBOoyvqhmufrrnLZzlg9Ffwup
pQieDVlxVOOZuRyDeSIAAAAIQW6BmNTrzOBSM2fU+/cm6QWhZnZYZz5ULYPj
nKTrHXboGouLpWZA30bw3MciPfNji75uz2zHea3kBiV6VEi/hhP1PNOdOsN4
pZPfYy+0zozIjNILvLfZ+69Zch+5PhbefTj5Hhf5K/n77cv1zIvuEjUV9SZr
0bUfUWoqXi4Zir7t0D4ZIaQW5FR1TiPff+O5BTcsdQ6JxB8CPS8e1/Nfw2ot
1gXyCUVyH6mfUD0sTH4QNcuorT1bztfIcsJqL3TfjWPlUiLLaDNvN/Ueo+oy
zEVnGd7l06YHqKrJyNdl/LtVl/E973r3yc9POdvjTJMsY7xzCyGZhZwHGc/b
BAAAwPRHboGJIGczpHbC7FmtWR0nyXwN+8yH5AWqf4Teu+pahAvVvE7/vEMw
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
8b8snJGa+JPM19R7f/m6ruS5rWYWSJijdb/carKMUn0vSq2hmlmwUfOJUddV
OYOcf/IzKHvmT+6xP3vhkT+RcyKBx5471xKsBdFZxqj1BLOMOr+PSa8+Y1Iq
y7hbZRR+v4zPe9f7mskyTF2G7v35Tf+6zmayDAAAgOmJ3KKQ7C3kHIVVc71V
ZlQ6hXv2KGc+pLfE8ea1dHMd7+0rArdTLqeQfcI51vmTy/TMjtx+Tveo2GS9
Zi91HfMD9/Mqq27h6pBZEaYfQ681O2TU3EudE1yqe0r0FMsJqu1TUWLuqTFH
sgz1fKp9r9NRbh7FqDqMaPNCjKXevqgz0P8j0rmR3H379ffXW30uji//kaNJ
viGZj5V5dDiV1RaE8XuomM+77ntR4fmWknSmd5H5XtG9FExd0Vw5KxCYNfJn
eZ4q7BNRTDWzQMKo/byez2sykYu9dZ3slM+8cllGXeFM13KPpyDLMB9bZn5K
eJYxOp8Qc/TPn0usx5TLMlY2NXx2ZXPjlY6VZVg1ZvnHXuJcSzDL0JnFFslB
9VzWy637DmYZO3WOsdv7+3vlT6suw84yviZnTOy6DO8637KyjCjngAAAADCJ
TbPc4jMbNm64wb5s2rSp1J52nn5tOdefTvaCet9s7yXKnvlwTJah5yjoWR9r
AnvqKDnFXGufu0PPeZA9nr1HsXtUqPqF4N5dajsCWUZYb4MV1hmF7UXqDvxa
CZMTeHsmJ/w1/apqKvTz9JaQteXonh2XWjNOXuGUqamwcpOdVr4S5XVYef7P
tjKODY6KHyJTZ2r0fFRz3692qut/KXUJ7zB7ONkrhmVJFZqvZmXm95/XeX8/
bRxzilp9pugyO9PTMzaKmaXnUNjZxdOSF1nXKdcnopKZFNXMAhlFvuf03rua
LKPyvhdaFbNgS+YTxa5r6i30dd9s/4wp+9itLMPKalQtiORvYespkmX06J6l
3VaWsScsy9D9Mj5bLsuQ+4pYOwMAAIBJYprlFiXrLWTPZ+9V9OuQ0uuu4Kx+
lDMfuXp6PTNUn62X/bfdTyBKTlGvzqHkzx7Ivvw0p3CfW7ZHhRPstRB+/kCy
hTfnfv8vMlNDblv3GL1Rrye0VqKCmoqawPmKcjUVUbOSPG+fJPsec36mSK/Q
MAk9c2WzqTfQ52oq6QG4XPINXetuztRE7lNpPwbTl1VnNJeH1MVUaoGu0e81
X/M6wxnrHBFjnszClectN/fUnydSLLMqJiH70UB2MSK5WomPMXv/1grOVhRT
zSyQUez9vLWmS/TPj1Jzee3H06brK/qiPh47yzAfV2Z+StEsw+QTVr2F9B0+
WZ1ry+c828plGfox2I+96LmWYlmG+pnm3ab9dvUYR2cZt6lLIvE+7/JBnWOY
LONzul/G17x/f0eyDJlhY2UZA2QZAAAAk9u0zS1kD6hniJrfd+X3/5Cei1HO
fIgFBa9T+/MMJPOYG7itcjmFPedhl847zgrcTpQeFXKdV+osQPa413hvO9EJ
7K9k32LNlNim9xCFe3K959f9LnZ5+50Wp3AGiVFJTcVic6bBeh5K1VTYGUh3
hJoKyRtOsOoarpPn1Ym2V8317lDPS23t+U5l/SuPlH6GVl8JyX8qPq9hzWbt
1jNPrtHZz1jmJqiZNLP0/F2dU8jnPEqtSVnzHGeJPF+m14uu1zjdKb8nj0Tt
uQPZhf7ajqqaPhHFVF0TEdCgfnbI3ji/X4+aZYzl8ZSbIRI0R9eMqXxC6i2a
Fy74YjCf0IplGfJ9bmeh5R57sO/GdqsW5Ogi9zEqy9BnTK4ymYk+m7enRJbx
GVOXEcwyvD+/rbIM/+dQlNoZAAAAHGLTJLdIrFix4mVnvuHMu/Vr9Dfo2XxS
txDcK0c58yEapEbf1Djo25Pfte3X46LkFGruY12ZOQ+yb9fXKdajwp/rqWec
1vn9JM8OeXwLZUaJ2ZNLD0incM6JInsXveffZb3WOGofdghrKuapfn3WWRen
/Gv0i2T/ZvqJVpA3zLZmsu4o1rujhFnec/9aNTfGz0iukszEqbwOoq4uP5tj
V53uJeGMrfZhoXw91eXnzcrr0MFzRVWTvbGc19B1LPI1sEnveyvZ/0civRBk
n+19H31pVN1FIvHlIvvnKPJ7/8I9fKmzFcVUPgskXMF+XtWp+H0/ZO5tuf4p
wb4Xpr4iyuMpyDLUxznO+rBaA6m3WNXUcE2UWgtt9qh5tTJLxPs+d8plGTU1
l1qPvdS5luJZhpzvst6un9PNgSxD+mV8wPv7+73LrXI+yZrJ6mcZTuJ+k2WY
MyaSZXjvH1T5CFkGAADAhJuiucURus9it35NuW/h4sXJtRdcsCN4xShnPrTl
ufoA/3qX6hp9ex8SKadw/HMD681sUtlfyOvU9hXk37LXsfKFUT0qPIdLzX3u
dhzHdUaf6zB9LbfqfavsqV8Y9pxJDiPXUa/te393wvf81dRU7FKPQ2Z4lq6p
eL6qaylz/iTw2E7R/UR3+TUx0Xpayh4yN2fE22tI7uBEzwfU2RG5P51zSE3M
66roAWHX1uzUGVlYn5FKNOjP4w5do3GFzlDGI0eoV1/f6mvI/36RMxjO2Ht/
hpHX61/urz/3vblRZyLyeX9XMLvwHu+HI+6foy2g8j4RxYxXjcdCOTNRZ/Xb
qSDLGMvjCZ2fsqK56R9XNTVuDrsr2bt71+kqk0+I+mJZRqA3brnHXizLkHx3
qXyfhdzH+WFZhvpvgM5MrCzjtmCWITNZvcs99fk5Jt/2Pu5hqcvwLj/SWcaQ
zo2i1M4AAACgSlMgt5C93/HyO7I5cyD7Sdmr2/tIdU5k/fqrI575MPvajbnr
1dR0FjlDUjankH2T7FGs2aQd3puXB25rnt3vsUiPilp9f1v1fjn07IP8vi/1
3vpc97v17+7BvXBC90fcYs4g6D3hKJXWVOjXL2VO6ZUhjyFPzp/IvEv9Wn2J
8yc58pq7nhW7S9edlDxfYpGzG2tMfw/5fDgVzAT1vpCeLbmQqf/QuU6wBqcs
2SOWq62phHxt2TUmat8WmCczBofr1717dG7Qq+fOVr3eEpZK7U9dvh9oj76v
UbVAhnxPSn9OO7vw1nmzdZWCswp6/9hdZP8cSaBPhJnfUepsRTGjaiKqzEVG
7ef1z79Xy/dXJY8nV18R7fEcvfKo5m81H7Hg7+0sQ9fyhNUaFM0nnGJZRmBe
rdSBOIUZWbEs41T92Iv23dDfz2HrOV/1+LHf7n+fSj3d1oIsI5H4oJVl3KXn
sn4sl2Xougzv8j2r9+d39Ptv0GfdyDIAAADGwSTMLRbp18h6zZwLvYcM24fk
znwcdsTh7z3tNaffV+TMh/TcO8m8tqv30GtDZmFGraeQHgJvt2vn9euqBfep
6iBM387wHhVime7paOZsyvoLXlu1+iCYzONip3Ceau65k2zA1D+oPXP43mZe
BTUVhbfp70OKvvarZr/68xBv1I9Z9jmlXm+ul7MSZn6K7MsjzqcMm+0qe7Go
+/kFqpYl19fP6XLCn9OSVD2P46y3el2sdSrIS4Lka1I+H+a8k9qT+fvcMecU
Ou9aa3pT6L2a7K3Gq0dn7q5kbym3b+1518t5KafCuhDVW6J0dhFUyf45qkr7
RBQ1TjUe0mvndfbzq+vIImUZUR+P1ZdTkd6ZFc5PyX0urLwqLJ8QMq/2RZGy
jNKPvVTfjWVF8pI18t+c0CxDsmP9/WJlGbdKnqGzDFOXMRTIMh6SLEPqMkyW
of87ID1xI89RBgAAgC/m3ELyhBPq9CxO/ZrvZVIz4YT0dS915iPQl3N2nT+j
41rda+F6/bp3MM+o0+cQrrF+h5U6/mBOoWZHmt9frf4GBXswq0eFnUEU9KjI
1SD4++VdetbjqDp8dVv+7M9d+kz1q0Oek4L6B8llitU/VHBGQ27zpSZvKXWb
uceTn+MRqabCs7wuP3+1T/c3jXJefIXUyOT6e1R25kLOQJyWyznkNdzofTxz
ZO9mzhP5X7OqtmYs5yiWF8y48R5fSAZWjRqdIV1svrdkX6Y/l+NRq5Ej35dy
nsTKWrbI6+Teuw4fj9tXdRqJxJ8ryC6CQrMMyR6d6j93wT4R29XtVzGToopZ
IGFCswzdPyXKbJtRWcaKJY0PrWxufn+px1NqHmqRc1VR84mC65rcY1Z+Xq2d
bZbLcUr13VhWZD25LMM++6N655q+HIVZxvvtLEPXZeSyDN3rM5dlqBmtfj8N
yXelDxNZBgAAQAkTnFs06nPUvXaeEOz9YJYW9cyHZ35DU8N5Um+R+73T3zfN
D7nNsJyi4Hq5Gaf+nAc5r7FFvy5dsIewelTkekuGnLWvUa//+RnKTj1/QV6f
DO6XDy+YY1pTc6ET/rp9o97n3qjPiBQ7R2H6XqoZIRFrKtT+NkJNhfT0vMY6
yxLa09MyR89x7dNZTTKk1iXM/EDGE/XjzDpfkOtx4fcxla+JSuu2F0m9j6nL
kD1ZhT09C3j7rVWSdeTr0Z31IeeTKiZfszqXucacp5K9l5y7GettB8zT83+v
M/cjX4+6B+u45iE2yS68fd9fCueMJG53qu/rUcn+OarQPhFVztccjxqPBbJ3
1/VPpvZgs84Jy2YZK5uWfGV5Y8OHK308Ksvwa+aizk8p+Fyo7EZnByG1V2pe
rZ31lcoySjz2UnU5K8LyEnVeS7IM+2vGyjL87EpnGf5c1g9413mfZBgmy5A5
JTrL+Kqewfo9qy7j31WW4SRuUnlTtNoZAACAGeEQ5hZ1+nX7S3P1Ef4sAvmd
N+z37qhzPsQiyTusswXXNhzT9MbOzs5gD7lIOYVj5o6abEHPOA15vdDuUaHO
NBSZmbFU6ijMWRP1u/Do30FrdP8JM1viWv3cBPdhtXX+DIoe9dqc93wW2+dW
XFORn6FauqbCz1TOMz09ZV6JU6IvgVmL7pmxS69F+uuVq4M3fSyvs/KisIwn
lOqNYc031etsiPKxOTI/13HeUufP59ip5jP6/Vmr2pPL58o6R1Ks90k1pF7+
nFn5eafdRbK6sZAeDc81e0STU+nX8A/l68OzdWZ5ibU/vFbVHSUSfw3UXXx1
DOctgkplGRWfIdJCs4wSZytKiTwLpCjv67tEllHQ1yR4TqTU49FrKPV4Kp0F
GzWfGHVd3U9k9Lza0o99gX4OTyz2+Q9bj51lmFqZonUZVpYRqMsYDGQZD3kf
+2Mry/is9/f3kmUAAA6hgv7Xup89MKmMV25hZhiafZT+HVNqAUJf469gzkfu
XH6uHsCfoSC/J+f2J1Zfzig5RULXDFyuc4rtaq2jfye0e1TYdRfBfZHdL0J6
JWxw1EvgozRa++od+uzKqFp6OYugf3e+Ub9uflaRmutqairK9b4wz8+LZ/lz
Unfonp7l5n6aepGduvakrcRaCh+r9+kzPUal54QT/XzBfNVjz+yp/T4jYfU4
RVm9Q7pN/1Kd91S199X9Xi82z7N8TiqpESlhhf39It8Deu9bUX+FMg5XfRCt
/Zac/4jYb6RaflZgXvf2H9s2PeN3VOYU1u9C8jd53zjOBwmu74UR98+R6J+V
lfSJKGXsNR56P68yOisnWnlM87+uaG7sjrIG+flXxeMxWcZ1dbpvaZn5KaFZ
huSTBfmELzev1tx2uSzDut61OgOUzLxklhWWl8j3jD5j0h5Wl5H/PKkc4zZ9
zuS9dl2GyjKcxP12lhGoy/ic93G3yM8uJ9o5IAAAjFLzxit7vQ+YQFXmFvkZ
hvnXYXMzDMPupoIzH47uw9+Z65ngOF1Fzvzn6ikOO2LBzbovZ1hOoV73ts/6
616fo/bVVo+KHfpsgeyfgr9DF9YF5GdwBB+79FQ4XZ+LkTMGlxWpz6jX51K2
634W0ndzeZHnpuKaCl2ncVV96RmiUeekGvJ7/4n2+ZcI50VMTvB6q2Zlk5yd
KPUxFsmRXllnzVupImOo0/Urps5lq64fqKY3ZUL3kLjU9DSRfdE4nM2o1bU4
l1rfLx3jcZ7EIvu649Tr9dZrz3V+38BDNQMht5cMZADnVZLthGYX3vdW2HVN
lqF7xJiZHlX11LRUUgsQSak+EU7ln49iNR7FZoGEmbfq6KZ/OXrxkffaWYa1
nx/L4ym1hkpnwUbLJ4pcV+cewXm18+r8nr+XF3nsJmtz7dvRn//VYesJZhkF
dRnWYw1mGdLzU+aY6D/ljMkDkmV47/u3QF3GQ951Pq/6bPjrJMsAAIiC/6bp
s5jXlcko5PeOcr3qppzVq1fPXtXcuCHudaB6UXILmSmXm2Ho10aUm2FYyZkP
yQBebPZo1nyLsHqFouc+An05/RoN+R1RzyYt9rp3SI+KtrB+G8HZoyXqAlbU
+T0n/TqO2tozi9RKLNU9Jnfpeg+pVQ7bO1dSU3GkvPZo1aWUq6k4wfRDiFhT
YWo2VE2Ffs2x7O/Ham/vOFeaMzh1fo/RSHvGiDlSKSZjukrXmVxfYT/P4G2d
YPK6Or836JqQniaVmqvO4kvG5J/52K6/vsYz8z5Sf0/2WHupC5yx9RQtZ3nI
DM6w/WTFQueM1NRcFPHDx20+iMVkGRdG2D9HovtEvKmCsxVFVTELJOycSO53
n7r8fJDIr8+YLKOKx5PLMnJnMUrPTymVZUhubOe8BfNqzddpqSzDWoP92Etl
WQVZhr5sV/19vZ9n8mcuU/M/Lpdl+GeBEh/I5RlO4qaQLONr3t+/4t33N01d
huQZOsv4osoy/HVWPNcZADCllMvdw4TWXpR5rXNK8n6naV3V1PBLp/oaXMTM
+11nv/W7/6cd/+v3VWquZCLfO3BWiRmGlZz5cPwahFPMGQT1mlNt7flO+O+9
UftTOCeeeNzqs846685cX0vH2VDk9emoPSrmWteTeoKNTvgZ97nWWQXVO9IJ
n7c4WzKM3PW851TyoJDrVVJTkbB6ZOyIUFNhcg07dyh1JkOdk7FmcFypvw7K
WazP9dh9JqLmto3qtcnSvU5LUv049VwX/ZqmnMcpVTtSjDz+l9oZta5DGVOe
ILmY2jebr0H//NHpzvjVOcge6kV+DVTBuRL5Oqr0HEIkek96TuA1/o4xntEo
Sb6HCmouEomn9YyQauSyDLO3HENPTaOSWoCoKu0TUVS5WSBF+lsEjbXWtNrH
U+ksWPW5iJBPiKJZRuDrudxjz2UZIZ//Y+USch+jsozQuoxE4oNhWYZ3udP7
+6dUXYb0zPCzjH+XHMPOMiQLIcsAgCms8Jyj+e9IVRnFTDkfsqqp8eurmhtH
Vh+15Jzxuk15XVv2R1wm5hLo0f+U/I40u9Z5g1N8P1vRmQ8n/1pyt1V7ETZr
1Nx2pJzC8X9vfYtZw/wjF2y56KKLHtiwccMN9iW5fv2Ot5//9g+//g2vv//5
xx/30RI9KlSfTF1/IPtdOfvxypDrOXpPaF6/31bk9lSeU+fvn+1ZpnUhj+VQ
1lTken/qmooXFbmuYnprmLoSXd9QrjahXv/s7DF9PvXv91HI18dZdboPpj5L
EyUbyVG5Wb73pcxiXeuEz2IpR77+Ts717TPP7xh/t9e9LTut/rSX6F6f1c7C
CGpUvUR1fVOdX79z3iGYJWIsLOiDofe79f5c2Wr3+JWQOv3jVW1DIvGVQHbx
V2896bri5woqMZ7zQQw7y5B+CH0l9s9R+Xv/6GcrirJngTx74ZE/aVow/8t1
leciBb8XyeNU2afjvDliBpnLMury8zyiPJ6CLKPOr4m4usT8lKi1Fuq6koNH
6J8SfOzy+d1qPfZSWVZoliH3obOMVvN28/tpXeEZE1OXsVvNJEkk7pAMQ/fL
+FS97v1p6jICWcZ98rG6LnLa/+4KAFNK+b7SYcJrL2ZIRhG0csmS4yWz0Jf7
4l4PquP9vvKPgdmCfxu4SiVnPvzr6z2U6Xsg/QOKnJWoJKeYq/on6hmq+nc2
Oa+tfl+0z4moegXdc6CuxNmCgp6QCdX/Ul6rDfv+X2jVKezU9fVhj1/N+zRn
U+T15mJ7xypqKrZY2UOpmopFFeQaail6XmCvPrPyrihn9FW/EMfZZJ2HeX2R
z3FQrc4GrrNyH9mPhOU5oeTzpl6XNDmFP6OjmvMOua8/62tAesmO5Wy43ObL
da61w/S2dMLPPVV7+y+tK8zKL9XfC5GfwwrMD/lvpdlDHqo+GLa5eh/4Luvx
yrzK8/XXaUL9PCjMLp7S9SVj3seHKMgy9N642p6aRiX756gq7RMxilVvMR41
HrP19/3F1noqyTKqezyV/66X/1wUniMK7e8asRdsucdekGWYPMt8/kPzEvnv
VkiWIY/N/Pe0VJZh6jN078/7Jcvw3veg9MrQWcb3dJaxR/9MnHG/4wJATMrN
8Q5TzfmQUew6zOk2T8T7fSZl5RbPHLtkSbVz4hAj2Wt63xs/C8wW3B3xzIf5
Gl+j9mj+nkJmerzMCd9DVZJTyGv4p+r9uql/eHXYOmQNCxYv7jr19Fd/RecK
oT0qHP+1/TfWle8J6c8R8fs/7tLnL14Y9vjltXT9c8LkD6G1F051NRWqR2aZ
8xyV9t/060D0zAv9OSjWW8MmP0ffrjMZOYfTHvX1fHmOdS8Pkw2cU+E8v0Vy
PkOfsZEs7GJ5XbKCjzdmqa8p/Xm1an/GMjv0cFUvIvtYk+v5OVk151JGMXN6
6vL9BHrVXN3q6knKUf127UxEZTql/1s5nmRveuYsvz+o6QOgXhso8v2cIz+z
AvlrNvB9UGzfW+xcQWRj6EFZSkGWYZ6PMc5HsftEmK+nomcrypwTqXQWSJiC
/bx+jN366zvsrF3Rx2PqFsqcFfEVyzJK/H5Xyawaua78vCrTP6VYlnGOfuwl
s6xSWYau3bje/t01JMuQy27v5+B7vMtHdL+Mu3SW8VU9x+Rf5YxJIMv4sve+
vbLOcejrAwAzXaVnHkf9Nyz3u1KFGYWjX4cZ599dJqUXLVkyb1XzkgNWbjGy
qqnxpvG4bc6JTPzF+1q9Reqr7d/5neKvX69Q59YTudmT79L7g7Cz2pXkFGH9
E89yws8o2PMvJdO45JgVK062+3JqCd3z8+pyr+0H+27qmpKw+7bzh506fwh9
LarCmooT6vzZHFHOc5j+mFFrKub6vex15uA9TqlZKHF9IdmNnAfaaupbdH18
lNd+F+ksa6euh2h3ou1D9Ec7h6maHX12ROVC/rmKivoB6NklMqelWz+Gbj03
cCw5xdGyL7DOkcgeW84Tlct9opBcRc3psXLAjbpf6nj3iCicP2r2TX6/3Yl4
bXWp9B6t8/u09unHelmdzDOpLkdI6LP99oyRXxfrIaMdUfHvCxGVyDIq7kNh
OwSzXov+zuT9N/2LEfpb2MZc4+Gpl58z9telrq+JmmVU/jugr+LXquzPhckW
SvR3jdILdlaZxx6WZWw3n3+dZYy6j7AsY5Y/k/Vq873n/by5td7vmVGQZejZ
rJ9QWUYi8TWTZXgf+0N9zuRhlWUkEmn57xBZBgAUdeRYM4qItRdhDsW51ylD
ZogUZBbeZWVzw2+PO+648fjdHTFQv8cU9ub/puP/DvkC/dr8TmseY7G5lZXk
FGZff4nZo5Xonyi3a+Zf7gzrUWHOicjr0+o8sO7PqXt+jpp7ove0Z9bl+27K
7NHQmiE96/IqXc8g9y1ZZNj+vZKaCjN3dEeEHpk1ej+7TecaV8hzV+S6ivSI
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
kK/xLsxX1PAaruoFyHhZ5IXCn5N0GR9Epkbm1wk/DpofWBwF7+OU1nfSGkXf
5KyyjuJhyl59Ct4T2hcTegnV+6/gJtLX99Of/SF5UnwfHApzFMqf5104G/41
mAOqQzsHqIovbar5KHvuNdVzLSd9Tuu85kDcUMbDi3H8XupTiagGzvNse0LG
1yy89NpS3of/G8oaa4hjldw4ejkvWH3p6mfeuvnWRzdv3nCRfG3ZskXX8ri3
aTzL5la415Vfzg/mZsfL8ZDHBmV6LuqMM8fiOc7raKR3QFbFFZyZVWNbin5/
ktb87xYcCfiGjbQm00qrTr0MF9L2chkhtCaAejhUjaYzXXE+ZN9Eks90xbym
baarDeSiPg+9JgOTh/6AOE7wC5zxCj3KINBn9tB7hOMhvc5Ou08kQUaryXs9
TTX9Hg0n9Yu2LkR81m7Snz6fNDChju+IAebBlq/FXbO9TwJN+IZQGtpczgSN
d235BDurgf2PQ3AUhb3/IWoCXiPukKNY1iEH0lXvORC8/xyg8905R9FEFwQt
ZoB9K+LULlR1OIp6a9bjA5GLAS0DaQ7eqf0mHOdEXvfEGfxnaB7YmzLJ+6OW
ZY3wXOto8AnkowmPiK+A06A+FXzu0UXaMT0XdIyHtGYDb7X3MTdC/MO70u2+
Ab+HYwU/AY4j/dlr+tTrwb6Zeh+EHwXrKCjX43egr0BPDHJLW+hvXCjmVgPl
BXXICwMZl5HNsRvW8RYy7/7A/St4pp4W2D/H57r3RXtuKH3exd5kP0RfziPz
pcfxXu+nYr3y36EvJL1xWY06D2Pn/AULpi970WXfPOGkk3799DNOP3DppZde
L3kLB7iH8RViHNbzJOX/HFmuxxlo9Xn+bOYddbWlAxoDb0yGNTrm4lsTM/9Y
WGNbEsdQ/8BdybBmQK16B3HnbZ+XSZZhzhqGYe/JvWZeoec/oXpBzOcZ3aQr
0/XWgJmuOZBf2Tk0x9slP5fWZV5B53RSte+zkVigPc3M8+zOROW8L2RmyTnk
D9+kdsD+skfpukR4sBbwJ6H8Q54WwDWZfgf/JvKaf6Rmj/vJ8hLbchQNasYu
dAldah2K+uZ9/ZtLUaZjD9HPVbL9EBxFrsefx4NAHAX7PGAMn25xveVQcj7O
Uk3OR3GfUW2OomTfzq6xb23uBc05NeEoivoo4DelHNcB6V1fSt4XTxIH8Gni
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
liBLBPpEw3fsTow2Xc+TXX0i0CJg3pB5XZhxrnScYB5D6zFq8BjgR/A8p+c2
PEXRs7nK17OOOIhWmgzF8xnkpua55BdX8TdFKMgM2E7fX6sxl7JNTxccA79u
p+825NoKPEVXyr4W+lNz7dRz0bq/3ol0/qWP0/hH7JGchubl0jlagP51H4xh
PuqR6fps1V2mqw14l/4iaYnulPtEnMJdIuO169xTzpvFXP82uS/pPf3HVn/I
VxrOD7pYB+tM61CyFnNy222r7ue7ZdsHR9yWo8jp54mLLc+H8UdWc4q5bhCO
IvD5KNLwQO9Vm6MIsG+TLe6FwnxOD46iyOuhlKPwuO59fQeqdOW5dWDaDtdO
k64+kQKOAp6ZO7N1EoujSP//HaSjeAKZpUJH8e30fd8THMV30DOs33PocBS+
aNI/0V7r1o2PblcavKJr/PpA/HDtPp+aKOQygvTIdOSJTCjmtw+v++ywQdRb
PL1eeJ6lz6ef5nzs0uez46vv9U2W473EM4DDRxZR0dr4HL2Ga56dB+YtXrzz
pS976atLLi3De1CGqn7OGN1haUYGajjNlZMeAzW28tMzzKPet914Hz3XXqz8
sxIyTQZ7fuKzsZau6s3nkdFyZiL6ZxPj491mfJwgD4+7s2cSrSUF8puAT+qa
RPockhaR+vCSAJ/BGKBvgPtDE9HjQJ93SkfZoRrkiXmh9mwQ+a3YF8qMxfw/
ZMZKGTjTdd2gONMVa5QzmY010Tdeu1fQmCL3SWa8tspXLUNiZZ7Cn155XINd
9B13mY3Rce8rz/VvTLrhKMY75kDq58P4o4teZs66DnY+MDcLVOME2beW+uZC
XUwFx1/3OuCezNocRVEt5pG5Wuans9xV02B8tXLRde8jcxT0epQ4ise0JmLY
6yE5CmSP/jbrKJA7mr5+N/33j6X/9lBi1m+fjtmKTca39t5CVv2b+HlCV6GL
/E4AXEaX/Xhl989ky23z9k/qzO9j9LucCviMQf/qGueYELmMiAiJlenz68fW
OuUTuocDtbzpWSt6hs3Rveg96vlIx3NVwqOecNoJz3nBL73gXVzjk/9EWT89
6vlVeDYTr8D6jUHZATGPAT0GcwnKb0yER8ZZmssZemSsKzsmx2cbTYbx/9A5
sfApbDDuzKXx8R6Lj20zT8Y88Gx6vjGXsTcYP23museTjn8PP/OIo760A71C
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
qlGb+mKCsomCchSe3gZ1UDRPAXdba55i9zQkRs/aiqOg78S3N7dp785RuIbq
cBROL1r3sfLa2Lo6HAXtg+y5kf4mrPlhjmJFAR92FY0N98nzIXUUFkfxmnQM
ebtDR/EU/K0KOIo3RI4iIiIionPU5dJzXEY2Z7I1fNVY7FrHCNQf/bRH9OWc
4Vev95OMsxgb+7eS9SnkJZwr6xl4+Bf9PtVyqxJTy++n9R7o/l21lqklrTVx
5eYxBsi0QN0qPB9WveyFL1y6cdOmJ9Arwq9rrrnm4PPXrPnQqgsv+PyqCy74
3Kmnn36fcmsivHpKyF/0JpEt+pKCdekFej5p+JODJTmnjbQY5CWxvqzWxnZI
s8L9NFi3LBzDOPO1T7kqNE5W1TRHE1c1Rd/FZuXps4laHNcPe6XSOapTh9uZ
q1hLrJu5CuDa+0Wp38MzoKZPhw3t96LzU/heSb8vH17IE9BknJFt39wzXWky
gKXEOe2x1phP6ujzbBxD+pbdydADEbXdKvLl+ZnVH/JehxazrQdgcc3ZwoPU
y9ugHoLpQgPtWxsv9Ka9O2VeD6Uchcex+vYiZz03fM0WcRQ5rYTh+pcnxRzF
lYnFUfBn0LPhdemfj8FXwuIo4Jn5wQqO4jN4P+1DG21QREREREQYyOfgtM9z
MNCzGzx127WdiIjgSOcr/8zzfZ0ngoxMqrWwjlm2Jq55PtZ5m3VZcCHoVeg7
fn3on6jrOL39df+HUv/J8bt11sTnoJ6fu3Di4KoLV/8GcgMK6leTBTrUROxJ
3Ov1vj0lnC16P3ED0Fign3lEY9Gn3NJ+dc5pEy3G/mSoeygaj3CO1lI+p84c
UeVaAO3lQcd2UO+7yQ0pBThH1LPC3wJ+bF7+Fn3tsaJ5lgNaTzA+fknNfE3U
lZcnrOdolrmqIf1WiHd6OY6tybYEVpisTnPtm/tAawiC1P3gncALzoBPBmO5
Y939OvRZdfR5NhZprqrX+6mltfi1ABzFooB5GYzhuki+x6AxR+HULaBfpj5H
MbJm05ajyI7P32+jae9OWd+w6zpgTc+1HnO6cXj71OEo5FpVwrpb6h1ifaHF
UUxafSLTzFHAN9Pin/ZQH1eeoxjqKH5V6CikZ+a3wEtIjiL981ORo4iIiIg4
LFFbd+jQSk4bn4DGOs6IiFlBeq3/hcgQeaP8N6wPZ36E5jrfRT0aReuLC/W6
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
J+CbU7JQ+GyAS7heuXtulpPHguljMX6prj6LTItBHEBhvin3iAjdQqEWw/IC
PVDS0yIxie+cOSHqA6/iAsAlnULfAXuAuM5bEcCBrBM+qDeAR/N8L0N7uJIe
hK+/JpmrZmPpdUbfyUHivW6roS8pwxzi0+63tEuhM0WWEafwwExoMgp0Fk+o
Zue/Sb9nKVi3kOv1aMZRgCM6qeW+FXlRvtyTo3DrIWpwFGLf2evB1cNV53vw
zRop67kp4ii0vwl9hyN9Irh/OANGnE+71+NNfc4e7fUeRt8SfCiIo/hI+voy
6yjAUaSvP0nv+z/MOAqzTYy1kaOIiIiIiIiIiCjALPEWLiyitf89Yq59rXJr
CuaR9mAX6/oXLV16k8uXk70HuG7Vvddm/t5z/N5G+r0ir0XoO1aRloG5h5F1
ePAs9JmaK8BcXI1yDyM9JcrhiYB9TX9nu+ASoHGwayHoAy6gbBToA+4oqHPG
TA2o1x6hOd5OOhYXMi1G3yM7VeSyglvYR7xSWc02IB9K9vzY4lmb5c4bcUTH
erzPfKj0SzW+GqjH6uoTdOYqc2MlmTVeIB5jnVwPDsRjsHZpq/RzaVqfl2BU
k2G8JMDttNJkmBp6tDdE+XEWrr6BvSE4ioa6hap90z0NATgKX9/Nuj0bDN1H
UYOjyB0r6e2KOIqcj2divC5GOAqMsRW+IDl/k8R4q+c4CluDgXta8+NCI6PH
XOIoEuOzNMJRQEeRvt4DjkL2ekgdRXrsv4NeENLenqXq+atGRERERERERBzx
OIR4CxvotzrBrFtqf4VXkocn6mG7zhx75i8sP1/7crKnhuEnTlbW3B29zTof
s5flG9xD88hcfeWZGcHr8HuJV9hBmhFZv2i9APQkwqcCdYG9tqZ7SrJjNevk
dt6s7Lvgmn2E18ExYn+Jm5gmn1RXbb5ErPsfKNNiDER2alLhiyG0GFO+Wgzt
+cE9NUY/UrTPNpan298genFeXHQMDph+EOahTM869ON1/RWXsjfteMvMVUB/
f2ktyhya6ZlqzotI0HW9nq8z2jayUYN5ZBC0JmMwzBnWvWF1tC6urFPkJRTs
a+088wpoTgBjRZccRY19G+k/xX55cxSWHoLqZ2+Owun14M6rqHOsvlkjzp4b
ZXrzRjgK1kqgt4X6Y0b6RMiPYp3kPSRHQc+HNxNHgT8fYY6C/Cg+SjoK7vX4
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
hL9+beLT+N00q0KdJJbBMVPtaY2kXgxpEWMu+0CNx+IH5n0oez+kl6RzIvos
0nekbZRZp80axT0xM9NmPd7ntw+aj+Jj5qN4VJqEv+1JZVH0aRTFMUWjAAAA
AAA4xUG3AOhE5tfl5yr3osyk8Gtyv95+h/kyDpqGcTh2p8pjEb0H4TLPr9Hz
zQMhbWKLdAz5IhK9Yot/r3NaZkry0G1iGRuaB3HSPXrzIOP+9a5KXu/aNDdD
P/vX/UJNlsWn/WPPr8my2CofhfZd/o+yW1a5omFepehxSWY96jSKj6caRZz1
8Pv3dfkq/PbhZPZl9KR/swAAAAAAMNSgWwDMm9ODd6KX53nEXz5gfRcz5s24
23Ik3pp4Nwodw//a+tu2Rx1EnajKaTC9Ip3vWNsyU7LC5kGm7TV+399WzkZZ
bsbO8Lwsu6/aceq3/5NmEbInnNsmH4XmTho1imIrfRTyoJhG8aFEo9CsxzHl
T8hHEfMowuyHZkJCJioaBQAAAAAAdAPdAuD4oeyHMD+hHtYiY/Ld6sLQz+bP
OBqyM7LsdtMrDkZdI/R0hK6PIgtUfSL+dX7TZkBCXufIyMjl/m3WNM2UyBOi
rEybGdlv3aPLpF34/fifylzIf8XO0TqNwrpkqxrFg0kexSdMo3jUfBNPJj6K
LxV+C3eT9bkuW8jvBQAAAAAAFi/oFgAnjrOde6ZfsG+yXE55KB7Qut9fvlP+
DL++vz/6M/z2Nr/dZVkYk+oXKXMxi/7WzSMjI79T9pc4t1f9pnqbupkSvbce
79/jq7OyLFz2vV43SemjOGIahTwid8o/EWY4Co0i+Cj85d9YHsXX/OO+FTUK
5WWgUQAAAAAAwIkA3QLgpLNB8x/mZ7hbGZR+3f+QsjLUrzGSZe8yD8bb9TeZ
5GXsCvMbhRdCuZ8vlyfDfBd6zHZ//6/FmRKbU/leVbPwj/07/5w/TTSKu2zG
I+ZRPBzzKDTr4bd/slmPf/Y/f9E0ihuVh+Eq+Z8AAAAAAADHG3QLgAVn1LI2
d2iGxPwNn9R8if38oLSFoDNIb7B+1rKX1bIz1MEaszHqsiz89f9VloU0Epv1
eJ9pFMFHkWoU8lEovzP0juT5TjQKAAAAAABYKNAtAIaS9eoFCfMiWXaf3z6l
7lCb25A/46hmTTR3opkO5WSYf+MO8278tKJZPD2a54+NZtlnpVP4619JfRSm
Ubzfv8aEMjL8++cLfQAAAAAAAABEqlv4dcs/SrtYjNtpK844uulFl31uofeD
je0EbZoneVC6g/Iq/PVv6W/XX37bb9+R9hC2LPv+rCyLPP+Jf8w3o0bhn//5
4LUo5krQKAAAAAAAYKhJdYvFvC1fvvznv37hBQu+H2xsw7SNuew/5KOwjtNf
9X/y2UL/zwEAAAAAAJgL8ocv9NrqeGzoFmxs/duoyw45dAoAAAAAAFjkjDr3
PHnPl+X544t5e+bp41+78PkXfX+h94ONbSG30Tz/wZjLnlInyUL/bwEAAAAA
AIAe5HICAAAAAAAAwLBiusUntr5h61vTbWJi4lkLvW8AAAAAAAAAcGqD3wIA
AAAAAAAAhhV0CwAAAAAAAAAYVtAtAAAAAAAAAGBYQbcAAAAAAAAAgGEF3QIA
AAAAAAAAhhV0CwAAAAAAAAAYVtAtAAAAAAAAAGBYQbcAAAAAAAAAgGEF3QIA
AAAAAAAAhhV0CwAAAAAAAAAYVtAtAAAAAAAAAGBYQbcAAAAAAAAAgGEF3QIA
AAAAAAAAhhXTLR6SdtG4bXnjCxd6PwEAAAAAAADg1AO/BQAAAAAAAAAMK+gW
AAAAAAAAw8cvAEvHAls=
        "], {{0, 226.08}, {513.6, 0}}, {0, 255}, 
        ColorFunction -> RGBColor, ImageResolution -> 150], 
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
       Selectable -> False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
      Automatic, ImageSizeRaw -> {513.6, 226.08}, 
      PlotRange -> {{0, 513.6}, {0, 226.08}}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{
  3.8258221394577513`*^9},ExpressionUUID->"c6165306-93a8-4c53-b938-\
5a7d9de92f0d"],

Cell[BoxData[{
 RowBox[{"a", ":", 
  RowBox[{"input", " ", "gaussian", " ", "width"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["hm", "1"], ":", 
  RowBox[{
  "marginal", " ", "ray", " ", "in", " ", "object", " ", 
   "space"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["hm", "2"], ":", 
  RowBox[{
  "marginal", " ", "ray", " ", "in", " ", "image", " ", 
   "space"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["hb", "2"], ":", 
  RowBox[{
  "inside", " ", "marginal", " ", "ray", " ", "in", " ", "image", " ", 
   "space"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Kappa]", ":", 
  RowBox[{"axicon", " ", "ray", " ", "angle"}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.825727862277256*^9, 3.825727956058918*^9}, {
  3.825728111432921*^9, 3.825728166276469*^9}, {3.825728201465061*^9, 
  3.8257282313390837`*^9}},ExpressionUUID->"c9815ac4-2378-4b4e-94c3-\
e66deda972f2"],

Cell["\<\
From three- dimensional geometrical intensity conservation, for small area ds,\
\>", "Text",
 CellChangeTimes->{{3.8258222989491158`*^9, 
  3.82582232657165*^9}},ExpressionUUID->"197a33d0-b482-4d63-8d54-\
e79ba16fb57a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ii", "[", "h", "]"}], "ds"}], "\[Equal]", 
  RowBox[{
   RowBox[{"Io", "[", 
    RowBox[{
     SubscriptBox["h", "2"], "[", "h", "]"}], "]"}], 
   RowBox[{
    RowBox[{
     SubscriptBox["h", "2"], "'"}], "[", "h", "]"}], 
   "ds"}]}]], "DisplayFormula",
 CellChangeTimes->{{3.8258091608685093`*^9, 3.8258092217410383`*^9}, {
  3.825809393430428*^9, 3.825809394492285*^9}, {3.825809983056959*^9, 
  3.825809985370658*^9}, {3.825822254228424*^9, 
  3.825822258102785*^9}},ExpressionUUID->"3ccc7fca-8ac3-46a9-b1ba-\
5ec371fbfadf"],

Cell["\<\
where Ii(h) and Io(h2(h)) are intensities at height h respectively.
It leads a differential equation,\
\>", "Text",
 CellChangeTimes->{{3.826587943103342*^9, 
  3.826588017913239*^9}},ExpressionUUID->"764d909b-2233-41e3-88cd-\
87eb634f2132"],

Cell[BoxData[
 RowBox[{"besselsol", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"h2", "'"}], "[", "h", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"h", "/", "a"}], ")"}], "^", "2"}]}], ")"}]}], 
       RowBox[{"h", "/", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[CapitalUpsilon]", "0"], "*", 
          RowBox[{"h2", "[", "h", "]"}]}], ")"}]}]}]}], ",", 
     RowBox[{"h2", "[", "h", "]"}], ",", "h"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.825822664141006*^9, 3.825822667231333*^9}, 
   3.825823425986226*^9, 3.826589253239429*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"86fed51f-8925-42c4-81c4-b4cd9d25b075"],

Cell["\<\
From total intensity conservation,the constant \[CapitalUpsilon]0 can be \
determined,\
\>", "Text",
 CellChangeTimes->{{3.82582255967171*^9, 3.825822580543292*^9}, {
  3.826594976572194*^9, 
  3.826594979978629*^9}},ExpressionUUID->"d88a3b47-8317-4526-bcca-\
e68f1518953b"],

Cell[BoxData[
 RowBox[{"upsilonsolb", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "/", "a"}], ")"}], "^", "2"}]}], ")"}]}], "h"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "0", ",", 
          SubscriptBox["hm", "1"]}], "}"}]}], "]"}], "\[Equal]", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalUpsilon]", "0"], "h"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", 
          SubscriptBox["hb", "2"], ",", 
          SubscriptBox["hm", "2"]}], "}"}]}], "]"}]}], ",", 
     SubscriptBox["\[CapitalUpsilon]", "0"]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.825822596980299*^9, 3.825822598325225*^9}, {
   3.825823263860694*^9, 3.825823266141004*^9}, {3.825823322673511*^9, 
   3.8258233268584013`*^9}, {3.826589302115452*^9, 3.826589308959613*^9}, 
   3.826589364273336*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"38bdd44e-bce7-4a66-a898-7d295a946a41"],

Cell["\<\
And fix the constant of integration from the inside most ray,\
\>", "Text",
 CellChangeTimes->{{3.82582255967171*^9, 3.825822580543292*^9}, {
  3.826594976572194*^9, 
  3.8265950614473352`*^9}},ExpressionUUID->"8346b97b-4bf5-493a-a522-\
3a87b2bc60d6"],

Cell[BoxData[
 RowBox[{"icsol", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"h2", "[", "h", "]"}], "==", 
          SubscriptBox["hb", "2"]}], "/.", "bHsol"}], "/.", 
        RowBox[{"h", "\[Rule]", "0"}]}], ",", 
       RowBox[{"C", "[", "1", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<", 
        SubscriptBox["hm", "1"]}], ",", 
       RowBox[{"0", "<", 
        SubscriptBox["hb", "2"], "<", 
        SubscriptBox["hm", "2"]}], ",", 
       RowBox[{"a", ">", "0"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8265893513991737`*^9, 3.826589355680043*^9}, {
  3.826589437866365*^9, 3.826589490273284*^9}, {3.8265895209012527`*^9, 
  3.826589528774527*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"3c42e674-b779-4328-b997-46d291e958cf"],

Cell["Take positive solution,", "Text",
 CellChangeTimes->{{3.825822734702218*^9, 
  3.8258227424563713`*^9}},ExpressionUUID->"6771933d-fc47-4ca5-92d1-\
c373a5af6659"],

Cell[BoxData[
 RowBox[{"bHsol", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"besselsol", "/.", "upsilonsolb"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "/.", "icsol"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "<", 
       SubscriptBox["hm", "1"]}], ",", 
      RowBox[{"0", "<", 
       SubscriptBox["hb", "2"], "<", 
       SubscriptBox["hm", "2"]}], ",", 
      RowBox[{"a", ">", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.825822771138978*^9, 3.8258227719208393`*^9}, {
  3.8258233393915997`*^9, 3.825823343515417*^9}, {3.8258234708618717`*^9, 
  3.8258234970798388`*^9}, {3.826589395836947*^9, 3.8265894106170187`*^9}, {
  3.82659433413101*^9, 3.8265943402490253`*^9}, {3.826594442561845*^9, 
  3.826594445062161*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"b49990b2-b949-4e9a-af31-4392c695acb3"],

Cell["Check the solution to lead marginal relation,", "Text",
 CellChangeTimes->{{3.825823098735037*^9, 3.82582312335822*^9}, {
  3.8258233842949*^9, 
  3.8258233852346563`*^9}},ExpressionUUID->"efee9036-e978-4a59-97ed-\
3218552e0d11"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"h2", "[", "h", "]"}], "/.", "bHsol"}], "/.", 
    RowBox[{"h", "->", 
     SubscriptBox["hm", "1"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "<", 
      SubscriptBox["hm", "1"]}], ",", 
     RowBox[{"0", "<", 
      SubscriptBox["hb", "2"], "<", 
      SubscriptBox["hm", "2"]}], ",", 
     RowBox[{"a", ">", "0"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8265895073370047`*^9, 3.826589507618856*^9}, {
   3.826589558681591*^9, 3.8265895692449303`*^9}, 3.8265945035306883`*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"26a6528f-7277-4709-9462-e490fc35e135"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HSol", "[", "h_", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"h2", "[", "h", "]"}], "/.", "bHsol"}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "<", 
       SubscriptBox["hm", "1"]}], ",", 
      RowBox[{"0", "<", 
       SubscriptBox["hb", "2"], "<", 
       SubscriptBox["hm", "2"]}], ",", 
      RowBox[{"a", ">", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.825824183273868*^9, 3.825824196115239*^9}, {
   3.826589535774596*^9, 3.82658957864861*^9}, 3.826595113581695*^9, 
   3.826595194853794*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"fbc41a45-5772-4d02-9a6f-bc1ffbe20a7b"],

Cell["Angle in the image space \[Omega]1 be set to a constant \[Kappa].", \
"Text",
 CellChangeTimes->{{3.825823098735037*^9, 3.82582312335822*^9}, {
  3.8258233842949*^9, 3.8258233852346563`*^9}, {3.82659474006079*^9, 
  3.826594782249173*^9}},ExpressionUUID->"eefbf056-7bb2-40d0-8e70-\
f31005254eea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"baseConditions", "[", "besselBeam", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     
     RowBox[{
      RowBox[{
       SubscriptBox["h", "1"], "[", "t", "]"}], "\[Rule]", "t"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", "\[Kappa]"}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["h", "2"], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"HSol", "[", "t", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseConditionDifferentials", "[", "besselBeam", "]"}], "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
     RowBox[{"baseConditions", "[", "besselBeam", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.803791701728732*^9, 3.803791729087987*^9}, {
   3.803792607618672*^9, 3.803792686516983*^9}, {3.8037927898834953`*^9, 
   3.803792818830844*^9}, {3.803793025710849*^9, 3.803793030074594*^9}, {
   3.803793066986649*^9, 3.803793067120131*^9}, {3.8037938668975058`*^9, 
   3.803793873535576*^9}, {3.803793939371109*^9, 3.8037939697564497`*^9}, 
   3.803794285539584*^9, {3.803852782163343*^9, 3.8038528362770653`*^9}, {
   3.803852973395225*^9, 3.803852994206606*^9}, {3.803876703603003*^9, 
   3.8038767054704323`*^9}, {3.8038767539487467`*^9, 3.8038767583347893`*^9}, 
   3.8038768034494133`*^9, {3.803876866111964*^9, 3.803876912717761*^9}, {
   3.8038769822932568`*^9, 3.80387698722719*^9}, {3.803877044021456*^9, 
   3.803877044434607*^9}, {3.803877082231152*^9, 3.803877085459462*^9}, {
   3.803877133236528*^9, 3.803877160249259*^9}, {3.80387720464226*^9, 
   3.803877206688478*^9}, 3.803877298996299*^9, {3.8042134722297583`*^9, 
   3.8042134747709217`*^9}, 3.804213600943034*^9, {3.804213631137658*^9, 
   3.804213641341807*^9}, {3.804213676699526*^9, 3.8042137088972807`*^9}, {
   3.804217590442161*^9, 3.804217590442748*^9}, {3.804218203124496*^9, 
   3.8042182031250134`*^9}, {3.8042209535264053`*^9, 3.804220974991002*^9}, {
   3.825727780622031*^9, 3.825727803528821*^9}, {3.825728024275344*^9, 
   3.825728035650303*^9}, {3.8257281419638*^9, 3.825728144369628*^9}, {
   3.825824206492697*^9, 3.8258242098972683`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"7c1a8aee-c183-4289-8c87-feada454a556"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"baseConditions", "[", "besselBeam", "]"}], ",", 
     RowBox[{"baseConditionDifferentials", "[", "besselBeam", "]"}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8037917761036654`*^9, 3.803791785259919*^9}, {
   3.803792637304854*^9, 3.803792637305315*^9}, {3.804213643051536*^9, 
   3.8042136444127502`*^9}, 3.804217590444563*^9, 3.804218203125681*^9, {
   3.8042209807970667`*^9, 3.804220991687435*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"6646de3c-de3b-47c4-9159-e1b270018129"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wweq1011", "[", "besselBeam", "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"wweq1011", "[", "original", "]"}], "//.", 
      "vectorRDefinition"}], "/.", 
     RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "//.", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"baseConditions", "[", "besselBeam", "]"}], ",", 
      RowBox[{"baseConditionDifferentials", "[", "besselBeam", "]"}]}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.803791816234129*^9, 3.8037918267174683`*^9}, 
   3.803792027512661*^9, {3.803792637306686*^9, 3.80379263730764*^9}, {
   3.804213649138317*^9, 3.804213653750847*^9}, 3.8042175904463873`*^9, {
   3.8042182031264067`*^9, 3.8042182031268673`*^9}, 3.804220999212943*^9},
 CellLabel->
  "In[127]:=",ExpressionUUID->"6df81c22-6502-4b29-a9ae-de7ae1346226"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numvals", "[", "besselBeam", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "1.5168"}], ",", 
     RowBox[{"d", "\[Rule]", "6"}], ",", 
     RowBox[{"a", "\[Rule]", "0.7"}], ",", 
     RowBox[{
      SubscriptBox["hm", "1"], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["hm", "2"], "\[Rule]", "2"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", 
      RowBox[{"Pi", "/", "32"}]}], ",", 
     RowBox[{
      SubscriptBox["hb", "2"], "\[Rule]", "0.5"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8012630530975037`*^9, 3.801263094508999*^9}, {
   3.801263172687652*^9, 3.801263209644691*^9}, {3.801263295607588*^9, 
   3.801263318984898*^9}, {3.801263641426814*^9, 3.8012638352317553`*^9}, {
   3.801283167951693*^9, 3.801283173011119*^9}, 3.803263115659727*^9, {
   3.803792073817575*^9, 3.8037921339171124`*^9}, {3.803792194104774*^9, 
   3.803792258581438*^9}, 3.8037922942100477`*^9, {3.8037923249229794`*^9, 
   3.803792335251822*^9}, {3.803792391929295*^9, 3.803792392356008*^9}, 
   3.803792637309124*^9, {3.80379304733363*^9, 3.803793060540176*^9}, {
   3.8037932172558613`*^9, 3.803793261806061*^9}, {3.803793453768919*^9, 
   3.803793477370899*^9}, {3.803793690370706*^9, 3.8037937284635363`*^9}, {
   3.803793990740267*^9, 3.8037940137805634`*^9}, 3.8037940798193407`*^9, {
   3.8037942964071417`*^9, 3.803794362310667*^9}, {3.803853019947257*^9, 
   3.803853110802706*^9}, {3.803855691444605*^9, 3.803855691972438*^9}, 
   3.803855799286983*^9, {3.803855842330738*^9, 3.803855842779358*^9}, {
   3.80385593083456*^9, 3.803855931462969*^9}, {3.803855972594254*^9, 
   3.803855975967812*^9}, {3.803856091970339*^9, 3.8038561110838757`*^9}, {
   3.803856159056375*^9, 3.803856159380837*^9}, {3.803856202999275*^9, 
   3.8038562102075653`*^9}, 3.803857202441389*^9, 3.803857305931226*^9, {
   3.8038732947976847`*^9, 3.8038733101745863`*^9}, {3.803873373436207*^9, 
   3.803873373714878*^9}, {3.803873464359016*^9, 3.803873468171276*^9}, {
   3.8038735076828747`*^9, 3.803873513822783*^9}, {3.8038763612814827`*^9, 
   3.803876399508752*^9}, {3.8038764824456577`*^9, 3.8038764907581863`*^9}, 
   3.803876817567658*^9, {3.803876848618791*^9, 3.803876849223301*^9}, {
   3.803876934477187*^9, 3.803876952048832*^9}, {3.803877249574541*^9, 
   3.8038772502935534`*^9}, 3.8038773089185963`*^9, 3.804213656698398*^9, {
   3.8042137215185013`*^9, 3.804213729899665*^9}, {3.804214058033038*^9, 
   3.80421405806756*^9}, {3.804214116096753*^9, 3.804214132442384*^9}, {
   3.825728245588778*^9, 3.8257282577124147`*^9}, 3.8265941278747253`*^9, {
   3.826595249387805*^9, 3.826595249604151*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"56b9892f-3635-430f-b0f9-0fb33a839578"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutions", "[", "besselBeam", "]"}], "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"wweq1011", "[", "besselBeam", "]"}], ",", 
       "boundaryConditions"}], "]"}], "/.", 
     RowBox[{"numvals", "[", "besselBeam", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.801263002654477*^9, 3.8012630187842503`*^9}, {
   3.80126310094422*^9, 3.801263124501245*^9}, {3.80126338030837*^9, 
   3.801263381174972*^9}, 3.801282408170619*^9, {3.8012831788283443`*^9, 
   3.801283179099044*^9}, {3.801283399568046*^9, 3.801283400308728*^9}, 
   3.803262916602566*^9, 3.803263044132358*^9, {3.803263115661213*^9, 
   3.803263115663175*^9}, {3.803792091952169*^9, 3.803792120482757*^9}, {
   3.803792637310515*^9, 3.803792637311554*^9}, {3.8042136603311043`*^9, 
   3.804213663504468*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"6b7a4f8d-f5ae-4f65-9417-9f2073bbbb69"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
            RowBox[{
             SubscriptBox["y", "1"], "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["x", "2"], "[", "t", "]"}], "+", "d"}], ",", 
            RowBox[{
             SubscriptBox["y", "2"], "[", "t", "]"}]}], "}"}]}], "}"}], "/.", 
        
        RowBox[{"yDependencies", "[", "baseExpression", "]"}]}], "/.", 
       RowBox[{"baseConditions", "[", "besselBeam", "]"}]}], "/.", 
      RowBox[{"numvals", "[", "besselBeam", "]"}]}], "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"solutions", "[", "besselBeam", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.801263129163539*^9, 3.801263160896487*^9}, {
   3.801263331358416*^9, 3.801263386372561*^9}, {3.801263542280878*^9, 
   3.801263548241811*^9}, {3.8012665070391493`*^9, 3.8012665158493557`*^9}, 
   3.8012824512893333`*^9, {3.8012831879523497`*^9, 3.801283203016203*^9}, {
   3.801283412642311*^9, 3.801283416668055*^9}, {3.803262756009536*^9, 
   3.803262767767289*^9}, {3.80326301786617*^9, 3.80326304355344*^9}, {
   3.803263115665002*^9, 3.8032631156659613`*^9}, {3.803351298570595*^9, 
   3.803351298571262*^9}, {3.8037921499249487`*^9, 3.803792180143385*^9}, {
   3.803792637313439*^9, 3.803792637314748*^9}, {3.803792867971105*^9, 
   3.80379295118848*^9}, {3.80379298623287*^9, 3.803793006563003*^9}, {
   3.804213668747563*^9, 3.804213672673294*^9}, 3.804217590448813*^9, {
   3.804218203128954*^9, 3.804218203129444*^9}, {3.804221010407082*^9, 
   3.804221016876545*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"b87a828f-9044-4fdc-80b5-ca4250f34219"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{871, 911},
WindowMargins->{{Automatic, 340}, {Automatic, 4}},
TaggingRules->{
 ScrollPosition -> {0., 24.}, "NewCellStyle" -> "Text", "ToolsOpen" -> True, 
  "StatusMessage" -> "", "SubmissionReviewData" -> {"Review" -> False}},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) \
(2021\:5e7412\:67082\:65e5)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"438a3767-f0ee-4f30-9d3f-edb8aa52cce3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 290, 6, 159, "Title",ExpressionUUID->"100b157e-2121-4a71-9512-4e6a3aebd8e3"],
Cell[873, 30, 379, 9, 94, "Author",ExpressionUUID->"23ebdb47-8f8b-4a16-885e-cfeb9a1da06d"],
Cell[CellGroupData[{
Cell[1277, 43, 206, 4, 69, "Chapter",ExpressionUUID->"fdc07bea-1d93-406a-a43e-50f3ee1849df"],
Cell[1486, 49, 1028, 19, 241, "Text",ExpressionUUID->"53269677-5849-43a7-ab24-e014784f5935"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2551, 73, 156, 3, 69, "Chapter",ExpressionUUID->"1abd5251-7232-40ab-8344-773d55a1a804"],
Cell[2710, 78, 544, 10, 80, "Text",ExpressionUUID->"1f2736e8-5923-456f-9f87-82199185a64f"],
Cell[3257, 90, 555, 14, 41, "Input",ExpressionUUID->"f2f63c81-b461-486b-b3e1-9bd21733916a"],
Cell[3815, 106, 150, 3, 34, "Text",ExpressionUUID->"e00b74c5-dda6-448c-8c99-e9702cc8e977"],
Cell[3968, 111, 274, 6, 33, "Text",ExpressionUUID->"a76c8c44-8574-4de2-a129-4531b10cf819"],
Cell[4245, 119, 148, 3, 34, "Text",ExpressionUUID->"fe7660ab-3374-49ad-beb4-cfb855dcfa94"],
Cell[4396, 124, 448, 8, 57, "Text",ExpressionUUID->"0a832971-77dc-4f56-bb6a-d8e4922a0f3c"],
Cell[4847, 134, 458, 9, 34, "Text",ExpressionUUID->"33c2c2a1-bfcd-4ca4-bed9-25337d9623db"],
Cell[5308, 145, 449, 7, 41, "Input",ExpressionUUID->"27a6f8fd-7bbd-40df-9afe-73794735c52e"],
Cell[5760, 154, 348, 6, 34, "Text",ExpressionUUID->"b6f9a14e-429a-4448-b01d-ad77e4bea4ef"],
Cell[6111, 162, 423, 6, 41, "Input",ExpressionUUID->"17a7b5e6-f8f0-46ca-8abc-7fada890d719"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6571, 173, 233, 4, 69, "Chapter",ExpressionUUID->"cba5e9bd-930c-49bd-96f9-bf10d391fc73"],
Cell[CellGroupData[{
Cell[6829, 181, 575, 9, 34, "Subsection",ExpressionUUID->"39e83f7b-ad79-49ea-8583-c8f7ad216744"],
Cell[7407, 192, 76396, 1260, 353, "Input",ExpressionUUID->"57aabc98-5ade-45a7-b02b-d9ac9f280f01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83840, 1457, 233, 4, 34, "Subsection",ExpressionUUID->"834ae7c3-5d7b-4087-9cb3-399b9bcc7011"],
Cell[84076, 1463, 534, 13, 41, "Input",ExpressionUUID->"72d5d0ee-075b-411c-897b-ae6cefcdf005"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84647, 1481, 221, 4, 34, "Subsection",ExpressionUUID->"0c1c03ba-cdca-4543-bc8f-527e9799e1c5"],
Cell[84871, 1487, 1119, 30, 63, "Input",ExpressionUUID->"236ceea6-502d-4c94-8afc-8d0ccd47d1f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86027, 1522, 296, 6, 61, "Subsection",ExpressionUUID->"3488ba04-145b-49e9-a004-a760129150d5"],
Cell[86326, 1530, 785, 22, 63, "Input",ExpressionUUID->"4a58cec3-8466-4f47-850d-fcb5034ad39f"],
Cell[87114, 1554, 468, 9, 34, "Text",ExpressionUUID->"d951b1df-b6b5-428c-9688-6644f1b9e1d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87619, 1568, 381, 6, 34, "Subsection",ExpressionUUID->"4223025e-ad82-4886-bcda-5c456f322151"],
Cell[88003, 1576, 36094, 597, 206, "Input",ExpressionUUID->"da8613de-c158-4efb-a242-d0535f1c4a19"],
Cell[124100, 2175, 531, 10, 34, "Text",ExpressionUUID->"fc2646f3-5017-4f5d-97e1-cdcc3880b1f2"],
Cell[124634, 2187, 2494, 82, 63, "Input",ExpressionUUID->"eb54b4f2-949c-497d-9b23-b695a28a26dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127165, 2274, 324, 5, 34, "Subsection",ExpressionUUID->"0d368ff8-b7c2-4e78-a416-355491004adc"],
Cell[127492, 2281, 1186, 34, 63, "Input",ExpressionUUID->"129e1efc-eea9-4f7f-9d09-9f8065318338"],
Cell[CellGroupData[{
Cell[128703, 2319, 174, 3, 33, "Subsubsection",ExpressionUUID->"49033d0e-5ae0-4204-a1d8-efd800eae8d7"],
Cell[128880, 2324, 636, 15, 41, "Input",ExpressionUUID->"0bc54e9e-7e9e-4243-a6c1-cf5970eb75d5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129565, 2345, 239, 4, 34, "Subsection",ExpressionUUID->"dff9b391-2338-443d-bee2-f8a76026b80b"],
Cell[129807, 2351, 1628, 48, 67, "Input",ExpressionUUID->"ea547360-bc31-4c55-9f3d-39ce765fd61f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131472, 2404, 362, 7, 61, "Subsection",ExpressionUUID->"499e536b-99b1-42cb-aa1f-74b146ff82b4"],
Cell[131837, 2413, 1827, 49, 147, "Input",ExpressionUUID->"b3958a08-dfb1-40bd-be79-e1c16081cd6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133701, 2467, 319, 6, 34, "Subsection",ExpressionUUID->"e4d96133-ef0d-49b7-a2a9-75e37729c36b"],
Cell[CellGroupData[{
Cell[134045, 2477, 282, 6, 33, "Subsubsection",ExpressionUUID->"90feb9b9-97ec-4d8c-b981-92767d395505"],
Cell[134330, 2485, 786, 18, 84, "Input",ExpressionUUID->"757f723c-ae28-4da4-afa2-7a1bc3ab861c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135153, 2508, 222, 5, 33, "Subsubsection",ExpressionUUID->"461dabc4-8cb3-4548-bf0b-baedf551043e"],
Cell[135378, 2515, 1315, 30, 44, "Input",ExpressionUUID->"01ee5c8f-2f9b-4f94-a4b6-1dc79f16ba36"],
Cell[136696, 2547, 776, 12, 41, "Input",ExpressionUUID->"95237ae1-405b-4e9a-b0ee-a0086ae92fcd"],
Cell[137475, 2561, 132, 3, 41, "Input",ExpressionUUID->"f782c4a9-9bdf-4e4e-a859-d3ab3e6126e8"],
Cell[137610, 2566, 312, 6, 41, "Input",ExpressionUUID->"343980a7-b3a4-47be-bfac-6e5f3c60e5f9"],
Cell[137925, 2574, 226, 4, 34, "Text",ExpressionUUID->"4f38cf6a-bd87-4751-a2ae-508d63ac3159"],
Cell[138154, 2580, 450, 13, 41, "Input",ExpressionUUID->"b3d30928-800d-4025-a7b7-601d40e0d2ca"],
Cell[138607, 2595, 169, 3, 34, "Text",ExpressionUUID->"5f4a92a5-382e-4cba-a721-4df5da3b45ba"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138849, 2606, 248, 4, 159, "Title",ExpressionUUID->"e30a5911-e687-412d-bee6-b37f095f6b1e"],
Cell[139100, 2612, 167, 3, 33, "Subtitle",ExpressionUUID->"6b5557f3-8f9e-4756-a5fe-ada3315de9e3"],
Cell[139270, 2617, 493, 14, 41, "Input",ExpressionUUID->"acf07e2a-32fb-4bd2-80a6-b89468e7373e"],
Cell[CellGroupData[{
Cell[139788, 2635, 237, 4, 33, "Subtitle",ExpressionUUID->"72dfc994-23a8-45fe-ae71-6fa31b1ad7c7"],
Cell[140028, 2641, 628, 16, 41, "Input",ExpressionUUID->"b62569f8-a1d3-438f-9a68-570f3b056da7"],
Cell[140659, 2659, 1001, 28, 63, "Input",ExpressionUUID->"812f0df9-6699-498c-8fe8-ba5d0018fe6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141697, 2692, 245, 4, 69, "Chapter",ExpressionUUID->"cb0ce1fb-f875-4678-8691-ff6ba18d82e5"],
Cell[141945, 2698, 223, 4, 34, "Text",ExpressionUUID->"0521dfe2-428c-4b77-9124-4a472c231bb8"],
Cell[142171, 2704, 18156, 303, 165, "Input",ExpressionUUID->"1e7bd84c-1442-42fa-aa6f-d0b17c01d34c"],
Cell[160330, 3009, 567, 12, 50, "DisplayFormula",ExpressionUUID->"8e4be628-22c8-41cc-9808-3894f50033f0"],
Cell[160900, 3023, 1775, 44, 63, "Input",ExpressionUUID->"561a91af-1411-44a5-9b94-1e8940450f3c"],
Cell[162678, 3069, 594, 13, 84, "Input",ExpressionUUID->"fb69c6d5-0812-4197-a75c-d1ace8cd6dab"],
Cell[163275, 3084, 391, 8, 34, "Text",ExpressionUUID->"7ef561b1-b931-4bed-bbfc-2f70a61a53e6"],
Cell[163669, 3094, 835, 20, 105, "Input",ExpressionUUID->"aa5ea190-7122-48ac-bd68-d12e05c6391a"],
Cell[CellGroupData[{
Cell[164529, 3118, 185, 3, 34, "Subsection",ExpressionUUID->"1d205220-8475-4dd1-8a87-2d70b5fbfc8f"],
Cell[164717, 3123, 475, 12, 63, "Input",ExpressionUUID->"58af5202-70c8-4dfe-9dad-78e79b1217f5"],
Cell[165195, 3137, 694, 19, 84, "Input",ExpressionUUID->"9ab582c5-7306-439f-8f50-e789bfbaa9bd"],
Cell[165892, 3158, 1458, 37, 126, "Input",ExpressionUUID->"17e8b1cb-ac22-4dbf-ad22-45b97819b698"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167399, 3201, 241, 4, 69, "Chapter",ExpressionUUID->"a7a46cdc-e858-423b-936e-674629567d2c"],
Cell[167643, 3207, 237, 4, 34, "Text",ExpressionUUID->"999bddd7-d7d7-439a-b5a2-352229b7c2d6"],
Cell[167883, 3213, 12285, 207, 147, "Input",ExpressionUUID->"4d49aff7-967d-430d-b391-d441f8d89624"],
Cell[180171, 3422, 919, 22, 94, "DisplayFormula",ExpressionUUID->"04b61733-3a18-4305-bb0f-34e1aabfc4e1"],
Cell[181093, 3446, 2237, 58, 126, "Input",ExpressionUUID->"74744478-dc43-4835-bdca-b801e0f6ce0d"],
Cell[183333, 3506, 1965, 54, 84, "Input",ExpressionUUID->"369e8eba-7401-453b-a312-5e51d7f06470"],
Cell[185301, 3562, 796, 18, 105, "Input",ExpressionUUID->"33bca472-8490-4ae1-be01-219b20d5b405"],
Cell[186100, 3582, 1473, 29, 105, "Input",ExpressionUUID->"92706b26-abdc-4f77-a30d-80624af154e5"],
Cell[187576, 3613, 815, 20, 63, "Input",ExpressionUUID->"c26016dd-9b06-45c4-abf6-462057777cd7"],
Cell[188394, 3635, 950, 23, 84, "Input",ExpressionUUID->"b05f0187-dc2e-4978-a253-fb045d273b97"],
Cell[189347, 3660, 1896, 44, 147, "Input",ExpressionUUID->"a1d7a59a-1d67-406f-af0b-4fb8bcdea02b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191280, 3709, 211, 4, 69, "Chapter",ExpressionUUID->"aea75a9a-b06a-4ce3-be99-3bf24ea851d5"],
Cell[191494, 3715, 1007, 23, 72, "DisplayFormula",ExpressionUUID->"be6e18c1-2008-458b-89f3-9dbb6cec7e94"],
Cell[192504, 3740, 1992, 52, 84, "Input",ExpressionUUID->"c41597a3-d27e-4b5c-b6fa-c023f786e52a"],
Cell[194499, 3794, 1965, 54, 84, "Input",ExpressionUUID->"909ade8e-3a0c-4765-8559-7de93387baca"],
Cell[196467, 3850, 980, 18, 84, "Input",ExpressionUUID->"bd52f5c5-6b19-4b0f-ae9e-a58572b9a7e8"],
Cell[197450, 3870, 1184, 32, 84, "Input",ExpressionUUID->"9c34463c-5fe0-4210-aecb-1ad6a4d08d6a"],
Cell[198637, 3904, 1309, 26, 105, "Input",ExpressionUUID->"770a361c-2d20-4b8b-a678-87a51b64edde"],
Cell[199949, 3932, 945, 21, 63, "Input",ExpressionUUID->"222cb5fb-2275-432e-9ad9-e51a219a67cd"],
Cell[200897, 3955, 963, 23, 84, "Input",ExpressionUUID->"69046d28-2cdf-46ac-a547-385a32011d4a"],
Cell[201863, 3980, 2201, 51, 126, "Input",ExpressionUUID->"ea1e7fc8-7658-4458-ab04-5e63a4f74585"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204101, 4036, 197, 3, 69, "Chapter",ExpressionUUID->"621b4053-c226-4fc8-8674-43db3a93ff3e"],
Cell[204301, 4041, 1159, 28, 116, "DisplayFormula",ExpressionUUID->"a60e2f92-89ef-4000-ab84-564d2a384e3d"],
Cell[205463, 4071, 2320, 64, 126, "Input",ExpressionUUID->"0b592839-fe6a-4fce-aaee-5023a3aef461"],
Cell[207786, 4137, 1025, 24, 105, "Input",ExpressionUUID->"7f36452a-2a25-4cf5-935a-24c5553ef096"],
Cell[208814, 4163, 241, 4, 34, "Text",ExpressionUUID->"1bf73362-f9b7-4fea-b289-8bd5cc3df685"],
Cell[209058, 4169, 1111, 24, 105, "Input",ExpressionUUID->"14799a36-d379-403b-badb-85cc69027e3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210206, 4198, 193, 3, 69, "Chapter",ExpressionUUID->"edd27eaf-9ee0-437c-9a8f-fdb5eb7282b7"],
Cell[210402, 4203, 1248, 29, 116, "DisplayFormula",ExpressionUUID->"03aabfc7-f0ab-45fa-97bd-993de04ffa9b"],
Cell[211653, 4234, 2240, 63, 126, "Input",ExpressionUUID->"e5faf9a4-7867-48c8-8462-be06632e5d81"],
Cell[213896, 4299, 957, 23, 105, "Input",ExpressionUUID->"0d1c44d2-f978-47a5-bed2-cd3cd8fcf3f2"],
Cell[214856, 4324, 245, 4, 34, "Text",ExpressionUUID->"def23fce-ddac-41a6-bbf3-89455d6aaa62"],
Cell[215104, 4330, 1098, 24, 105, "Input",ExpressionUUID->"5e305e87-079c-4c4c-af0d-883615351972"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216239, 4359, 217, 5, 117, "Chapter",ExpressionUUID->"3869eecf-5a42-4547-900b-71db8a74489d"],
Cell[216459, 4366, 1665, 39, 160, "DisplayFormula",ExpressionUUID->"cf8216ff-2d92-4c98-93f0-6f365df1e695"],
Cell[218127, 4407, 2685, 76, 126, "Input",ExpressionUUID->"f403af78-8745-45e1-b23b-3a69db31107f"],
Cell[220815, 4485, 1021, 25, 105, "Input",ExpressionUUID->"a8e861ad-69cc-4901-9300-a57622e0f5a3"],
Cell[221839, 4512, 437, 9, 34, "Text",ExpressionUUID->"74c6e5f8-16d4-4f85-a038-ab2a00850613"],
Cell[CellGroupData[{
Cell[222301, 4525, 1126, 24, 105, "Input",ExpressionUUID->"c3bc371d-f9e6-49d9-9de6-20f1bb8b72bc"],
Cell[223430, 4551, 27240, 728, 1822, "Output",ExpressionUUID->"fb049091-61c7-4a41-ad27-f3296b790690"]
}, Closed]],
Cell[250685, 5282, 1311, 30, 81, "Input",ExpressionUUID->"8a950e83-a3e5-4484-9b04-5b55e9982e8e"],
Cell[251999, 5314, 417, 6, 34, "Text",ExpressionUUID->"ab5d904b-6710-4866-ab5f-297de61a6b81"],
Cell[252419, 5322, 994, 23, 84, "Input",ExpressionUUID->"70821b5f-de6f-452e-8913-07733aecd4e9"],
Cell[253416, 5347, 2284, 54, 147, "Input",ExpressionUUID->"cb1bacdf-de1b-4067-a27d-5a7a802caf78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255737, 5406, 210, 4, 69, "Chapter",ExpressionUUID->"47f6ea11-a9e3-48aa-b426-cdba0a1256ae"],
Cell[255950, 5412, 9673, 164, 137, "Input",ExpressionUUID->"e53c9ca3-afb9-4a61-8316-e2e32976e038"],
Cell[265626, 5578, 407, 8, 34, "Text",ExpressionUUID->"065803c8-87d4-4846-8e33-a646e579f3dc"],
Cell[266036, 5588, 621, 10, 27, "DisplayFormula",ExpressionUUID->"b75a53b1-5ec8-47a4-a7e0-541c875781f2"],
Cell[266660, 5600, 1093, 33, 63, "Input",ExpressionUUID->"bb1f667c-ceef-4581-8810-c1582578dd29"],
Cell[267756, 5635, 462, 10, 84, "Input",ExpressionUUID->"ba9eddaf-24da-4f8a-a7a8-509b93e585b3"],
Cell[268221, 5647, 672, 16, 84, "Input",ExpressionUUID->"23703b86-5526-4fdb-aa42-2e8bce4723b5"],
Cell[268896, 5665, 1149, 22, 63, "Input",ExpressionUUID->"0fa96532-aa07-4a68-8d88-a129afa6e9e0"],
Cell[270048, 5689, 1120, 25, 84, "Input",ExpressionUUID->"8b87dd15-7ec3-4a86-9081-d7de6cac14e5"],
Cell[271171, 5716, 1832, 41, 126, "Input",ExpressionUUID->"19d494b5-fce4-43d9-9451-48a0564fc88e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273040, 5762, 165, 3, 69, "Chapter",ExpressionUUID->"c6d13a37-8068-49b5-b441-43f018eb7f58"],
Cell[273208, 5767, 345, 7, 57, "Text",ExpressionUUID->"d5e07504-20d4-46da-b89b-68e0eb77660b"],
Cell[273556, 5776, 22815, 380, 175, "Input",ExpressionUUID->"05bcb0a2-a79a-4c5f-90e3-128fcf8f639f"],
Cell[296374, 6158, 687, 17, 72, "DisplayFormula",ExpressionUUID->"8ac3a0f0-aa18-4497-a0c0-5e49fc6a590e"],
Cell[297064, 6177, 1221, 35, 84, "Input",ExpressionUUID->"73838254-4c19-470b-9562-2c7184c86546"],
Cell[298288, 6214, 275, 4, 34, "Text",ExpressionUUID->"bd6ce188-afb5-4490-8aad-92edee0d83a9"],
Cell[298566, 6220, 526, 15, 27, "DisplayFormula",ExpressionUUID->"a4857425-0965-487d-b32f-ec9a13c0c883"],
Cell[299095, 6237, 267, 4, 34, "Text",ExpressionUUID->"07ea66fe-8769-476c-b5b1-4cb93fb1a38d"],
Cell[299365, 6243, 665, 14, 41, "Input",ExpressionUUID->"63c8cde0-7b79-4381-9a01-5eb9e8ad10db"],
Cell[300033, 6259, 286, 6, 41, "Input",ExpressionUUID->"d24899ae-083c-4937-af2f-08e013738774"],
Cell[300322, 6267, 1646, 28, 34, "Text",ExpressionUUID->"03a4880d-8105-4480-b818-c1b7651c1207"],
Cell[301971, 6297, 2551, 60, 84, "Input",ExpressionUUID->"c54b417b-f899-4100-862c-84571765aeb4"],
Cell[304525, 6359, 592, 12, 63, "Input",ExpressionUUID->"8bb79677-fab5-493b-901d-e6879b8d867d"],
Cell[305120, 6373, 1045, 25, 84, "Input",ExpressionUUID->"d8cfab00-7cc4-4c30-9811-e19c00e6e12e"],
Cell[306168, 6400, 2438, 42, 63, "Input",ExpressionUUID->"f7a04801-c7dd-4f89-b340-599e26216660"],
Cell[308609, 6444, 1148, 26, 63, "Input",ExpressionUUID->"1f85d078-4593-426d-a460-4c6e34ace981"],
Cell[309760, 6472, 2005, 44, 126, "Input",ExpressionUUID->"4adb890d-6d67-4100-a8c2-6095ee5afc81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311802, 6521, 219, 4, 69, "Chapter",ExpressionUUID->"c4011650-044d-41ae-b8d7-ec08175c4f7c"],
Cell[312024, 6527, 467, 8, 57, "Text",ExpressionUUID->"1ed20724-c589-4398-972b-0c63d02aad70"],
Cell[312494, 6537, 133015, 2186, 262, "Input",ExpressionUUID->"c6165306-93a8-4c53-b938-5a7d9de92f0d"],
Cell[445512, 8725, 901, 23, 116, "DisplayFormula",ExpressionUUID->"c9815ac4-2378-4b4e-94c3-e66deda972f2"],
Cell[446416, 8750, 229, 5, 34, "Text",ExpressionUUID->"197a33d0-b482-4d63-8d54-e79ba16fb57a"],
Cell[446648, 8757, 575, 16, 27, "DisplayFormula",ExpressionUUID->"3ccc7fca-8ac3-46a9-b1ba-5ec371fbfadf"],
Cell[447226, 8775, 251, 6, 57, "Text",ExpressionUUID->"764d909b-2233-41e3-88cd-87eb634f2132"],
Cell[447480, 8783, 871, 24, 41, "Input",ExpressionUUID->"86fed51f-8925-42c4-81c4-b4cd9d25b075"],
Cell[448354, 8809, 284, 7, 34, "Text",ExpressionUUID->"d88a3b47-8317-4526-bcca-e68f1518953b"],
Cell[448641, 8818, 1236, 34, 63, "Input",ExpressionUUID->"38bdd44e-bce7-4a66-a898-7d295a946a41"],
Cell[449880, 8854, 261, 6, 34, "Text",ExpressionUUID->"8346b97b-4bf5-493a-a522-3a87b2bc60d6"],
Cell[450144, 8862, 935, 26, 41, "Input",ExpressionUUID->"3c42e674-b779-4328-b997-46d291e958cf"],
Cell[451082, 8890, 167, 3, 34, "Text",ExpressionUUID->"6771933d-fc47-4ca5-92d1-c373a5af6659"],
Cell[451252, 8895, 946, 24, 41, "Input",ExpressionUUID->"b49990b2-b949-4e9a-af31-4392c695acb3"],
Cell[452201, 8921, 235, 4, 34, "Text",ExpressionUUID->"efee9036-e978-4a59-97ed-3218552e0d11"],
Cell[452439, 8927, 678, 19, 41, "Input",ExpressionUUID->"26a6528f-7277-4709-9462-e490fc35e135"],
Cell[453120, 8948, 711, 20, 41, "Input",ExpressionUUID->"fbc41a45-5772-4d02-9a6f-bc1ffbe20a7b"],
Cell[453834, 8970, 302, 5, 34, "Text",ExpressionUUID->"eefbf056-7bb2-40d0-8e70-f31005254eea"],
Cell[454139, 8977, 2499, 53, 63, "Input",ExpressionUUID->"7c1a8aee-c183-4289-8c87-feada454a556"],
Cell[456641, 9032, 658, 14, 84, "Input",ExpressionUUID->"6646de3c-de3b-47c4-9159-e1b270018129"],
Cell[457302, 9048, 890, 20, 84, "Input",ExpressionUUID->"6df81c22-6502-4b29-a9ae-de7ae1346226"],
Cell[458195, 9070, 2838, 50, 63, "Input",ExpressionUUID->"56b9892f-3635-430f-b0f9-0fb33a839578"],
Cell[461036, 9122, 1217, 28, 84, "Input",ExpressionUUID->"6b7a4f8d-f5ae-4f65-9417-9f2073bbbb69"],
Cell[462256, 9152, 2093, 46, 126, "Input",ExpressionUUID->"b87a828f-9044-4fdc-80b5-ca4250f34219"]
}, Open  ]]
}, Open  ]]
}
]
*)

